lang['File'] = 'File';
lang['Edit'] = 'Edit';
lang['View'] = 'View';
lang['Open'] = 'Open';
lang['Rename'] = 'Rename';
lang['New folder'] = 'New folder';
lang['New simple document'] = 'New simple document';
lang['New document'] = 'New document';
lang['New spreadsheet'] = 'New spreadsheet';
lang['Cut'] = 'Cut';
lang['Copy'] = 'Copy';
lang['Paste'] = 'Paste';
lang['Back'] = 'Back';
lang['Forward'] = 'Forward';
lang['New'] = 'New';
lang['Upload'] = 'Upload';
lang['Places'] = 'Places';
lang['Shared'] = 'Shared';
lang['Groups'] = 'Groups';
lang['By me'] = 'By me';
lang['By my contacts'] = 'By my contacts';
lang['All my groups'] = 'All my groups';
lang['Delete'] = 'Delete';
lang['Download'] = 'Download';
lang['Search'] = 'Search';
/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

qx.Class.define('eyeos.files.Sidebar', {
	
	extend: qx.ui.container.Composite,

	construct: function (label, items, controller, acceptNewItems) {
		this.base(arguments);
		this._label = label;
		this._items = items;
		this.setController(controller);
		this.setAcceptNewItems(acceptNewItems);
		this._buildLayout(label);

		this._title.addListener('changeValue', function (e) {
			if (this._title.isValue()) {
				this._layoutBase.setVisibility('excluded');
			} else {
				this._layoutBase.setVisibility('visible');
			}
		}, this);
	},

	properties: {
		acceptNewItems: {
			type: 'Boolean',
			init: true
		}
	},

	members: {
		_controller: null,
		_label: null,
		_items: null,
		_dragging: false,
		_layoutBase: this,

		_buildLayout: function (label, items) {
			this.setLayout(new qx.ui.layout.VBox());
			this.set({
				alignY: 'top',
				width: 200,
				maxWidth: 200
			});
			this._title = new eyeos.files.SideBarTitle(this._label);
			this.add(this._title);
			this._layoutBase = new qx.ui.container.Composite(new qx.ui.layout.VBox());
			this.add(this._layoutBase);
			this._rebuild();
		},

		_rebuild: function () {
			this._layoutBase.removeAll();
			var newPlace = new eyeos.files.SideBarNewPlace(this, this.getAcceptNewItems(), 0);
			this._addPlace(newPlace);
			for (var i = 0; i < this._items.length; ++i) {
				var item = new eyeos.files.SideBarItem(this._items[i].label, this._items[i].path, this, this.getAcceptNewItems(), i)
				if (this._items[i].icon) {
					item.set({
						icon: this._items[i].icon
					});
				}
				newPlace = new eyeos.files.SideBarNewPlace(this, this.getAcceptNewItems(), parseInt(i + 1));
				this._addItem(item);
				this._addPlace(newPlace);
			}
		},

		_addItem: function (item) {
			this._layoutBase.add(item, {flex: 1});
			this._addListenersToItem(item);
			item._currentBar = this;
		},

		_addPlace: function (place) {
			this._layoutBase.add(place, {flex: 1});
			this._addListenersToPlace(place);
		},

		_addListenersToPlace: function (place) {
			
			var self = this;

			if (place.getAcceptsDrop()) {
				place.addListener('dragover', function (e) {
					self.setDragging(true);
					this.setDecorator(this._decoratorDragOver);
				});

				place.addListener('dragleave', function (e) {
					this.setDecorator(this._decoratorMouseOut);
				});

				place.addListener('dragend', function (e) {
					self.setDragging(false);
					this.setDecorator(this._decoratorMouseOut);
				});

				place.addListener('drop', function (e) {
					if (e.getRelatedTarget() instanceof eyeos.files.IconViewItem && e.getRelatedTarget().getFile().getType() == 'folder') {
						self.setDragging(false);
						self.addNewPlace(e.getRelatedTarget(), this._position);
					}
					this.setDecorator(this._decoratorMouseOut);
				});
			}
		},

		_addListenersToItem: function (item) {

			var self = this;

			item.addListener('click', function () {
				if (!self.isDragging()) {
					self.getController().getModel().setCurrentPath(['path', this.getPath()]);
					self.getController()._browse(true);
				}
			});

			item.addListener('mouseover', function () {
				if (!self.isDragging()) {
					this.onMouseOver();
				}
			});

			item.addListener('mouseout', function (e) {
					if (!qx.ui.core.Widget.contains(item, e.getRelatedTarget())) {
						this.onMouseOut();
					}
			});

			if (item.getAcceptsDrop()) {
				item.addListener('dragover', function (e) {
					self.setDragging(true);
					this.setDecorator(this._decoratorDragOver);
				});

				item.addListener('dragleave', function (e) {
					this.setDecorator(this._decoratorMouseOut);
				});

				item.addListener('dragend', function (e) {
					self.setDragging(false);
					this.setDecorator(this._decoratorMouseOut);
				});

				item.addListener('drop', function (e) {
					var movingFile = e.getRelatedTarget();
					if (movingFile != null && movingFile instanceof eyeos.files.IconViewItem) {
						self.setDragging(false);
						this._clicked = true;

						this.setDecorator(this._decoratorMouseOut);
						
						if (movingFile.getFile().getType() == 'folder' && movingFile.getFile().getAbsolutePath() != this.getPath() && movingFile.getFile().getPath() != this.getPath()) {
							self.getController().specialMove(this.getPath());
						}

						if (movingFile.getFile().getType() != 'folder' && movingFile.getFile().getPath() != this.getPath()) {
							self.getController().specialMove(this.getPath());
						}
					}
				});

				item._image.addListener('click', function () {
					self.removePlace(this);
				}, item);
			}

		},

		addNewPlace: function (place, position) {
			var placeToAdd = true;
			var items = this._items;
			for (var i = 0; i < items.length; ++i) {
				if (items[i].path == place.getFile().getAbsolutePath()) {
					placeToAdd = false;
					i = parseInt(this._items.length + 1);
				}
			}

			if (placeToAdd) {
				var myObject = {
					label: place.getFile().getName(),
					path: place.getFile().getAbsolutePath()
				}

				var newArray = new Array();
				
				for (var i = 0; i < this._items.length; ++i) {
					if (i == position) {
						newArray.push(myObject);	
					}
					newArray.push(this._items[i]);
				}

				if (position >= this._items.length) {
					newArray.push(myObject);
				}

				this._items = newArray;
			}

			this._rebuild();
		},

		getPlaceByPosition: function (id) {
			var childrenList = this._layoutBase.getChildren();
			for (var i = 0; i < childrenList.length; ++i) {
				if (childrenList[i] instanceof eyeos.files.SideBarNewPlace && childrenList[i]._position == parseInt(id - 1)) {
					return childrenList[i];
				}
			}
		},

		removePlace: function (place) {
			for (var i = 0; i < this._items.length; ++i) {
				if (this._items[i].path == place.getPath()) {
					this._items.splice(i, 1);
					place.destroy();
					this._rebuild();
					i = parseInt(this._items.length + 1);
				}
			}
		},

		getController: function () {
			return this._controller;
		},

		setController: function (controller) {
			this._controller = controller;
		},

		getLayoutBase: function () {
			return this._layoutBase;
		},

		setDragging: function (value) {
			this._dragging = value;
		},

		isDragging: function (value) {
			return this._dragging;
		}
	}
});


/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

qx.Class.define('eyeos.files.IconViewItem', {

	extend: qx.ui.core.Widget,

	construct: function (manager, file) {
		
		this.base(arguments);

		// EXTENSIONS
		this._imageExtensions = ['JPG', 'JPEG', 'PNG', 'GIF'];
		this._videoExtensions = ['FLV'];
		this._musicExtensions = ['MP3', 'M4A'];
		this._docExtensions = ['DOC', 'TXT', 'XLS', 'ODS', 'EDOC'];
		this._zipExtensions = ['ZIP'];

		// Reference and parent objects
		this.setManager(manager);
		this.setFile(file);
		this.setCurrentPath(this.getManager().getViewManager().getModel().getCurrentPath()[1]);
		// Layout and listeners
		this._buildLayout();
		this._addListeners();

		var filesQueue = eyeos.filesQueue.getInstance();

		if (this.getFile().isCutted() && filesQueue.getMoveQueue().indexOf(this.getFile())) {
			this.unselect();
			this.set({
				draggable: false,
				enabled: false,
				focusable: false,
				opacity: 0.5
			});
		} else if (this.getFile().isCutted() && !filesQueue.getMoveQueue().indexOf(this.getFile())) {
			this.getFile().setCutted(false);
		}
	},

	properties: {
		manager: {
			check: 'Object'
		},

		file: {
			check: 'Object'
		},

		currentPath: {
			check: 'String',
			init: null
		}
	},

	members: {
		_activeMenu: false,
		_editing: false,
		_file: null,
		_manager: null,
		_controller: null,
		_decoratorMouseOut: new qx.ui.decoration.Single(1, 'solid', 'transparent'),
		_decoratorMouseOver: new qx.ui.decoration.Single(1, 'solid', '#D3D3D3'),
		_decoratorMouseSelected: new qx.ui.decoration.Single(1, 'solid', '#ADCDF2').set({backgroundColor: '#EFF5FC'}),
		_decoratorDragOver: new qx.ui.decoration.Single(1, 'solid', '#74a100').set({backgroundColor: '#b9d07f'}),
		_layoutIcon: null,
		_layoutButtonSelection: null,
		_layoutButtonMenu: null,
		_selected: false,
		
		_buildLayout: function () {

			this.set({
				draggable: true,
				droppable: true,
				padding: 0,
				width: 95,
				height: 95
			});

			this.addListener('dragstart', function(e) {
				var x = e.getDocumentLeft();
				var y = e.getDocumentTop();
				y = y - 30;
				x = x + 1;
				this.clipImage = e.getTarget()._itemImage.clone();
				this.clipImage.setOpacity(0.5);
				document.eyeDesktop.add(this.clipImage);
				this.clipImage.set({
					zIndex: 100003
				});
				this.clipImage.setMarginTop(y);
				this.clipImage.setMarginLeft(x);
			}, this);

			this.addListener('drag', function(e) {
				var x = e.getDocumentLeft();
				var y = e.getDocumentTop();
				y = y - 30;
				x = x + 1;
				this.clipImage.setMarginTop(y);
				this.clipImage.setMarginLeft(x);
			}, this);

			this.addListener('dragend', function(e) {
				this.clipImage.destroy();
			}, this);

			var layout = new qx.ui.layout.Canvas();
			this._setLayout(layout);

			if (this.getCurrentPath() != 'share:///' && this.getCurrentPath() != 'workgroup:///') {
				var menu;
				if (this.getCurrentPath().substr(0, 8) != 'share://' && this.getCurrentPath() != 'workgroup://') {
					menu = [
						{
							label: tr('Open'),
							image: 'index.php?extern=images/16x16/actions/document-open.png',
							id: 'openFile()'
						}, {
							label: tr('Rename'),
							image: 'index.php?extern=images/16x16/actions/edit-rename.png',
							id: 'editFile()'
						}, {
							label: tr('Separator'),
							id: 'separator'
						}, {
							label: tr('Cut'),
							image: 'index.php?extern=images/16x16/actions/edit-cut.png',
							id: 'cutFile()'
						}, {
							label: tr('Copy'),
							image: 'index.php?extern=images/16x16/actions/edit-copy.png',
							id: 'copyFile()'
						}, {
							label: tr('Paste'),
							image: 'index.php?extern=images/16x16/actions/edit-paste.png',
							id: 'pasteFile()'
						}, {
							label: tr('Separator'),
							id: 'separator'
						}, {
							label: tr('Delete'),
							image: 'index.php?extern=images/16x16/actions/edit-delete.png',
							id: 'deleteFile()'
						}, {
							label: tr('Download'),
							image: 'index.php?extern=images/16x16/actions/edit-paste.png',
							id: 'downloadFile()'
						}, {
							label: tr('Share by URL'),
							image: 'index.php?extern=images/16x16/categories/applications-internet.png',
							id: 'shareURLFile()'
						}
					];
				} else {
					menu = [
						{
							label: tr('Open'),
							image: 'index.php?extern=images/16x16/actions/document-open.png',
							id: 'openFile()'
						}, {
							label: tr('Copy'),
							image: 'index.php?extern=images/16x16/actions/edit-copy.png',
							id: 'copyFile()'
						}, {
							label: tr('Download'),
							image: 'index.php?extern=images/16x16/actions/edit-paste.png',
							id: 'downloadFile()'
						}
					];
				}

				var borderMenu = new qx.ui.decoration.Single(1, 'solid', '#C3C3C3');
				this._menu = new qx.ui.menu.Menu().set({
					decorator: borderMenu,
					shadow: null,
					padding: 3,
					backgroundColor: '#F3F3F3'
				});

				for (var i = 0; i < menu.length; ++i) {
					var item = null;
					if (menu[i].id != 'separator') {
						item = new qx.ui.menu.Button(menu[i].label, menu[i].image);
						item.setUserData('id', menu[i].id);
						item._manager = this.getManager().getViewManager().getController();
						item.addListener('appear', function (e) {
							this.setBackgroundColor(null);
							this.setDecorator(null);
							this.setTextColor('#4A4A4A');
						});
						item.addListener('mouseover', function (e) {
							this.setBackgroundColor('#D3D3D3');
							this.setTextColor('#404040');
						});
						item.addListener('mouseout', function (e) {
							this.setDecorator(null);
							this.setBackgroundColor(null);
						});
						item.addListener('execute', function (e) {
							eval('this._manager.'+this.getUserData('id'));
						});
					} else {
						item = new qx.ui.menu.Separator();
					}
					this._menu.add(item);
				}

				this.setContextMenu(this._menu);

				this._layoutButtonSelection = new qx.ui.form.Button(null, null).set({
					padding: 0,
					margin: 0,
					decorator: null
				});
				this._add(this._layoutButtonSelection, {
					left: 5,
					top: 5
				});
				this._layoutButtonMenu = new qx.ui.form.MenuButton(null, null, this._menu).set({
					padding: 0,
					margin: 0,
					decorator: null
				});
				this._add(this._layoutButtonMenu, {
					right: 5,
					top: 5
				});

			}

			this._itemImage = new qx.ui.basic.Image().set({
				width: 48,
				height: 48,
				allowGrowY: false,
				allowGrowX: false,
				scale: true
			});

			this.updateImage();

                        var name = this.getFile().getName();
                        if(this.getFile().getExtension() == 'LNK') {
                            name = name.substr(0, name.length-4);
                        }
			this._itemLabel = new qx.ui.basic.Label().set({
				value: name,
				rich: true,
				width: 83,
				maxHeight: 40,
				textAlign: 'center'
			});

			this._itemInput = new qx.ui.form.TextField(this.getFile().getName()).set({
				width: 83,
				maxHeight: 40
			});



			this._add(this._itemImage, {top: 10, left: 20});
			this._add(this._itemLabel, {top: 60, left: 5});
			this._add(this._itemInput, {top: 60, left: 5});
			this._itemInput.setVisibility('excluded');

			this._itemInput.addListener('mousedown', function(e) {
				e.stopPropagation();
			}, this);
			this.setDecorator(this._decoratorMouseOut);
		},

		updateImage: function () {
			var image = null;
			if (this.getFile().getType() == 'folder') {
				if(this.getFile().getUserData('sharedByContacts') || this.getManager().getViewManager().getModel().getCurrentPath()[1].substr(0,8) == 'share://') {
					var checknum = this.getManager().getViewManager().getController().getApplication().getChecknum();
					image = 'index.php?checknum=' + checknum + '&message=__UserInfo_getAvatarPicture&params[userName]=' + this.getFile().getName();
					if (this.getFile().getContentSize() > 0) {
						this._add(new qx.ui.basic.Image('index.php?extern=images/shared_on.png').set({zIndex: 20}), {top: 50, left: 17});
					}
					
				} else if (this.getFile().getContentSize() == 0) {
					image = 'index.php?extern=images/48x48/places/folder.png';
				} else {
					image = 'index.php?extern=images/48x48/places/folder-documents.png';
				}
			} else {
				if (this._docExtensions.indexOf(this.getFile().getExtension()) != -1) {
					if(this.getFile().getShared() != 0) {
						image = 'index.php?extern=images/iconsshared/application-msword.png';
					} else{
						image = 'index.php?extern=images/48x48/mimetypes/application-msword.png';
					}
				} else if (this._imageExtensions.indexOf(this.getFile().getExtension()) != -1) {
					if(this.getFile().getShared() != 0) {
						image = 'index.php?extern=images/iconsshared/imatge.png';
					} else{
						image = 'index.php?extern=images/48x48/mimetypes/image-x-generic.png';
					}
				} else if (this._musicExtensions.indexOf(this.getFile().getExtension()) != -1) {
					if(this.getFile().getShared() != 0) {
						image = 'index.php?extern=images/iconsshared/audio.png';
					} else{
						image = 'index.php?extern=images/48x48/mimetypes/audio-x-generic.png';
					}
				} else if (this._videoExtensions.indexOf(this.getFile().getExtension()) != -1) {
					if(this.getFile().getShared() != 0) {
						image = 'index.php?extern=images/iconsshared/video.png';
					} else{
						image = 'index.php?extern=images/48x48/mimetypes/audio-vnd.rn-realvideo.png';
					}
				} else if (this._zipExtensions.indexOf(this.getFile().getExtension()) != -1) {
					if(this.getFile().getShared() != 0) {
						image = 'index.php?extern=images/iconsshared/zip.png';
					} else{
						image = 'index.php?extern=images/48x48/mimetypes/application-x-gzip.png';
					}
				} else if(this.getFile().getExtension() == 'LNK') {
					var info = qx.util.Json.parse(this.getFile().getContent());
					image = info.icon;
				} else if(this.getFile().getExtension() == 'PDF') {
					if(this.getFile().getShared() != 0) {
						image = 'index.php?extern=images/iconsshared/pdf.png';
					} else{
						image = 'index.php?extern=images/48x48/mimetypes/application-pdf.png';
					}
					
				}else {
					if(this.getFile().getShared() != 0) {
						image = 'index.php?extern=images/iconsshared/unknown.png';
					} else{
						image = 'index.php?extern=images/48x48/mimetypes/application-x-zerosize.png';
					}
				}
			}
			image = image + '&nocache=' + eyeos.utils.getRandomValue();
			this._itemImage.setSource(image);
		},

		_addListeners: function () {	

			this.addListener('mouseover', function (e) {
				if (!this.isSelected() && !this.getManager().isDragging() && this.isEnabled()) {
					this.setDecorator(this._decoratorMouseOver);
//					if (this.getCurrentPath() != 'share:///' && this.getCurrentPath() != 'workgroup:///') {
//						//this._layoutButtonSelection.setIcon('index.php?extern=images/add1.png');
//						//this._layoutButtonMenu.setIcon('index.php?extern=images/arrow1.png');
//					}
				}
			});

			this.addListener('mouseout', function (e) {
				if (!qx.ui.core.Widget.contains(this, e.getRelatedTarget())) {
					if (!this.isSelected() && !this.getManager().isDragging()) {
						this.setDecorator(this._decoratorMouseOut);
//						if (this.getCurrentPath() != 'share:///' && this.getCurrentPath() != 'workgroup:///') {
//							//this._layoutButtonSelection.setIcon(null);
//							//this._layoutButtonMenu.setIcon(null);
//						}
					}
				}
			});

			if (this.getCurrentPath() != 'share:///' && this.getCurrentPath() != 'workgroup:///') {
				this._itemInput.addListener('keypress', function (e) {
					if (e.getKeyIdentifier() == 'Enter') {
						this._itemInput.exclude();
					} else if (e.getKeyIdentifier() == 'Escape') {
						this.cancelEdit();
					}
				}, this);

				this._itemInput.addListener('blur', function (e) {
					this.save();
				}, this);
			}
		},

		save: function () {
			if (this.getFile().getType() == 'file') {
				var fileAtInput = this._itemInput.getValue();
				var fileAtInputSplitted = fileAtInput.split('.');
				var extension = fileAtInputSplitted[fileAtInputSplitted.length - 1];
				if (extension != '' && extension != null && fileAtInputSplitted.length >= 2) {
					if (extension.toUpperCase() != this.getFile().getExtension()) {
						var optionPane = new eyeos.dialogs.OptionPane(
							tr("Are you sure you want to change the extension to the file?"),
							eyeos.dialogs.OptionPane.QUESTION_MESSAGE,
							eyeos.dialogs.OptionPane.YES_NO_CANCEL_OPTION);
						var dialog = optionPane.createDialog(this.getManager().getViewManager(), "Files", function(result) {
							if (result == 1) {
								this.getFile().setExtension(extension.toUpperCase());
								this.getManager().getViewManager().getController().renameFile(this._itemInput.getValue(), this._itemLabel);
							}
						}, this);
						dialog.open();
					} else {
						this.getManager().getViewManager().getController().renameFile(this._itemInput.getValue(), this._itemLabel, this);
					}
				} else {
					var optionPane = new eyeos.dialogs.OptionPane(
						tr("Are you sure you want to leave the file without extension?"),
						eyeos.dialogs.OptionPane.QUESTION_MESSAGE,
						eyeos.dialogs.OptionPane.YES_NO_CANCEL_OPTION);
					var dialog = optionPane.createDialog(this.getManager().getViewManager(), "Files", function(result) {
						if (result == 1) {
							this.getFile().setExtension(null);
							this.getManager().getViewManager().getController().renameFile(this._itemInput.getValue(), this._itemLabel);
						}
					}, this);
					dialog.open();
				}
			} else {
				this.getManager().getViewManager().getController().renameFile(this._itemInput.getValue(), this._itemLabel);
			}
			
			this.cancelEdit();
		},

		resetAllSelected: function (params) {
			var childrenList = this.getManager().getLayoutBase().getChildren();
			for (var i = 0; i < childrenList.length; ++i) {
				if (childrenList[i].isSelected()) {
					if (params == 'dragend') {
						childrenList[i].setDroppable(true);
					} else if (params == 'drop') {
						childrenList[i].destroy();
					} else {
						childrenList[i].unselect();
					}
				}
			}
		},

		setSelected: function (value) {
			this._selected = value
		},

		isSelected: function () {
			return this._selected;
		},

		getName: function () {
			return this._itemLabel.getValue();
		},

		getCurrentPanel: function () {
			return this._currentPanel;
		},

		setCurrentPanel: function (panel) {
			this._currentPanel = panel;
		},

		edit: function () {
			this._editing = true;
			this._itemInput.setValue(this._itemLabel.getValue());
			this._itemLabel.setVisibility('excluded');
			this._itemInput.setVisibility('visible');
			this._itemInput.focus();
			this._itemInput.addListener('focusin', function (e) {
				this.setTextSelection(0, this.getValue().lastIndexOf('.'));
				//this.selectAllText();
			});
		},

		cancelEdit: function () {
			this._editing = false;
			this._itemLabel.setVisibility('visible');
			this._itemInput.setVisibility('excluded');
		},

		select: function () {
			this.setDecorator(this._decoratorMouseSelected);
			if (this.getCurrentPath() != 'share:///' && this.getCurrentPath() != 'workgroup:///') {
				this._layoutButtonSelection.setIcon('index.php?extern=images/less2.png');
				this._layoutButtonMenu.setIcon('index.php?extern=images/arrow3.png');
			}
			this.setSelected(true);
			this.fireEvent('selected');
		},

		unselect: function () {
			this._editing = false;
			this._selected = false;
			this._activeMenu = false;
			this._itemLabel.setVisibility('visible');
			this._itemInput.setVisibility('excluded');
			this.setDecorator(this._decoratorMouseOut);
			if (this.getCurrentPath() != 'share:///' && this.getCurrentPath() != 'workgroup:///') {
				this._layoutButtonSelection.setIcon(null);
				this._layoutButtonMenu.setIcon(null);
			}
			this.setSelected(false);

			this.fireEvent('unselected');
		}
	}
});


/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

qx.Class.define('eyeos.files.SideBarNewPlace', {

	extend: qx.ui.container.Composite,

	construct: function (manager, droppable, position) {

		this.base(arguments);
		this._position = position;
		this.setAcceptsDrop(droppable);
		this._buildLayout();
		// Reference and parent objects
		this.setManager(manager);
	},

	properties: {
		acceptsDrop: {
			check: 'Boolean',
			init: false
		}
	},

	members: {
		_manager: null,

		_decoratorDragOver: new qx.ui.decoration.Single(1, 'solid', '#74a100').set({backgroundColor: '#b9d07f'}),
		_decoratorMouseOut: new qx.ui.decoration.Single(1, 'solid', 'transparent'),

		_buildLayout: function () {
			this.setLayout(new qx.ui.layout.HBox());
			this.set({
				height: 5,
				minHeight: 5,
				maxHeight: 5
			});

			if (this.getAcceptsDrop()) {
				this.setDroppable(true);
			}
		},

		getManager: function () {
			return this._manager;
		},

		setManager: function (manager) {
			this._manager = manager;
		}
	}
});

/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

qx.Class.define('eyeos.files.HeaderBarItem',  {

	extend: qx.ui.core.Widget,

	construct: function (manager, path, name, clickable, droppable) {
		this.base(arguments);
		if (droppable) {
			this.setAcceptsDrop(true);
		}
		this._clickable = clickable;
		this.setManager(manager);
		this.setPath(path);
		this._buildLayout(name);
	},

	properties: {
		acceptsDrop: {
			check: 'Boolean',
			init: false
		}
	},

	members: {

		_clickable: null,
		_manager: null,
		_file: null,
		_decoratorMouseOut: new qx.ui.decoration.Single(1, 'solid', 'transparent'),
		_decoratorMouseOver: new qx.ui.decoration.Single(1, 'solid', '#A3A3A3').set({backgroundColor: '#D3D3D3'}),
		_decoratorDragOver: new qx.ui.decoration.Single(1, 'solid', '#74a100').set({backgroundColor: '#b9d07f'}),

		_buildLayout: function (name) {
			this.set({
				droppable: false,
				padding: 5
			});

			if (this.getAcceptsDrop()) {
				this.set({droppable: true});
			}

			var layout = new qx.ui.layout.HBox();
			this._setLayout(layout);

			this._label = new qx.ui.basic.Label(tr(name));
			this._add(this._label, {flex: 1});
			if (this._clickable) {
				var image = new qx.ui.basic.Image('index.php?extern=images/arrowHeader.png').set({
					paddingTop: 3,
					paddingLeft: 7
				});
				this._add(image);
			}
			this._label.setDecorator(this._decoratorMouseOut);
		},

		getManager: function () {
			return this._manager;
		},

		setManager: function (manager) {
			this._manager = manager;
		},

		getPath: function () {
			return this._path;
		},

		setPath: function (path) {
			this._path = path;
		}
	}
});

/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

qx.Class.define('eyeos.files.ViewManager', {

	extend: eyeos.ui.Window,

	construct: function (controller, model, application, caption, icon, fakeMinimize, fakeClose) {
		arguments.callee.base.call(this, application, caption, icon, fakeMinimize, fakeClose);
		this.setController(controller);
		this.setModel(model);
		this.setKeyPress(false);
		this._buildLayout();
		this._buildMenuBar();
		this._buildToolBar();
		this._buildSideBar();
		this._buildContent();
		this._addListeners();
		this.set({
			width: 800,
			height: 450
		});
		this.open();
                this.toggleShowStatusbar();
	},

	properties: {
		controller: {
			check: 'Object'
		},

		model: {
			check: 'Object'
		},

		keyPress: {
			check: 'Boolean'
		}
	},

	members: {

		_content: null,
		_mainView: null,
		_menuBar: null,
		_searchBox: null,
		_sideBar: null,
		_toolBar: null,
		_toolBarLayout: null,
		_top: null,

		close: function () {
			var dBusListeners = this.getController()._dBusListeners
			var dBus = eyeos.messageBus.getInstance();
			for (var i = 0; i < dBusListeners.length; ++i) {
				dBus.removeListenerById(dBusListeners[i]);
			}
			this.base(arguments);
		},

		_buildLayout: function () {

			this.setContentPadding(0);
			this.setLayout(new qx.ui.layout.HBox());

			this._socialBar = new eyeos.socialbar.SocialBar('#FFFFFF');

			this._mainWindow = new qx.ui.container.Composite(new qx.ui.layout.VBox());

			var borderBottom = new qx.ui.decoration.Single(2, 'solid', '#D3D3D3').set({
				styleLeft: null,
				styleTop: null,
				styleRight: null
			});

			var borderRight = new qx.ui.decoration.Single(1, 'solid', '#D3D3D3').set({
				styleLeft: null,
				styleTop: null,
				styleBottom: null
			});

			this._top = new qx.ui.container.Composite(new qx.ui.layout.VBox()).set({decorator: borderBottom});
			this._menuBar = new qx.ui.menubar.MenuBar().set({decorator: null, backgroundColor: '#FCFCFC'});
			this._toolBarLayout = new qx.ui.container.Composite(new qx.ui.layout.HBox()).set({
				backgroundColor: '#FCFCFC'
			});
			this._searchBox = new qx.ui.form.TextField(tr('Search')).set({
				marginTop: 8,
				marginRight: 7,
				marginLeft: 20,
				width: 120
			});
			this._searchBox.addListener('focusin', function (e) {
				if (this.getValue() == tr('Search')){
					this.setValue('');
				} 
			});
			this._searchBox.addListener('keypress', function(e) {
				if (e.getKeyIdentifier().toLowerCase() == 'enter') {
                                    this._view.filterBrowse(this._searchBox.getValue());
				}
			}, this);

			this._toolBar = new qx.ui.toolbar.ToolBar().set({decorator: null, backgroundColor: '#FCFCFC'});
			this._content = new qx.ui.container.Composite(new qx.ui.layout.HBox());
			this._sideBar = new qx.ui.container.Composite(new qx.ui.layout.VBox()).set({
				backgroundColor: '#FFFFFF',
				decorator: borderRight
			});

			this._mainView = new qx.ui.container.Composite(new qx.ui.layout.VBox());

			this._toolBarLayout.add(this._toolBar, {flex: 1});
			this._toolBarLayout.add(this._searchBox);
			this._top.add(this._menuBar);
			this._top.add(this._toolBarLayout);
			this._mainWindow.add(this._top);
			this._content.add(this._sideBar);
			this._content.add(this._mainView, {flex: 1});
			this._mainWindow.add(this._content, {flex: 1});
			this.add(this._mainWindow, {flex: 1})
			this.add(this._socialBar);
		},

		_buildDynamicBar: function (which, buttons, menus) {
			for (var i = 0; i < buttons.length; ++i) {
				var id = buttons[i].id;
				if (menus[id] != undefined) {
					var borderMenu = new qx.ui.decoration.Single(1, 'solid', '#C3C3C3');
					var menu = new qx.ui.menu.Menu().set({
						decorator: borderMenu,
						shadow: null,
						padding: 3,
						backgroundColor: '#F3F3F3'
					});
					for (var f = 0; f < menus[id].length; ++f) {

						if (menus[id] != undefined) {
							var menuItem = null;
							if (menus[id][f] && menus[id][f].id != 'separator') {
								menuItem = new qx.ui.menu.Button(tr(menus[id][f].name), menus[id][f].image);
								menuItem.setUserData('id', menus[id][f].id);
								menuItem._manager = this.getController();
								menuItem.addListener('appear', function (e) {
									this.setBackgroundColor(null);
									this.setDecorator(null);
									this.setTextColor('#4A4A4A');
								});
								menuItem.addListener('mouseover', function (e) {
									this.setBackgroundColor('#D3D3D3');
								});
								menuItem.addListener('mouseout', function (e) {
									if (!qx.ui.core.Widget.contains(menuItem, e.getRelatedTarget())) {
										this.setDecorator(null);
									}
									this.setBackgroundColor(null);
								});
								menuItem.addListener('execute', function (e) {
									//									//console.log('ye')
									eval('this._manager.'+this.getUserData('id'));
								});
							} else {
								menuItem = new qx.ui.menu.Separator();
							}
							menu.add(menuItem);
						}
					}
					if (which == 'menu') {
						var item = new qx.ui.menubar.Button(tr(buttons[i].name), buttons[i].image, menu);
					} else {
						var item = new qx.ui.toolbar.MenuButton(tr(buttons[i].name), buttons[i].image, menu);
						item.setIconPosition('top');
					}

				} else {
					if (which == 'menu') {
						var item = new qx.ui.menubar.Button(tr(buttons[i].name), buttons[i].image);
					} else {
						var item = new qx.ui.toolbar.Button(tr(buttons[i].name), buttons[i].image);
						item.setIconPosition('top');
					}

				}
				item.setUserData('id', buttons[i].id);
				item._manager = this.getController();
				item.addListener('execute', function (e) {
					eval('this._manager.'+this.getUserData('id'));
				});
				if (which == 'menu') {
					this._menuBar.add(item);
				} else {
					this._toolBar.add(item);
				}
			}
		},

		_buildMenuBar: function () {
			this._menuBar.removeAll();
			this._buildDynamicBar('menu', this.self(arguments).MENUBAR_BUTTONS, this.self(arguments).MENUBAR_MENUS);
		},

		_buildToolBar: function () {
			this._toolBar.removeAll();
			this._buildDynamicBar('toolbar', this.self(arguments).TOOLBAR_BUTTONS, this.self(arguments).TOOLBAR_MENUS);
		},

		_buildSideBar: function () {
			this._places = new eyeos.files.Sidebar(tr('Places'), this.self(arguments).PLACES, this.getController(), true);
			this._sideBar.add(this._places);

			this._shared = new eyeos.files.Sidebar(tr('Shared'), this.self(arguments).SHARES, this.getController(), false);
			this._sideBar.add(this._shared);
			
			this._workgroups = new eyeos.files.Sidebar(tr('Groups'), this.self(arguments).WORKGROUPS, this.getController(), false);
			this._sideBar.add(this._workgroups);
		},

		_buildContent: function () {
			this._header = new eyeos.files.HeaderBar(this);
			if (this.getModel().getDefaultView() == 'iconview') {
				this._view = new eyeos.files.IconView(this);
			} else {
				//this._view = new eyeos.files.IconView(this._checknum);
			}
			this._mainView.add(this._header);
			this._mainView.add(this._view, {flex: 1});
		},

		_addListeners: function () {
			this.addListener('keydown', function (e) {
				if (e.getKeyIdentifier() == 'Control') {
					this.setKeyPress(true);
				}
			});

			this.addListener('keyup', function (e) {
				if (e.getKeyIdentifier() == 'Control') {
					this.setKeyPress(false);
				}
			});

			//copy by shortcuts
			this.addListener('keypress', function(e) {
				if(this.isKeyPress()) {
					if(e.getKeyIdentifier() == 'C') {
						this.getController().copyFile();
					} else if(e.getKeyIdentifier() == 'V') {
						this.getController().pasteFile();
					}
				}
			}, this);

			var bus = eyeos.messageBus.getInstance();
			bus.addListener('eyeos_upload_uploadFinished', function(e) {
				if (e.getData() != null && e.getData() != undefined) {
					this.getController()._browsePath(this.getModel().getCurrentPath()[1], true);
				}
			}, this);

		},

		/**
		 * Common View functions that are linked to the member "_view" which can switch between IconView and the future ListView
		 * TODO: Some functions should be common and implemented directly here, not on every view
		 */

		reorder: function (filesToOrder) {
			return this._view.reorder(filesToOrder);
		},

		showBrowse: function () {
			this._header.showBrowse();
			this._view.showBrowse();
		},

		returnSelected: function () { 
			return this._view.returnSelected();
		},

		returnAll: function () { 
			return this._view.returnAll();
		},

		resetAllSelected: function () { 
			this._view.resetAllSelected();
		}
	},

	// function tr() to translate menus and toolbar isn't need here, because apply translate when items is constructing.
	statics: {
		MENUBAR_BUTTONS: [
			{
				name: 'File',
				id: 'menuBarFile'
			}, {
				name: 'Edit',
				id: 'menuBarEdit'
			}
//			{
//				name: 'View',
//				id: 'menuBarView'
//			}
		],

		MENUBAR_MENUS: {
			menuBarFile: [
				{
					name: 'Open',
					image: 'index.php?extern=images/22x22/actions/document-open.png',
					id: 'openFile()'
				}, {
					name: 'Rename',
					image: 'index.php?extern=images/22x22/actions/edit-rename.png',
					id: 'editFile()'
				}, {
					name: 'Separator',
					id: 'separator'
				}, {
					name: 'New folder',
					image: 'index.php?extern=images/22x22/places/folder.png',
					id: 'newFolder()'
				}, {
					name: 'New simple document',
					image: 'index.php?extern=images/22x22/mimetypes/text-x-generic.png',
					id: 'newFile(\'txt\')'
				}, {
					name: 'New document',
					image: 'index.php?extern=images/22x22/mimetypes/application-msword.png',
					id: 'newFile(\'edoc\')'
				}, {
					name: 'New link',
					image: 'index.php?extern=images/22x22/mimetypes/application-x-mswinurl.png',
					id: 'newLink()'
				}
			],

			menuBarEdit: [
				{
					name: 'Cut',
					image: 'index.php?extern=images/22x22/actions/edit-cut.png',
					id: 'cutFile()'
				}, {
					name: 'Copy',
					image: 'index.php?extern=images/22x22/actions/edit-copy.png',
					id: 'copyFile()'
				}, {
					name: 'Paste',
					image: 'index.php?extern=images/22x22/actions/edit-paste.png',
					id: 'pasteFile()'
				}
			]
		},

		TOOLBAR_BUTTONS: [
			{
				name: 'Back',
				id: 'toolBarBack()',
				image: 'index.php?extern=images/22x22/actions/go-previous.png'
			}, {
				name: 'Forward',
				id: 'toolBarForward()',
				image: 'index.php?extern=images/22x22/actions/go-next.png'
			}, {
				name: 'New',
				id: 'toolBarNew',
				image: 'index.php?extern=images/22x22/actions/document-new.png'
			}, {
				name: 'Upload',
				id: 'toolBarUpload()',
				image: 'index.php?extern=images/eyefiles/upload.png'
			}
		],

		TOOLBAR_MENUS: {
			toolBarNew: [
				{
					name: 'Folder',
					image: 'index.php?extern=images/eyefiles/folder.png',
					id: 'newFolder()'
				}, {
					name: 'Simple document',
					image: 'index.php?extern=images/eyefiles/doc.png',
					id: 'newFile(\'txt\')'
				}, {
					name: 'Document',
					image: 'index.php?extern=images/eyefiles/document.png',
					id: 'newFile(\'edoc\')'
				}, {
					name: 'Spreadsheet',
					image: 'index.php?extern=images/eyefiles/spreadsheet.png',
					id: 'newFile(\'xls\')'
				}, {
					name: 'New link',
					image: 'index.php?extern=images/22x22/mimetypes/application-x-mswinurl.png',
					id: 'newLink()'
				}
			],
			toolBarView: [
				{
					name: 'Icons',
					image: 'index.php?extern=images/eyefiles/view_icon.png'
				}, {
					name: 'List',
					image: 'index.php?extern=images/eyefiles/view_list.png'
				}, {
					name: 'Icon with types',
					image: 'index.php?extern=images/eyefiles/view_icon.png'
				}, {
					name: 'Hide SocialBar',
					image: 'index.php?extern=images/eyefiles/view_icon.png'
				}
			]
		},

		PLACES: [
			{
				label: 'Home',
				icon: 'index.php?extern=images/16x16/places/user-home.png',
				path: 'home://~'+eyeos.getCurrentUserName()+'/'
			}, {
				label: 'Desktop',
				icon: 'index.php?extern=images/16x16/places/user-desktop.png',
				path: 'home://~'+eyeos.getCurrentUserName()+'/Desktop'
			}, {
				label: 'Documents',
				icon: 'index.php?extern=images/16x16/places/folder-txt.png',
				path: 'home://~'+eyeos.getCurrentUserName()+'/Documents'
			}, {
				label: 'Images',
				icon: 'index.php?extern=images/16x16/places/folder-image.png',
				path: 'home://~'+eyeos.getCurrentUserName()+'/Images'
			}, {
				label: 'Music',
				icon: 'index.php?extern=images/16x16/places/folder-sound.png',
				path: 'home://~'+eyeos.getCurrentUserName()+'/Music'
			}
		],

		SHARES: [
			{
				label: 'By me',
				icon: 'index.php?extern=images/16x16/places/user-identity.png',
				path: 'share://~' + eyeos.getCurrentUserName() + '/'
			},
			{
				label: 'By my contacts',
				icon: 'index.php?extern=images/16x16/apps/system-users.png',
				path: 'share:///'
			}
		],

		WORKGROUPS: [
			{
				label: 'All my groups',
				icon: 'index.php?extern=images/16x16/places/folder-development.png',
				path: 'workgroup:///'
			}
		]
	}
});


/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

function files_application(checknum, pid, args) {
	var filesApplication = new eyeos.system.EyeApplication('files', checknum, pid);
	var filesController = new eyeos.files.Controller(filesApplication, args, 'iconview', checknum);
}

qx.Class.define('eyeos.files.Controller', {

	extend: qx.core.Object,
	
	construct: function (application, args, defaultView, checknum) {
		
		arguments.callee.base.call(this);
		
		// SETTERS
		this.setApplication(application);

		/*
		 * We fill with a default path in case none is given
		 * Init of the model and the view manager
		 */
		
		var defArgs;
		if (args[0] == undefined) {
			defArgs = ['path', 'home:///'];
		} else {
			defArgs = ['path', args[0]];
		}
		
		this.setModel(new eyeos.files.Model(defaultView, defArgs));

		/*
		 * Init of the application depending on what we have to show
		 */
		this._addListeners();
		this.setView(new eyeos.files.ViewManager(
				this,
				this.getModel(),
				this.getApplication(),
				'Files',
				'index.php?extern=/images/16x16/apps/system-file-manager.png',
				false,
				false
		));

		// Init SocialBarUpdater
		var socialBarUpdater = new eyeos.files.SUManager(this.getView()._socialBar, checknum);
		this.setSocialBarUpdater(socialBarUpdater);
		this._addSocialBarUpdaterListeners();
		
		this._browse(true);
		//this.getView().maximize();
	},

	properties: {
		application: {
			check: 'Object'
		},

		model: {
			check: 'Object'
		},
		
		view: {
			check: 'Object'
		},

		socialBarUpdater: {
			check: 'eyeos.files.SocialBarUpdater',
			init: null
		}
	},

	members: {

		_dBusListeners: new Array(),
		
		_filesQueue: eyeos.filesQueue.getInstance(),
		_dBus: eyeos.messageBus.getInstance(),

		_addListeners: function () {
//			this.addListener('selectedFile', function (e) {
//				var selected = e.getData();
//				var temp = new Array();
//				var callToUpdateContacts = true;
//				if (selected.length == 1) {
//					temp.push(selected[0].getFile());
//				} else if (selected.length > 1) {
//					for (var i = 0; i < selected.length; ++i) {
//						temp.push(selected[i].getFile());
//						callToUpdateContacts = false;
//					}
//				}
//				this.getView().updateSocialBar(temp, callToUpdateContacts);
//			});
//
//			this.addListener('cleanSocialBar', function () {
//				this.getView().cleanSocialBar();
//			});


			// DBUS Messages for syncing all "Files"

			/*
			 * eyeos_files_delete - Deletes a file from the Model in case our current path is the same as the source one and updates the view
			 *
			 * @receives {Array} [sourcePath: string, files: Array] 
			 */
			this._dBusListeners.push(this._dBus.addListener('eyeos_files_delete', function (e) {
				var sourcePath = e.getData()[0];
				var filesToDelete = e.getData()[1];
				var currentPath = this.getModel().getCurrentPath()[1];
				var currentFiles = this.getModel().getCurrentFiles();

				if(sourcePath.charAt(sourcePath.length-1) != '/') {
					sourcePath = sourcePath + '/';
				}
				if(currentPath.charAt(sourcePath.length-1) != '/') {
					currentPath = currentPath + '/';
				}
				if (sourcePath == currentPath) {
					for (var i = currentFiles.length - 1; i >= 0; --i) {
						if (filesToDelete.indexOf(currentFiles[i].getAbsolutePath()) != -1) {
							this.getModel().getCurrentFiles().splice(i, 1);
						}
					}
					this.getView().showBrowse();
				} else if (filesToDelete.indexOf(currentPath) != -1) {
					this._browsePath('home://~'+eyeos.getCurrentUserName()+'/');
				}

				//Update SocialBar
				var params = {
					path: currentPath,
					checknum: this.getApplication().getChecknum()
				}
				this.getSocialBarUpdater().directoryChanged(params);
			}, this));

			/*
			 * eyeos_files_new - Adds a file to the Model in case our current path is the same as the source one and updated the view
			 *
			 * @receives {Array} [sourcePath: string, file: Object]
			 */
			this._dBusListeners.push(this._dBus.addListener('eyeos_files_new', function (e) {

				var sourcePath = e.getData()[0];
				var fileToCreate = e.getData()[1];
				var currentPath = this.getModel().getCurrentPath()[1];

				if (sourcePath == currentPath) {
					var file = new eyeos.files.File(fileToCreate);
					this.getModel().getCurrentFiles().push(file);
					this.getView()._view.showBrowse();

                                        var items = this.getView()._view.returnAll();
                                        //en items tengo un array de IconViewItems
                                        var i = 0;
                                        var size = items.length;
                                        for(i=0;i<size;i++) {
                                            if(items[i].getFile().getName() == e.getData()[1].name) {
                                                items[i].select();
                                                this.editFile();
                                                i = size;
                                            }

                                        }
				}
			}, this));

			/*
			 * eyeos_files_cut - Directly updates the view if the source folder is our current one
			 *
			 * @receives {Array} [sourcePath: string, files: Array]
			 */
			this._dBusListeners.push(this._dBus.addListener('eyeos_files_cut', function (e) {

				var sourcePath = e.getData()[0];
				var currentPath = this.getModel().getCurrentPath()[1];

				var filesToCut = e.getData()[1];
				var filesToCutPath = new Array();
				for (var i = 0; i < filesToCut.length; ++i) {
					filesToCutPath[i] = filesToCut[i].getAbsolutePath();
				}

				if (sourcePath == currentPath) {
					var currentFiles = this.getModel().getCurrentFiles();
					var currentFilesPaths = new Array();
					for (var i = 0; i < currentFiles.length; ++i) {
						currentFilesPaths[i] = currentFiles[i].getAbsolutePath();
					}

					for (var i = 0; i < filesToCut.length; ++i) {
						var index = currentFilesPaths.indexOf(filesToCutPath[i]);
						if (index != -1) {
							currentFiles[index].setCutted(true);
						}
					}

					this.getView().showBrowse();
				} else if (filesToCutPath.indexOf(currentPath) != -1) {
					this._browsePath('home://~'+eyeos.getCurrentUserName()+'/');
				}
			}, this));

			/*
			 * eyeos_files_update - Adds/Remove information to the Files objects and updates the view
			 *
			 * @receives {Array} [sourcePath: string, files: Array]
			 */

			this._dBusListeners.push(this._dBus.addListener('eyeos_files_update', function (e) {
				var sourcePath = e.getData()[0];
				var filesToUpdate = e.getData()[1];
				var currentPath = this.getModel().getCurrentPath()[1];

				if (currentPath.substr(currentPath.length - 1) != '/') {
					currentPath += '/';
				}

				if (sourcePath.substr(sourcePath.length - 1) != '/') {
					sourcePath += '/';
				}
			
				if (sourcePath == currentPath) {

					var currentFiles = this.getModel().getCurrentFiles();
					var currentFilesPath = new Array();
					var filesToUpdatePath = new Array();

					for (var i = 0; i < filesToUpdate.length; ++i) {
						filesToUpdatePath.push(filesToUpdate[i].getAbsolutePath());
					}

					for (var i = 0; i < currentFiles.length; ++i) {
						currentFilesPath.push(currentFiles[i].getAbsolutePath());
					}

					for (var i = 0; i < filesToUpdate.length; ++i) {
						var index = currentFilesPath.indexOf(filesToUpdatePath[i]);
						if (index != -1) {
							currentFiles[index].setShared(filesToUpdate[i].getShared());
							currentFiles[index].setRating(filesToUpdate[i].getRating());
							
						}
					}

					var returnSelected = this.getView().returnSelected();
					for (var i = 0; i < returnSelected.length; ++i) {
						returnSelected[i].updateImage();
					}

//					this.getView().showBrowse();
				}
			}, this));

			/*
			 * eyeos_files_paste - Adds/Remove files to/from the Model in case our current path is the source or the target one and updates the view
			 *
			 * @receives {Array} [files: Array, action: string, sourcePath: string, targetPath: string, results: Array]
			 *
			 * (results is just used when our action is copy, it's an array containing the new names of the files in case they have been renamed
			 */

			this._dBusListeners.push(this._dBus.addListener('eyeos_files_paste', function (e) {
				var files = e.getData()[0];
				var action = e.getData()[1];
				var source = e.getData()[2];
				var target = e.getData()[3];
				var results = e.getData()[4];
				var currentPath = this.getModel().getCurrentPath()[1];
				var currentFiles = this.getModel().getCurrentFiles();

				var filesPath = new Array();
				var currentFilesPath = new Array();

				for (var i = 0; i < currentFiles.length; ++i) {
					currentFilesPath.push(currentFiles[i].getAbsolutePath());
				}

				for (var i = 0; i < files.length; ++i) {
					filesPath.push(files[i].getAbsolutePath());
				}

				if (action == 'move') {

					var toSplice = new Array();

					for (var i = files.length - 1; i >= 0; --i) {
						var index = currentFilesPath.indexOf(filesPath[i]);
						if (index != -1) {
							if (target == currentPath) {
								currentFiles[index].setCutted(false);
							} else {
								toSplice.push(index);
							}
						} else {
							if (target == currentPath) {
								var destination = target + '/' + files[i].getName();
								var index = currentFilesPath.indexOf(destination);
								if (index == -1) {
									var newFile = {
										type: files[i].getType(),
										size: files[i].getSize(),
										name: files[i].getName(),
										extension: files[i].getExtension(),
										permissions: files[i].getPermissions(),
										owner: files[i].getOwner(),
										path: target,
										absolutepath: destination,
										shared: files[i].getShared(),
										rating: files[i].getRating(),
										created: files[i].getCreated(),
										modified: files[i].getModified()
									};
									var nFile = new eyeos.files.File(newFile);
									this.getModel().getCurrentFiles().push(nFile);
								} else {
									currentFiles[index].set({
										type: files[i].getType(),
										size: files[i].getSize(),
										name: files[i].getName(),
										extension: files[i].getExtension(),
										permissions: files[i].getPermissions(),
										owner: files[i].getOwner(),
										shared: files[i].getShared(),
										rating: files[i].getRating(),
										created: files[i].getCreated(),
										modified: files[i].getModified()
									});
								}
							}
						}
					}

					if (toSplice.length >= 1) {
						for (var i = 0; i < toSplice.length; ++i) {
							this.getModel().getCurrentFiles().splice(toSplice[i], 1);
						}
					}

				} else if (action == 'copy') {
					if (target == currentPath) {
						for (var i = 0; i < results.length; ++i) {
							if (currentFilesPath.indexOf(results[i].absolutepath) == -1) {
								var futureFile = currentPath  + results[i].name;
								if (currentFilesPath.indexOf(futureFile) == -1) {
									var file = new eyeos.files.File(results[i]);
									file.setShared('0');
									this.getModel().getCurrentFiles().push(file);
								}
							}
						}
					}
				}

				this.getView().showBrowse();
				
			}, this));

			/*
			 * eyeos_files_paste - Adds/Remove files to/from the Model in case our current path is the source or the target one and updates the view
			 *
			 * @receives {Array} [files: Array, action: string, sourcePath: string, targetPath: string, results: Array]
			 *
			 * (results is just used when our action is copy, it's an array containing the new names of the files in case they have been renamed
			 */

			this._dBusListeners.push(this._dBus.addListener('eyeos_files_drop', function (e) {
				var files = e.getData()[0];
				var source = e.getData()[1];
				var target = e.getData()[2];

				if(target.charAt(target.length-1) != '/') {
					target = target + '/';
				}

				var currentPath = this.getModel().getCurrentPath()[1];

				if(currentPath.charAt(currentPath.length-1) != '/') {
					currentPath = currentPath + '/';
				}
				var currentFiles = this.getModel().getCurrentFiles();

				var filesPath = new Array();
				var currentFilesPath = new Array();

				for (var i = 0; i < currentFiles.length; ++i) {
					currentFilesPath.push(currentFiles[i].getAbsolutePath());
				}

				for (var i = 0; i < files.length; ++i) {
					filesPath.push(files[i].getAbsolutePath());
				}

				var toSplice = new Array();

				for (var i = files.length - 1; i >= 0; --i) {
					var index = currentFilesPath.indexOf(filesPath[i]);
					if (index != -1) {
						if (target != currentPath) {
							toSplice.push(index);
						}
					} else {
						if (target == currentPath) {
							var destination = target + files[i].getName();
							var index = currentFilesPath.indexOf(destination);
							if (index == -1) {
								var newFile = {
									type: files[i].getType(),
									size: files[i].getSize(),
									name: files[i].getName(),
									extension: files[i].getExtension(),
									permissions: files[i].getPermissions(),
									owner: files[i].getOwner(),
									path: target,
									absolutepath: destination,
									shared: files[i].getShared(),
									rating: files[i].getRating(),
									created: files[i].getCreated(),
									modified: files[i].getModified()
								};
								if(newFile.extension == 'LNK') {
									newFile.content = files[i].getContent();
								}
								var nFile = new eyeos.files.File(newFile);
								this.getModel().getCurrentFiles().push(nFile);
							} else {
								currentFiles[index].set({
									type: files[i].getType(),
									size: files[i].getSize(),
									name: files[i].getName(),
									extension: files[i].getExtension(),
									permissions: files[i].getPermissions(),
									owner: files[i].getOwner(),
									shared: files[i].getShared(),
									rating: files[i].getRating(),
									created: files[i].getCreated(),
									modified: files[i].getModified()
								});
							}
						}
					}
				}

				if (toSplice.length >= 1) {
					for (var i = 0; i < toSplice.length; ++i) {
						this.getModel().getCurrentFiles().splice(toSplice[i], 1);
					}
				}

				this.getView().showBrowse();

			}, this));

			/*
			 * eyeos_files_rename - Adds/Remove files to/from the Model in case our current path is the source or the target one
			 *
			 * @receives {Array} [oldName: string, sourcePath: string, results: Object containing the data of the file]
			 */

			this._dBusListeners.push(this._dBus.addListener('eyeos_files_rename', function (e) {
				var sourcePath = e.getData()[1];
				var currentPath = this.getModel().getCurrentPath()[1];
				if (sourcePath == currentPath) {
					var oldName = e.getData()[0];
					var currentFiles = this.getModel().getCurrentFiles();
					var results = e.getData()[2];
					for (var i = 0; i < currentFiles.length; ++i) {
						if (currentFiles[i].getAbsolutePath() == oldName) {
							currentFiles[i].setName(results.name);
							currentFiles[i].setAbsolutePath(results.absolutepath);
						}
					}
				}
				this.getView().showBrowse();
			}, this));

			this._dBusListeners.push(this._dBus.addListener('eyeos_file_uploadComplete', function (e) {
				var currentPath = this.getModel().getCurrentPath()[1];
				var splitted = e.getData().absolutepath.split('/');
				var path = '';
				for (var i = 0; i < splitted.length - 1; ++i) {
					if (splitted[i] != '') {
						if (i == 0) {
							path += splitted[i] + '//';
						} else {
							path += splitted[i] + '/';
						}
					}
				}

				if (currentPath.substring(currentPath.length - 1) != '/') {
					currentPath += '/';
				}

				if (path == currentPath) {
					var file = new eyeos.files.File(e.getData());
					this.getModel().getCurrentFiles().push(file);
					this.getView().showBrowse();
				}
			}
			, this));

			this._dBusListeners.push(this._dBus.addListener('eyeos_socialbar_ratingChanged', function (e) {
				var eventPath = e.getData()['path'];
				var eventFiles = e.getData()['files'];
				var currentPath = this.getModel().getCurrentPath()[1];
				
				if (eventPath == currentPath) {
					var modelFiles = this.getModel().getCurrentFiles();
					for (var i = 0; i < modelFiles.length; ++i) {
						for (var j=0; j < eventFiles.length; ++j) {
							if (modelFiles[i].getAbsolutePath() == eventFiles[j].getAbsolutePath()) {
								modelFiles[i].setRating(eventFiles[j].getRating());
							}
						}
					}
				}
			}
			, this));
		},

		_addSocialBarUpdaterListeners: function () {
			this.addListener('selectedFile', function (e) {
				var params = {
					path: this.getModel().getCurrentPath()[1],
					selected: this._getFilesFromIconViews(e.getData()),
					checknum: this.getApplication().getChecknum()
				}
				this.getSocialBarUpdater().selectionChanged(params);
			}, this);

			this.addListener('directoryChanged', function (e) {
				var params = {
					path: e.getData(),
					checknum: this.getApplication().getChecknum()
				}
				this.getSocialBarUpdater().directoryChanged(params);
			}, this);
		},

		_getFilesFromIconViews: function (iconViews) {
			var filesArray = [];
			for (var i = 0; i < iconViews.length; ++i) {
				filesArray.push(iconViews[i].getFile());
			}
			return filesArray;
		},

		_browse: function (addToHistory) {
			var currentPath = this.getModel().getCurrentPath();
			this._browsePath(currentPath[1], addToHistory);
		},

		_browsePath: function(path, addToHistory) {
			eyeos.callMessage(this.getApplication().getChecknum(), 'browsePath', [path, null, null], function (results) {
				this._browsePath_callback(results, path, addToHistory);
			}, this, null, 12000);
		},

		_browsePath_callback: function(results, path, addToHistory) {
			// Send data to the model
			this.getModel().setCurrentPath(['path', results.absolutepath]);

			if (addToHistory) {
				this._addToHistory('path');
			}

			// Empty the array with all the previous files
			this.getModel().getCurrentFiles().splice(0, this.getModel().getCurrentFiles().length);
			
			// The Cut/Copy/Paste queue
			var filesQueue = this._filesQueue.getMoveQueue();
			var action = this._filesQueue.getAction();
			var filesQueuePath = new Array();
			for (var i = 0; i < filesQueue.length; ++i) {
				filesQueuePath.push(filesQueue[i].getAbsolutePath());
			}

			// Foreach file we will create a "file object" that will contain all the data of the file
			for (var i = 0; i < results.files.length; ++i) {
				if(path == 'share:///') {
					results.files[i].sharedByContacts = true;
				}

				var item = new eyeos.files.File(results.files[i]);

				var index = filesQueuePath.indexOf(results.files[i].absolutepath);
				if (index != -1 && action == 'move') {
					item.setCutted(true);
				}

				this.getModel().getCurrentFiles().push(item);
			}

			// We call to the view controller to show the browse
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) == 'share://' || currentPath == 'workgroup:///') {
				this.getView()._view.setContextMenu(null);
			} else {
				this.getView()._view.setContextMenu(this.getView()._view._menu);
			}
			this.getView().showBrowse();

			this.fireDataEvent('directoryChanged', currentPath);
		},

		_addToHistory: function (input) {
			// If we have to add this path to the history ...
			var history = this.getModel().getHistory();
			var historyIndex = this.getModel().getHistoryIndex();
			// A new position is added on the array pointing to our current path
			history[historyIndex] = [input, this.getModel().getCurrentPath()[1]];
			if (historyIndex > 0) {
				this.getModel().getHistory().splice(parseInt(historyIndex + 1), parseInt(history.length - parseInt(historyIndex + 1)));
			}
			this.getModel().setHistoryIndex(historyIndex + 1);
		},

		specialMove: function (path, selection) {
			if(selection) {
				var filesToMove = [];
				var files = [path];
				for(var i = 0; i < selection.length; i++) {
					var info = selection[i].getUserData('info');
					var pathFromFile = info.absolutepath;
					var source = pathFromFile.replace(/\\/g, '/').replace(/\/[^\/]*\/?$/, '');
					var target = path;
					var content = selection[i].getUserData('content');
					files.push(pathFromFile);
					filesToMove.push({
							mPathFromFile: pathFromFile,
							mInfo: info,
							content: content,
							getAbsolutePath: function() {
								return this.mPathFromFile;
							},

							getName: function() {
								return this.mPathFromFile.replace(/^.*[\/\\]/g, '');
							},

							getType: function() {
								return this.mInfo.type;
							},

							getSize: function() {
								return this.mInfo.size;
							},

							getExtension: function() {
								return this.mInfo.extension;
							},

							getPermissions: function() {
								return this.mInfo.permissions;
							},

							getOwner: function() {
								return this.mInfo.owner;
							},

							getShared: function() {
								if(!this.mInfo.shared) {
									return "0";
								}
								return this.mInfo.shared;
							},

							getRating: function() {
								if(!this.mInfo.rating) {
									return "0";
								}
								return this.mInfo.rating;
							},

							getCreated: function() {
								try {
									var ret = this.mInfo.meta.creationTime;
								} catch (e) {
									var foo = new Date;
									var unixtime_ms = foo.getTime();
									var unixtime = parseInt(unixtime_ms / 1000);
									return unixtime;
								}
								return ret;
							},

							getModified: function() {
								try {
									var ret = this.mInfo.meta.modificationTime;
								} catch (e) {
									var foo = new Date;
									var unixtime_ms = foo.getTime();
									var unixtime = parseInt(unixtime_ms / 1000);
									return unixtime;
								}
								return ret;
							},

							getContent: function() {
								if(!this.content) {
									return "";
								} else {
									return this.content;
								}
							}
					});
				}
				eyeos.callMessage(this.getApplication().getChecknum(), 'move', files, function (results) {
						this._dBus.send('files', 'drop', [filesToMove, source, target]);
						this._browsePath(path);
						this._filesQueue.setDragQueue([]);
				}, this);
			} else {
				var filesToMove = this._filesQueue.getDragQueue();
				if (filesToMove.length >= 1) {
						var files = new Array();
						var action = this._filesQueue.getAction();
						var source = this._filesQueue.getDragSource();
						var target = path;
						for (var i = 0; i < filesToMove.length; ++i) {
								files.push(filesToMove[i].getAbsolutePath());
						}

						files.unshift(path);
						eyeos.callMessage(this.getApplication().getChecknum(), 'move', files, function (results) {
								this._dBus.send('files', 'drop', [filesToMove, source, target]);
								this._browsePath(path);
								this._filesQueue.setDragQueue([]);
						}, this);
				}
			}

		},
		
		openFile: function () {
			var filesToOpen = this.getView().returnSelected();
			var filesForViewer = new Array();
			var filesForDocuments = new Array();
			var filesForFemto = new Array();
			var foldersToOpen = new Array();
			var filesForImageViewer = new Array();
			var filesForDocPreview = new Array();
			var filesForPDFPreview = new Array();
			var filesForOpenLink = new Array();

			var extensionsForViewer = ['MP3','FLV','HTM','HTML','M4A','WAV','WMA','MOV', '3GP', '3GPP', '3G2', 'MP4', 'MPG', 'MPV', 'AVI', 'OGG', 'OGV', 'WEBM'];
			var extensionsForDocuments = ['EDOC'];
			var extensionsDocPreview = ['DOC', 'DOCX', 'ODT', 'ODS', 'OTS', 'SXC', 'XLS', 'XLT', 'XLS', 'XLSX', 'ODP', 'OTP', 'SXI', 'STI', 'PPT', 'POT', 'SXD', 'PPTX', 'PPSX', 'POTM', 'PPS', 'FODP', 'UOP'];
			var extensionsForFemto = ['TXT'];
			var extensionsForImageViewer = ['JPG', 'JPEG', 'BMP', 'GIF', 'PNG'];
			var extensionsForPDFViewer = ['PDF'];
			var extensionsForLink = ['LNK'];

			for (var i = 0; i < filesToOpen.length; ++i) {
				var type = filesToOpen[i].getFile().getType();
				var extension = filesToOpen[i].getFile().getExtension();
				if (type == 'folder') {
					foldersToOpen.push(filesToOpen[i].getFile().getAbsolutePath());
				} else {
					if (extensionsForViewer.indexOf(extension) != -1) {
						filesForViewer.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForImageViewer.indexOf(extension) != -1) {
						filesForImageViewer.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForDocuments.indexOf(extension) != -1) {
						filesForDocuments.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForFemto.indexOf(extension) != -1) {
						filesForFemto.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsDocPreview.indexOf(extension) != -1) {
						filesForDocPreview.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForPDFViewer.indexOf(extension) != -1) {
						filesForPDFPreview.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForLink.indexOf(extension) != -1) {
						filesForOpenLink.push(filesToOpen[i].getFile().getAbsolutePath());
					}
				}
			}

			if (filesForViewer.length >= 1) {
				eyeos.execute('viewer', this.getApplication().getChecknum(), filesForViewer);
			}

			if (filesForImageViewer.length >= 1) {
				eyeos.execute('imageviewer', this.getApplication().getChecknum(), filesForImageViewer);
			}
			
			if (filesForDocuments.length >= 1) {
				eyeos.execute('documents', this.getApplication().getChecknum(), filesForDocuments);
			}

			if (filesForDocPreview.length >= 1) {
				eyeos.execute('docviewer', this.getApplication().getChecknum(), filesForDocPreview);
			}

			if (filesForPDFPreview.length >= 1) {
				eyeos.execute('pdfviewer', this.getApplication().getChecknum(), filesForPDFPreview);
			}

			if (filesForFemto.length >= 1) {
				eyeos.execute('notepad', this.getApplication().getChecknum(), filesForFemto);
			}
			if (filesForOpenLink.length >= 1) {
				eyeos.execute('openLink', this.getApplication().getChecknum(), filesForOpenLink);
			}

			for (var i = 0; i < foldersToOpen.length; ++i) {
				eyeos.execute('files', this.getApplication().getChecknum(), [foldersToOpen[i]]);
			}
		},

		newFile: function (extension) {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var name = null;
				switch (extension) {
					case 'txt': {
						name = tr('New File');
						break;
					}
					case 'edoc': {
						name = tr('New Document');
						break;
					}
					case 'xls': {
						name = tr('New Spreadsheet');
						break;
					}
				}

				eyeos.callMessage(this.getApplication().getChecknum(), 'createNewFile', [currentPath + '/' + name + '.' + extension], function (results) {
					this._dBus.send('files', 'new', [currentPath, results]);
				},this);
			}
		},
		newLink: function() {
		   eyeos.execute('newLink', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);
		},

		uploadFile: function() {
		   eyeos.execute('upload', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);
		},
		newFolder: function () {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var name = tr('New Folder');
				eyeos.callMessage(this.getApplication().getChecknum(), 'mkdir', new Array(currentPath, name), function (results) {
					this._dBus.send('files', 'new', [currentPath, results]);
				}, this);
			}
		},
		
		deleteFile: function () {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var filesToDelete = this.getView().returnSelected();
				var files = new Array();
				for (var i = 0; i < filesToDelete.length; ++i) {
					if(filesToDelete[i].getFile().getAbsolutePath() != 'home://~' + eyeos.getCurrentUserName() + '/Desktop') {
						files.push(filesToDelete[i].getFile().getAbsolutePath());
					}
				}
				if(files.length == 0) {
					alert('You can not deleted this folder');
					return;
				}
				eyeos.callMessage(this.getApplication().getChecknum(), 'delete', files, function (results) {
					this._dBus.send('files', 'delete', [currentPath, results]);
				}, this);
			}
		},

		cutFile: function () {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var filesToCut = this.getView().returnSelected();

				var filesToCut_files = new Array();
				for (var i = 0; i < filesToCut.length; ++i) {
					filesToCut_files.push(filesToCut[i].getFile());
				}
				this._dBus.send('files', 'cut', [currentPath, filesToCut_files]);
				this._filesQueue.fillMoveQueue('move', filesToCut, currentPath);
			}
		},

		copyFile: function () {
			var filesToCopy = this.getView().returnSelected();
			var currentPath = this.getModel().getCurrentPath()[1];
			this._filesQueue.fillMoveQueue('copy', filesToCopy, currentPath);
		},

		pasteFile: function () {
			var filesToPaste = this._filesQueue.getMoveQueue();
			if (filesToPaste.length >= 1) {
				var source = this._filesQueue.getMoveSource();
				var target = this.getModel().getCurrentPath()[1];
				var action = this._filesQueue.getAction();
				var files = new Array();

				for (var i = 0; i < filesToPaste.length; ++i) {
					if (action == 'move') {
						if (target != filesToPaste[i].getPath()) {
							files.push(filesToPaste[i].getAbsolutePath());
						}
					} else {
						files.push(filesToPaste[i].getAbsolutePath());
					}
				}

				if (files.length >= 1) {
					files.unshift(target);
					eyeos.callMessage(this.getApplication().getChecknum(), action, files, function (results) {
						this._dBus.send('files', 'paste', [filesToPaste, action, source, target, results]);
						if (action == 'move') {
							this._filesQueue.setMoveQueue([]);
							this._filesQueue.setAction('');
						}
					}, this, {"dontAutoCatchExceptions": true});
				} else {
					this._dBus.send('files', 'paste', [filesToPaste, action, source, target]);
						if (action == 'move') {
							this._filesQueue.setMoveQueue([]);
							this._filesQueue.setAction('');
						}
				}
			}
		},

		editFile: function () {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var selected = this.getView().returnSelected();
				if (selected.length == 1) {
					selected[0].edit();
				}
			}
		},

		renameFile: function (rename, object, file) {
			if(!file) {
				var selected = this.getView().returnSelected()[0];
			} else {
				var selected = file;
			}
		
			var absPath = selected.getFile().getAbsolutePath();
			var currentPath = this.getModel().getCurrentPath()[1];
			if (selected.getFile().getName() != rename) {
				eyeos.callMessage(this.getApplication().getChecknum(), 'rename', [absPath, currentPath, rename], function (results) {
					object.setValue(rename);
					this._dBus.send('files', 'rename', [absPath, currentPath, results]);
				}, this);
			}
		},

		downloadFile: function (rename) {
			var selected = this.getView().returnSelected();
			eyeos.execute('download',this.getApplication().getChecknum(), [selected[0].getFile().getAbsolutePath()]);
		},
		
		toolBarBack: function () {
			if (parseInt(this.getModel().getHistoryIndex() - 1) >= 0) {
				if (parseInt(this.getModel().getHistoryIndex() - 1) == 0) {
					this.getModel().setCurrentPath(this.getModel().getHistory()[0]);
				} else {
					this.getModel().setHistoryIndex(this.getModel().getHistoryIndex() - 1);
					this.getModel().setCurrentPath(this.getModel().getHistory()[parseInt(this.getModel().getHistoryIndex() - 1)]);
				}
				this._browse(false);
			} else {
				this.getModel().setHistoryIndex(0);
			}
		},

		toolBarForward: function () {
			if (parseInt(this.getModel().getHistoryIndex()+1) <= this.getModel().getHistory().length) {
				this.getModel().setHistoryIndex(this.getModel().getHistoryIndex() + 1);
			} else {
				this.getModel().setHistoryIndex(this.getModel().getHistory().length);
			}
			this.getModel().setCurrentPath(this.getModel().getHistory()[this.getModel().getHistoryIndex()]);
			this._browse(false);
		},

		toolBarUpload: function () {
                    eyeos.execute('upload', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);
		},

        shareURLFile: function () {
            var selected = this.getView().returnSelected();
            eyeos.execute('urlshare', this.getApplication().getChecknum(), [selected[0].getFile().getAbsolutePath(), true]);
        }
	}
});
/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

qx.Class.define('eyeos.files.IconView', {

	extend: qx.ui.container.Scroll,

	construct: function (manager) {
		this.base(arguments);
		this.setViewManager(manager);
		this.setDragging(false);
		this._buildLayout();
		this._addListeners();
	},
	
	properties: {
		viewManager: {
			check: 'Object'
		},

		model: {
			check: 'Object'
		},

		dragging: {
			check: 'Boolean'
		}
	},

	members: {
		
		_layoutBase: null,
		_activeIcon: null,
		
		getLayoutBase: function () {
			return this._layoutBase;
		},

		_addListeners: function () {
			var currentPath = this.getViewManager().getModel().getCurrentPath()[1];
			if (currentPath != 'share:///' && currentPath != 'workgroup:///') {
				this._layoutBase.addListener('drop', function (e) {
					if(!e.getRelatedTarget().getUserData('info')) {
						var fileDropped = e.getRelatedTarget().getFile();
						var pathFromFile = fileDropped.getAbsolutePath();
						var type = fileDropped.getType();
						var dirPath = fileDropped.getPath();
						var currentPath = this.getViewManager().getModel().getCurrentPath()[1];
						if (currentPath.substr(0,8) != 'share://' && currentPath != 'workgroup:///') {
							if (dirPath != currentPath && type != 'folder') {
								this.getViewManager().getController().specialMove(currentPath);
							} else if (type == 'folder' && currentPath != dirPath && currentPath.search(new RegExp(pathFromFile, 'gi')) == -1) {
								this.getViewManager().getController().specialMove(currentPath);
							} else {
								var filesQueue = eyeos.filesQueue.getInstance();
								filesQueue.setDragQueue([]);
								filesQueue.setAction('');
							}
							this.setDragging(false);
							e.stopPropagation();
						}
					} else {
						//check if there is a selection
						var sm = desktop.SelectionManager.getInstance();
						if(sm.hasSelection() && sm.getSelection().length > 0) {
							var selection = sm.getSelection();
						} else {
							var selection = [e.getRelatedTarget()];
						}

						var info = selection[0].getUserData('info');
						var type = info.type;
						var pathFromFile = info.absolutepath;
						//dirname() from php.js
						var dirPath = pathFromFile.replace(/\\/g, '/').replace(/\/[^\/]*\/?$/, '');
						var currentPath = this.getViewManager().getModel().getCurrentPath()[1];
						if (currentPath.substr(0,8) != 'share://' && currentPath != 'workgroup:///') {
							if (dirPath != currentPath && type != 'folder') {
								this.getViewManager().getController().specialMove(currentPath, selection);
							} else if (type == 'folder' && currentPath != dirPath && currentPath.search(new RegExp(pathFromFile, 'gi')) == -1) {
								this.getViewManager().getController().specialMove(currentPath, selection);
							} else {
								var filesQueue = eyeos.filesQueue.getInstance();
								filesQueue.setDragQueue([]);
								filesQueue.setAction('');
							}
							this.setDragging(false);
							e.stopPropagation();
						}

					}
				}, this);

				this.addListener('click', function (e) {
					var selected = this.returnSelected();
					if (selected.length >= 1) {
						if(this.rangeBefore && this.rangeBefore == 1) {
							this.rangeBefore = 0;
						} else {
							this.resetAllSelected();
						}
						
					//						this.getViewManager().getController().fireEvent('cleanSocialBar');
					}
				});
				
				this.addListener('contextmenu', function (e) {
					e.stopPropagation();
					e.preventDefault();
				});

				var mousemovecallback = function(e) {
					if(this.selecting) {
						var x = e.getDocumentLeft();
						var y = e.getDocumentTop();
						y = y - 35; //topmenu + borders

						if(x > this.selectorX) {
							this.selector.setWidth(x-this.selectorX);
						} else {
							this.selector.setWidth(this.selectorX-x);
							this.selector.setMarginLeft(x);
						}

						if(y > this.selectorY) {
							this.selector.setHeight(y-this.selectorY);
						} else {
							this.selector.setHeight(this.selectorY-y);
							this.selector.setMarginTop(y);
						}
					//
					//						var selected = this.returnSelected();
					//						if (selected.length >= 1) {
					//							this.resetAllSelected();
					//						}
					//
					//						var box = new Object();
					//						if(x > this.selectorX) {
					//							box.x = this.selectorX;
					//							box.width = x-this.selectorX;
					//						} else {
					//							box.x = x;
					//							box.width = this.selectorX-x;
					//						}
					//
					//						if(y > this.selectorY) {
					//							box.y = this.selectorY;
					//							box.height = y-this.selectorY;
					//						} else {
					//							box.y = y;
					//							box.height = this.selectorY-y;
					//						}
					//
					//						//this is because the window can be moved in the screen!!!!
					//						box.y = box.y - this.windowOffsetTop;
					//						box.x = box.x - this.windowOffsetLeft;
					//
					//						box.y = box.y - 165; //top part of the window... hardcoded :(
					//						box.x = box.x - 190; //left part of the window... hardcoded :(
					//
					//						var childrens = this._layoutBase.getChildren();
					//						for(var i in childrens) {
					//							if(childrens[i] instanceof eyeos.files.IconViewItem) {
					//								var bounds = childrens[i].getBounds();
					////								console.log(bounds);
					////								console.log(box);
					//								if(parseInt(bounds.top)+parseInt(bounds.height) > box.y
					//									&& parseInt(bounds.top) < box.y + box.height
					//									&& parseInt(bounds.left)+parseInt(bounds.width) > box.x
					//									&& parseInt(bounds.left) < box.x + box.width
					//									) {
					//									childrens[i].select();
					//								}
					//							}
					//						}
					} else {
						if(this.selector) {
							this.selector.destroy();
							this.selector = null;
						}
					}

					e.stopPropagation();
				};

				var mouseupcallback = function(e) {
					var x = e.getDocumentLeft();
					var y = e.getDocumentTop();
					y = y - 35; //topmenu + borders

					if(this.selector) {
						this.selector.destroy();
						//						var x = e.getDocumentLeft();
						//						var y = e.getDocumentTop();
						//						y = y - 85;
						//						x = x - 15;
						//						//now, we need to calculate what are the icons inside the box
						//						//so first, go calculate the box :)
						//
						var box = new Object();
						if(x > this.selectorX) {
							box.x = this.selectorX;
							box.width = x-this.selectorX;
						} else {
							box.x = x;
							box.width = this.selectorX-x;
						}

						if(y > this.selectorY) {
							box.y = this.selectorY;
							box.height = y-this.selectorY;
						} else {
							box.y = y;
							box.height = this.selectorY-y;
						}

						//this is because the window can be moved in the screen!!!!
						box.y = box.y - this.windowOffsetTop;
						box.x = box.x - this.windowOffsetLeft;

						//and what about the scroll? :)

						box.y = box.y + this.getScrollY();

						box.y = box.y - 165; //top part of the window... hardcoded :(
						box.x = box.x - 190; //left part of the window... hardcoded :(


						var childrens = this._layoutBase.getChildren();
						for(var i in childrens) {
							if(childrens[i] instanceof eyeos.files.IconViewItem) {
								var bounds = childrens[i].getBounds();
								//								console.log(bounds);
								//								console.log(box);
								if(parseInt(bounds.top)+parseInt(bounds.height) > box.y
									&& parseInt(bounds.top) < box.y + box.height
									&& parseInt(bounds.left)+parseInt(bounds.width) > box.x
									&& parseInt(bounds.left) < box.x + box.width
									) {
									childrens[i].select();
									this.rangeBefore = 1;
								}
							}
						}
					}
					this.selector = null;
					this.selecting = false;
				};
				
				//--------------- multiple select
				this._layoutBase.addListener('mousedown', function(e) {

					if(e.getButton() != 'left' || e.getTarget() != this._layoutBase) {
						return;
					}
					this.resetAllSelected();
					if(this.selector) {
						this.selector.destroy();
						this.selector = null;
					}
					var x = e.getDocumentLeft();
					var y = e.getDocumentTop();
					y = y - 35; //topmenu + borders
					this.selecting = true;
					this.selector = new qx.ui.container.Composite();
					this.selector.addListener('mousemove', mousemovecallback, this);
					this.selector.addListener('mouseup', mouseupcallback, this);
					this.selector.set({
						opacity: 0.1,
						backgroundColor: 'blue',
						width:0,
						height:0,
						marginLeft:x,
						marginTop:y,
						zIndex: 9000000
					});

					this.selectorY = y;
					this.selectorX = x;
					this.windowOffsetTop = this.getViewManager().getBounds().top;
					this.windowOffsetLeft = this.getViewManager().getBounds().left;
					document.eyeDesktop.add(this.selector);
				}, this);
				
				this._layoutBase.addListener('mousemove', mousemovecallback, this);
				this._layoutBase.addListener('mouseup', mouseupcallback, this);
			}
		},

		_addItem: function (item) {
			this._addListenersToItem(item);
			this._layoutBase.add(item);
		},

		_addListenersToItem: function (item) {
			
			var self = this;

			/**
			 * Click events
			 */

			item.addListener('selected', function (e) {
				self.getViewManager().getController().fireDataEvent('selectedFile', self.returnSelected());	
			}, this);
			
			item.addListener('click',  function (e) {
				if (!this._editing && !this._buttonSelectionActive) {
					if (this.isSelected() && this.getManager().getViewManager().isKeyPress()) {
						this.unselect();
					} else if (!this.isSelected() && this.getManager().getViewManager().isKeyPress()) {
						this.select();
					} else {
						if(e.getButton() == 'left') {
							this.resetAllSelected();
							this.select();
						}

					}
				}
				
				// In case our flag is true ... the click has popped, flag should return to false
				// Now we use the stop propagation to avoid the click on the manager
				e.stopPropagation();
				this._buttonSelectionActive = false;
			});

			item.addListener('dblclick', function () {
				var file = this.getFile();
				var absolutePath = file.getAbsolutePath();
				if (file.getType() == 'folder') {
					this.getManager().getViewManager().getController()._browsePath(absolutePath, true);
				} else {
					var checknum = this.getManager().getViewManager().getController().getApplication().getChecknum();
					eyeos.openFile(absolutePath, checknum);
				}
			});

			item.addListener('unselected', function () {
				var selected = item.getManager().returnSelected();
				if (selected.length == 0) {
					self.getViewManager().getController().fireDataEvent('directoryChanged', this.getViewManager().getModel().getCurrentPath()[1]);
				}
			}, this);
			
			var currentPath = this.getViewManager().getModel().getCurrentPath()[1];
			
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup:///') {
				item.getContextMenu().addListener('appear', function (e) {
					var childrens = this.getContextMenu().getChildren();
					var selected = this.getManager().returnSelected();
					for (var i = 0; i < childrens.length; ++i) {
						//						console.log(childrens[i]);
						childrens[i].setEnabled(true);
						if (childrens[i].getUserData('id') == 'pasteFile()' && this.getFile().getType() == 'file') {
							childrens[i].setEnabled(false);
						}

						if (childrens[i].getUserData('id') == 'editFile()' && selected.length >= 2) {
							childrens[i].setEnabled(false);
						}
					}
				}, item);

				item._layoutButtonSelection.addListener('click', function (e) {
					if (!this._editing) {
						if (this.isSelected()) {
							this.unselect();
						} else {
							this.select();
						}
						self.getViewManager().getController().fireDataEvent('selectedFile', self.returnSelected());

						// We have to set a flag due to stopPropagation doesn't work properly'
						// e.stopPropagation();
						item._buttonSelectionActive = true;
						e.stopPropagation();
					}
				}, item);

				item.addListener('contextmenu', function (e) {
					if (!this.isSelected()) {
						self.resetAllSelected();
						this.select();
					}
					e.stopPropagation();
				});

				item._layoutButtonMenu.addListener('click', function (e) {
					if (!this.isSelected()) {
						self.resetAllSelected();
						this.select();
					//this._layoutButtonMenu.setIcon('index.php?extern=images/arrow4.png');
					}
					e.stopPropagation();
				}, item);


				/**
				 * Drag and drop events
				 */

				item.addListener('dragstart', function (e) {

					e.addAction('move');

					// Multiple Selection on dragstart to select all the items

					var childrenList = this.getManager().getLayoutBase().getChildren();
					var alreadyDone = false;

					// If there is more than one we will select it

					for (var i = 0; i < childrenList.length; ++i) {
						if (childrenList[i].isSelected()) {
							childrenList[i].setDroppable(false);
							alreadyDone = true;
						}
					}

					// If not, do it now

					if (!alreadyDone) {
						this.select();
						this.setDroppable(false);
					}

					this.getManager().setDragging(true);

					var filesToMove = self.returnSelected();
					var currentPath = self.getViewManager ().getModel().getCurrentPath()[1];
					var filesToPreMove = new Array();

					for (var i = 0; i < filesToMove.length; ++i) {
						filesToPreMove.push(filesToMove[i]);
					}

					var filesQueue = eyeos.filesQueue.getInstance();
					filesQueue.fillDragQueue(filesToPreMove, currentPath);

				//					var rootChildrens = qx.core.Init.getApplication().getRoot().getChildren();
				//					for (var i = rootChildrens.length - 1; i >= 0; --i) {
				//						if (rootChildrens[i] instanceof qx.ui.core.DragDropCursor) {
				//							rootChildrens[i].getContentElement().resetSource();
				//							i = 0;
				//							//TO-DO: The 'replaced' image gets stuck sometimes
				//							//rootChildrens[i].getContentElement().setSource('qx/decoration/Modern/menu/checkbox.gif');
				//						}
				//					}
				});

				item.addListener('dragover', function (e) {
					this.getManager().setDragging(true);
					if (this.getManager().isDragging() && !this.isSelected() && this.getFile().getType() == 'folder') {
						var movingFile = e.getRelatedTarget();
						if (movingFile != null && movingFile instanceof eyeos.files.IconViewItem) {
							this.setDecorator(this._decoratorDragOver);
						}
					}
				});

				item.addListener('dragleave', function (e) {
					this.setDecorator(this._decoratorMouseOut);
				});

				item.addListener('dragend', function (e) {
					this.getManager().setDragging(false);
					this.getManager().getViewManager()._places.setDragging(false);
					this.getManager().getViewManager()._shared.setDragging(false);
					this.getManager().getViewManager()._workgroups.setDragging(false);
					this.getManager().getViewManager()._header.setDragging(false);
					this.setDecorator(this._decoratorMouseOut);
					this.resetAllSelected();
					var filesQueue = eyeos.filesQueue.getInstance();
					filesQueue.setDragQueue([]);
				});


				item.addListener('drop', function (e) {
					var item = e.getRelatedTarget();
					if(item instanceof eyeos.files.IconViewItem) {
						var droppedFile = item.getFile();
						var droppedPath;
						if (droppedFile.getType() == 'folder') {
							droppedPath = droppedFile.getAbsolutePath();
						} else {
							droppedPath = droppedFile.getPath();
						}
						if (this.getFile().getType() == 'folder') {
							if (droppedFile.getType() == 'folder' && droppedFile.getAbsolutePath() != this.getFile().getAbsolutePath() && droppedFile.getPath() != this.getFile().getAbsolutePath() && this.getFile().getAbsolutePath().search(new RegExp(droppedFile.getAbsolutePath(), 'gi')) == -1) {
								this.getManager().getViewManager().getController().specialMove(this.getFile().getAbsolutePath());
							}

							if (droppedFile.getType() != 'folder' && droppedFile.getPath() != this.getFile().getAbsolutePath()) {
								this.getManager().getViewManager().getController().specialMove(this.getFile().getAbsolutePath());
							}
						} else {
							var filesQueue = eyeos.filesQueue.getInstance();
							filesQueue.setDragQueue([]);
						}
						this.getManager().setDragging(false);
						e.stopPropagation();
					}
				});
			}
		},

		_buildLayout: function (e) {

			this._layoutBase = new qx.ui.container.Composite(new qx.ui.layout.Flow(5,5)).set({
				droppable: true,
				padding: 10,
				backgroundColor: '#FFFFFF',
				allowShrinkY: false,
				allowGrowX: true,
				allowGrowY: true
			});

			var borderMenu = new qx.ui.decoration.Single(1, 'solid', '#C3C3C3');
			this._menu = new qx.ui.menu.Menu().set({
				decorator: borderMenu,
				shadow: null,
				padding: 3,
				backgroundColor: '#F3F3F3'
			});

			var menu = this.self(arguments).MENU;
			
			for (var i = 0; i < menu.length; ++i) {
				var item = null;
				if (menu[i].id != 'separator') {
					item = new qx.ui.menu.Button(menu[i].label, menu[i].image);
					item.setUserData('id', menu[i].id);
					item._manager = this.getViewManager().getController();
					item.addListener('appear', function (e) {
						this.setBackgroundColor(null);
						this.setDecorator(null);
						this.setTextColor('#4A4A4A');
					});
					item.addListener('mouseover', function (e) {
						this.setBackgroundColor('#D3D3D3');
						this.setTextColor('#404040');
					});
					item.addListener('mouseout', function (e) {
						if (!qx.ui.core.Widget.contains(item, e.getRelatedTarget())) {
							this.setDecorator(null);
							this.setBackgroundColor(null);
						}
						
					});
					item.addListener('execute', function (e) {
						eval('this._manager.'+this.getUserData('id'));
					});
				} else {
					item = new qx.ui.menu.Separator();
				}
				this._menu.add(item);
			}
			
			this.add(this._layoutBase,  {
				flex: 1
			});
		},

		showBrowse: function () {
			this._layoutBase.removeAll();
			var files = this.reorder(this.getViewManager().getModel().getCurrentFiles());
			for (var i = 0; i < files.length; ++i) {
				var item = new eyeos.files.IconViewItem(this, files[i]);
				this._addItem(item);
			}
		},

		filterBrowse: function(filter) {
			this._layoutBase.removeAll();
			var files = this.reorder(this.getViewManager().getModel().getCurrentFiles());
			for (var i = 0; i < files.length; ++i) {
				if(files[i].getName().toUpperCase().indexOf(filter.toUpperCase()) >= 0) {
					var item = new eyeos.files.IconViewItem(this, files[i]);
					this._addItem(item);
				}
			}
		},

		reorder: function (filesToOrder) {
			var folders = new Array();
			var files = new Array();
			var filesOrdered = new Array();

			for (var i = 0; i < filesToOrder.length; ++i) {
				if (filesToOrder[i].getType() == 'folder') {
					folders.push(filesToOrder[i]);
				} else {
					files.push(filesToOrder[i]);
				}
			}


			filesOrdered = folders.concat(files);

			return filesOrdered;
		},

		returnAll: function () {
			return this._layoutBase.getChildren();
		},

		returnSelected: function () {
			var selected = new Array();
			var childrens = this._layoutBase.getChildren();
			for (var i = 0; i < childrens.length; ++i) {
				if (childrens[i].isSelected()) {
					selected.push(childrens[i]);
				}
			}
			return selected;
		},

		resetAllSelected: function () {
			var childrenList = this.returnSelected();
			for (var i = 0; i < childrenList.length; ++i) {
				if (childrenList[i].isSelected()) {
					childrenList[i].unselect();
					childrenList[i]._clicked = false;
				}
			}
		}
	},

	statics: {
		MENU: [
		{
			label: tr('Upload file'),
			image: 'index.php?extern=images/16x16/actions/window-new.png',
			id: 'uploadFile()'
		}, {
			label: tr('Separator'),
			id: 'separator'
		}, {
			label: tr('New folder'),
			image: 'index.php?extern=images/16x16/places/folder.png',
			id: 'newFolder()'
		}, {
			label: tr('New simple document'),
			image: 'index.php?extern=images/16x16/mimetypes/text-x-generic.png',
			id: 'newFile(\'txt\')'
		}, {
			label: tr('New document'),
			image: 'index.php?extern=images/16x16/mimetypes/application-msword.png',
			id: 'newFile(\'edoc\')'
		}, {
			label: tr('New link'),
			image: 'index.php?extern=images/16x16/mimetypes/application-x-mswinurl.png',
			id: 'newLink()'
		}, {
			label: tr('Separator'),
			id: 'separator'
		}, {
			label: tr('Paste'),
			image: 'index.php?extern=images/16x16/actions/edit-paste.png',
			id: 'pasteFile()'
		}
		],

		MENU_ALTERNATIVE: [
		{
			label: tr('Open'),
			image: 'index.php?extern=images/16x16/actions/document-open.png',
			id: 'openFile()'
		}, {
			label: tr('Copy'),
			image: 'index.php?extern=images/16x16/actions/edit-copy.png',
			id: 'copyFile()'
		}, {
			label: tr('Download'),
			image: 'index.php?extern=images/16x16/actions/go-down.png',
			id: 'downloadFile()'
		}
		]
	}
});


/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

qx.Class.define('eyeos.files.SideBarTitle', {

	extend: qx.ui.container.Composite,

	construct: function (caption) {
		this.base(arguments);
		this._buildLayout(caption);
		this._addListeners();
	},

	members: {
		_clicked: false,
		
		_buildLayout: function (caption) {
			this.setLayout(new qx.ui.layout.HBox());
			var borderBottom = new qx.ui.decoration.Single(1, 'solid', '#D3D3D3').set({
				styleLeft: null,
				styleTop: null,
				styleRight: null
			});
			this.set({
				backgroundColor: '#FCFCFC',
				padding: 3,
				paddingTop: 7,
				paddingBottom: 6,
				decorator: borderBottom
			});
			this._label = new qx.ui.basic.Label(caption).set({
				maxWidth: 170,
				width: 170,
				minWidth: 170
			});
			this._label.setFont(new qx.bom.Font(13, ["Lucida Grande", "Verdana"]).set({bold: true}));
			this.add(this._label, {flex: 1});

			this._image = new qx.ui.basic.Image('index.php?extern=images/arrowPlace1.png').set({
				paddingTop: 3
			});
			this.add(this._image);
		},

		_addListeners: function () {
			this.addListener('click', function (e) {
				if (this._clicked) {
					this._clicked = false;
				} else {
					this._clicked = true;
				}
				this.fireDataEvent('changeValue', this._clicked);
			});

			this.addListener('changeValue', function () {
				if (this.isValue()) {
					this._image.setSource('index.php?extern=images/arrowPlace2.png');
				} else {
					this._image.setSource('index.php?extern=images/arrowPlace1.png');
				}
			});
		},

		isValue: function () {
			return this._clicked;
		}
	}
});

qx.Class.define('eyeos.files.SideBarItem', {

	extend: qx.ui.container.Composite,

	construct: function (label, path, manager, droppable, position) {

		this.base(arguments);
		// Reference and parent objects
		this.setAcceptsDrop(droppable);
		this.setManager(manager);
		this.setPath(path);
		this._position = position;
		this._buildLayout(label);


	},
	
	properties: {
		icon: {
			init: 'index.php?extern=images/16x16/places/folder.png',
			check: 'String',
			apply: '_applyIcon'
		},

		acceptsDrop: {
			check: 'Boolean',
			init: false
		}
	},

	members: {
		_label: null,
		_path: null,
		_icon: null,
		_manager: null,
		_currentBar: null,

		_decoratorDragOver: new qx.ui.decoration.Single(1, 'solid', '#74a100').set({backgroundColor: '#B9D07F'}),
		_decoratorMouseOut: new qx.ui.decoration.Single(1, 'solid', '#E3E3E3').set({
			styleLeft: null,
			styleTop: null,
			styleRight: null,
			backgroundColor: null
		}),
		
		_decoratorMouseOver: new qx.ui.decoration.Single(1, 'solid', '#E3E3E3').set({
			styleTop: null,
			backgroundColor: '#D0D0D0'
		}),
		
		_applyIcon: function(value, old) {
			this._icon.setSource(value);
		},

		_buildLayout: function (label) {
			this.setLayout(new qx.ui.layout.HBox());
			var labelComposite = new qx.ui.container.Composite(new qx.ui.layout.VBox());
			this._label = new qx.ui.basic.Label(tr(label));

			this.set({
				paddingRight: 3,
				paddingBottom: 3,
				paddingLeft: 10,
				height: 25,
				minHeight: 25,
				maxHeight: 25
			});

			this.setDecorator(this._decoratorMouseOut);
			
			this._icon = new qx.ui.basic.Image(this.getIcon()).set({
				marginRight: 5,
				anonymous: true
			});
			this.add(this._icon);
			labelComposite.add(this._label);
			this.add(labelComposite, {flex: 1});

			if (this.getAcceptsDrop()) {
				this.setDroppable(true);
				this._image = new qx.ui.basic.Image('index.php?extern=images/delete.png').set({
					marginRight: 5
				});
				this._image.setVisibility('hidden');
				this.add(this._image);

				this._image.addListener('click', function(e) {
					e.stopPropagation();
				}, this);
			}
		},

		onMouseOver: function () {
			if (this.getAcceptsDrop()) {
				this._image.setVisibility('visible');
			}
			this.setDecorator(this._decoratorMouseOver);
			//this._manager.getPlaceByPosition(this._position).setBackgroundColor('#D0D0D0');
		},

		onMouseOut: function () {
			if (this.getAcceptsDrop()) {
				this._image.setVisibility('hidden');
			}
			this.setDecorator(this._decoratorMouseOut);
			//this._manager.getPlaceByPosition(this._position).setBackgroundColor(null);
		},

		getManager: function () {
			return this._manager;
		},

		setManager: function (manager) {
			this._manager = manager;
		},

		getPath: function () {
			return this._path;
		},

		setPath: function (path) {
			this._path = path;
		}
	}
});

/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

qx.Class.define('eyeos.files.HeaderBar', {
	
	extend: qx.ui.container.Composite,

	construct: function (manager) {
		this.base(arguments);
		this.setViewManager(manager);
		this.setDragging(false);
		this._buildLayout();
	},

	properties: {
		controller: {
			check: 'Object'
		},

		dragging: {
			check: 'Boolean'
		},

		viewManager: {
			check: 'Object'
		}
	},

	members: {
		
		_layoutBase: null,
		
		_buildLayout: function () {
			this.setLayout(new qx.ui.layout.VBox());
			var borderBottom = new qx.ui.decoration.Single(1, 'solid', '#D3D3D3').set({
				styleLeft: null,
				styleTop: null,
				styleRight: null
			});
			this.set({
				backgroundColor: '#FFFFFF',
				padding: 5
			});
			this._mainTitle = new qx.ui.basic.Label().set({
				paddingLeft: 5
			});
			this._mainTitle.setFont(new qx.bom.Font(16, ["Lucida Grande", "Verdana"]).set({bold: true}));
			this._layoutBase = new qx.ui.container.Composite(new qx.ui.layout.HBox());
			this._layoutBottom = new qx.ui.container.Composite(new qx.ui.layout.HBox()).set({
				marginLeft: 15,
				marginRight: 15,
				paddingTop: 5,
				decorator: borderBottom
			});
			this.add(this._mainTitle, {flex: 1});
			this.add(this._layoutBase, {flex: 1});
			this.add(this._layoutBottom, {flex: 1});

			this.addListener('dragover', function (e) {
				this.setDragging(true);
			});

			this.addListener('dragleave', function (e) {
				this.setDragging(false);
			});
		},

		_addItem: function (item) {
			this._layoutBase.add(item);
			this._addListenersToItem(item);
		},

		_addListenersToItem: function (item) {

			var self = this;

			/**
			 * Click events
			 */
			if (item._clickable) {
				
				item.addListener('click',  function () {
					if (!this._dropped) {
						this.getManager().getViewManager().getController().getModel().setCurrentPath(['path', this.getPath()]);
						this.getManager().getViewManager().getController()._browse(true);
					} else {
						this._dropped = false;
					}
				});

				item.addListener('mouseover', function () {
					if (!self.isDragging()) {
						this._label.setDecorator(this._decoratorMouseOver);
					}
				});

				item.addListener('mouseout', function (e) {
					if (!qx.ui.core.Widget.contains(item, e.getRelatedTarget())) {
						if (!self.isDragging()) {
							this._label.setDecorator(this._decoratorMouseOut);
						}
					}
				});

				if (item.getAcceptsDrop()) {
				
					item.addListener('dragover', function (e) {
						self.setDragging(true);
						var movingFile = e.getRelatedTarget();
						if (movingFile != null && movingFile instanceof eyeos.files.IconViewItem) {
							this._label.setDecorator(this._decoratorDragOver);
						}
					});

					item.addListener('dragleave', function (e) {
						this._label.setDecorator(this._decoratorMouseOut);
					});

					item.addListener('dragend', function (e) {
						self.setDragging(false);
						this._label.setDecorator(this._decoratorMouseOut);
						this.resetAllSelected('dragend');
						this.resetAllSelected('all');
					});

					item.addListener('drop', function (e) {
						if (e.getRelatedTarget() instanceof eyeos.files.IconViewItem) {
							this._dropped = true;
							self.setDragging(false);
							this.getManager().getViewManager().getController().specialMove(this.getPath());
							this._label.setDecorator(this._decoratorMouseOut);
						}
					});
				}
			}
		},

		showBrowse: function (input) {
			this._layoutBase.removeAll();

			if (this.getViewManager().getModel().getCurrentPath()[0] == 'path') {
				var path = this.getViewManager().getModel().getCurrentPath()[1];
				var urlParts = eyeos.utils.ParseUri.parse(path);
				
				var pathParts = this.getViewManager().getModel().getCurrentPath()[1].split('/');
				var displayPathParts = qx.lang.Array.clone(pathParts);
				
				if (urlParts['host'] && urlParts['host'].substring(0, 1) == '~') {
					displayPathParts[2] = urlParts['host'].substring(1);
				}
				
				var rootItemLabel;
				var firstVisiblePathPart = 2;
				switch (pathParts[0]) {
					case 'home:':
						rootItemLabel = tr('Home');
						firstVisiblePathPart = 3;
						this._base = pathParts[0] + '//' + pathParts[2];
						break;
						
					case 'workgroup:':
						rootItemLabel = tr('Groups');
						this._base = pathParts[0] + '//';
						break;	
					
					case 'share:':
						rootItemLabel = tr('People');
						this._base = pathParts[0] + '//';
						break;
					
					case 'sys:':
						rootItemLabel = tr('System');
						break;
					
					case 'file:':
						rootItemLabel = '/';
						break;
				}

				/* We avoid to make droppable the first "Home" */
				if (pathParts.length == 3) {
					var item = new eyeos.files.HeaderBarItem(this, this._base, rootItemLabel, false);
				} else if (pathParts.length > 3 && pathParts[pathParts.length - 1] == '') {
					var item = new eyeos.files.HeaderBarItem(this, this._base, rootItemLabel, true, false);
				} else {
					var item = new eyeos.files.HeaderBarItem(this, this._base, rootItemLabel, true, true);
				}

				this._addItem(item);

				var clickable = true;
				var droppable = true;
				var futureFolder = '';
				var futureName = rootItemLabel;
				
				for (var i = firstVisiblePathPart; i < pathParts.length; i++) {
					if (pathParts[i] != '') {
						//Workgroup special case: We avoid to insert an intial '/'
						//in the futureFolder
						if (this._base == 'workgroup://' && futureFolder == '') {
							futureFolder += pathParts[i];
						} else {
							futureFolder += '/' + pathParts[i];
						}
						
						futureName = displayPathParts[i];

						if (i == pathParts.length - 1 || pathParts[i + 1] == '') {
							clickable = false;
							droppable = false;
						}
						
						var item = new eyeos.files.HeaderBarItem(this, this._base + futureFolder, displayPathParts[i], clickable, droppable);
						this._addItem(item);
					}
				}
			
				this.setTitle(futureName);
				this.getViewManager().setCaption('Files - ' + futureName);				
			}
			
		},

		setTitle: function (title) {
			this._mainTitle.setValue(tr(title));
		}
	}
});

/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

qx.Class.define('eyeos.files.Model', {

	extend: qx.core.Object,

	construct: function (defaultView, defaultPath) {
		arguments.callee.base.call(this);
		// Init data model
		this.setCurrentPath(defaultPath);
		this.setDefaultView(defaultView);
		this.setFilesQueue(new Array());
		this.setObjectsQueue(new Array());
		this.setCurrentFiles(new Array());
		this.setHistory(new Array());
		this.setHistoryIndex(0);
	},

	properties: {
		filesQueue: {
			check: 'Array'
		},

		objectsQueue: {
			check: 'Array'
		},
		
		queueAction: {
			check: ['move', 'copy']
		},

		defaultView: {
			check: 'String'
		},

		currentFiles: {
			check: 'Array'
		},

		currentPath: {
			check: 'Array'
		},

		history: {
			check: 'Array'
		},

		historyIndex: {
			check: 'Integer'
		}
	}
});

/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team
*
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
*
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
*
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
*
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
*
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice.
*/

qx.Interface.define('eyeos.files.ISocialBarHandler',
 {
   statics: {
	   checkHandler: function(params) {}
   },
   members:
   {
		updateSocialBar: function () {}
   }
});/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team
*
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
*
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
*
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
*
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
*
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice.
*/

qx.Class.define('eyeos.files.ASocialBarHandler', {
	extend: qx.core.Object,

	properties: {
		socialBar: {
			init: null
		},
		params: {
			init: null
		}
	},

	construct: function (socialbar, params) {
		this.base(arguments);
		if (socialbar) {
			this.setSocialBar(socialbar);
		}
		if (params) {
			this.setParams(params);
		}
	},
	members: {
		_priority: 10,

		getPriority: function () {
			return this._priority;
		}
	}

});/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team
*
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
*
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
*
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
*
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
*
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice.
*/

/**
 * SUHandlerManager is system of cache for SocialUpdater Handlers implemented by a singleton class.
 * The only role of this class is to return a data struct with current SocialBarUpdater Handlers.
 */
qx.Class.define('eyeos.files.SUHandlerManager', {
	extend: qx.core.Object,
	type : "singleton",

	properties: {
		suHandlers: {
			init: null
		},
		toRefresh: {
			check: 'Boolean',
			init: true
		}
	},

	members: {
		__isLocked: false,
		__pendingRequests: new Array(),

		/**
		 * Execute the callback function with the handlers for SocialUpdater of the user.
		 * The first time we retrieve handlers data struct from the server, we store in a
		 * cache system so next call to this function will be faster
		 *
		 * @param checknum {Integer} A valid checknum
		 * @param callback {Function} The function of callback
		 * @param callbackContext {Object} the callbackContext of the function callback
		 */
		getHandlers: function (checknum, callback, callbackContext) {
			if (this.isToRefresh()) {
				this.__populateHandlers(checknum, function() {
					if (typeof callback == 'function') {
						callback.call(callbackContext, this.getSuHandlers());
					}
				}, this);
			} else {
				if (typeof callback == 'function') {
					callback.call(callbackContext, this.getSuHandlers());
				}
			}
		},

		/**
		 * Populate the internal caché when is not yet charged.
		 * And import relative js classes
		 *
		 * @param checknum {Integer} The checknum of the application
		 * @param callback {Function} The function of callback
		 * @param callbackContext {Object} the callbackContext of the function callback
		 */
		__populateHandlers: function (checknum, callback, callbackContext) {
			var newRequest = {
				callback: callback,
				callbackContext: callbackContext
			};
			this.__pendingRequests.push(newRequest);


			if (this.__isLocked == true) {
				return;
			} else {
				this.__isLocked = true;
			}

			eyeos.callMessage(checknum, 'getSocialUpdaterHandlers', null, function (results) {
				(new qx.io.ScriptLoader).load('index.php?getSUHandler=1', function(e) {
					this.setToRefresh(false);
					this.__isLocked = false;

					// Eliminate .js from string and sort classes by theirs values of priority
					for (var key in results) {
						for (var i = 0; i < results[key].length; ++i) {
							results[key][i] = results[key][i].substr(0, results[key][i].lastIndexOf('.'));
						}
						results[key] = results[key].sort(this.__handlersSort);
						
					}

					//  trim.js and order here!
					this.setSuHandlers(results);

					this._processPendingRequest();
				}, this);
			}, this);
		},

		/**
		 * Sort handlers by priority
		 */
		__handlersSort: function (a, b) {
			var classA = eval('new ' + a + '();');
			var priorA = classA.getPriority();

			var classB = eval('new ' + b + '();');
			var priorB = classB.getPriority();
			return ( priorB - priorA );
		},

		/**
		  * Process all the request in pending. A process is on pending when
		  * we are executing a callmessage
		  */
		_processPendingRequest: function () {
			if (this.__isLocked != true) {
				while (this.__pendingRequests.length > 0) {
					var request = this.__pendingRequests.shift();
					try{
						if (typeof request['callback'] == 'function') {
							request['callback'].call(request['callbackContext'], this.getSuHandlers());
						}
					} catch (e){
						eyeos.consoleWarn('Unable to execute the callback while processing _processPendingRequest()\n', e);
					}
				}
			}
		}

		
	}
});/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team
*
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
*
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
*
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
*
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
*
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice.
*/

/**
 * SocialBarUpdater allows files to simply update socialbar information with a
 * system of handler.
 * Default handler set is on handler/default, for custom projects is possible to
 * add an handler set under /handler.
 *
 * NB: It's not possible to specify more than a custom handler set.
 */

qx.Class.define('eyeos.files.SUManager', {
	extend: qx.core.Object,

	properties: {
		checknum: {
			init: null
		},
		handlers: {
			init: null
		},
		socialBar: {
			init: null,
			check: 'Object'
		}
	},

	construct: function (socialBar, checknum) {
		this.base(arguments);
		this.setSocialBar(socialBar);
		this.setChecknum(checknum);
	},

	members: {
		/**
		 * Files selected are changed, retrieve handlers and execute updateSocialBar
		 * for correct handler
		 */
		selectionChanged: function (params) {
			if (this.getHandlers() != null) {
				this._doSelectionChanged(params);
			} else {
				eyeos.files.SUHandlerManager.getInstance().getHandlers(this.getChecknum(), function (results) {
					this.setHandlers(results);
					this._doSelectionChanged(params);
				}, this);
			}
		},

		_doSelectionChanged: function (params) {
			var className = this._getCorrectHandlerClass('changeSelection', params);
			var handlerClass = eval(className);
			var handler = new handlerClass(this.getSocialBar(), params);
			handler.updateSocialBar();
		},
		
		/**
		 * Current Path changed, retrieve hanlders and execute updateSocialBar for
		 * correct handler
		 */
		directoryChanged: function (params) {
			if (this.getHandlers() != null) {
				this._doDirectoryChanged(params);
			} else {
				eyeos.files.SUHandlerManager.getInstance().getHandlers(this.getChecknum(), function (results) {
					this.setHandlers(results);
					this._doDirectoryChanged(params);
				}, this);
			}
		},

		_doDirectoryChanged: function (params) {
			var className = this._getCorrectHandlerClass('changeDirectory', params);;
			var handlerClass = eval(className);
			var handler = new handlerClass(this.getSocialBar(), params);
			handler.updateSocialBar();
		},

		_getCorrectHandlerClass: function (key, params) {
			var handlers = this.getHandlers()[key];
			if (handlers == undefined || handlers == null || handlers.length < 1) {
				throw "No Handler folder for " + key + ".";
			}

			for (var i= 0; i < handlers.length; ++i) {
				var className = handlers[i];
				var classRef = eval(className);
				if (qx.Class.implementsInterface(classRef, eyeos.files.ISocialBarHandler)) {
					var method = new Function("params", "return " + className + ".checkHandler(params)");
					if (method.call(this, params)) {
						return className;
					}
				}
				
			}
			throw "No Handler for " + key + " with params" + params;
		}
	}
});/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team
*
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
*
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
*
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
*
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
*
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
*
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice.
*/

qx.Class.define('eyeos.files.SUPathManager', {
	extend: qx.core.Object,

	statics: {
		isLocalPath: function (path) {
			if (path.indexOf('home://') == 0) {
				return true;
			}
			return false;
		},

		isSharePath: function (path) {
			if (path.indexOf('share://') == 0) {
				return true;
			}
			return false;
		},

		isWorkgroupPath: function (path) {
			if (path.indexOf('workgroup://') == 0) {
				return true;
			}
			return false;
		},

		getPrincipalByPath: function (path) {
			var regExpression  =  /(workgroup:\/\/|share:\/\/)~([^_][a-zA-Z0-9 .\-_]{2,40}).*/;
			var matches = path.match(regExpression);
			if (matches.length > 2) {
				return matches[2];
			}
			return null;
		}
	}
});
/*
*                 eyeos - The Open Source Cloud's Web Desktop
*                               Version 2.0
*                   Copyright (C) 2007 - 2010 eyeos Team 
* 
* This program is free software; you can redistribute it and/or modify it under
* the terms of the GNU Affero General Public License version 3 as published by the
* Free Software Foundation.
* 
* This program is distributed in the hope that it will be useful, but WITHOUT
* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more
* details.
* 
* You should have received a copy of the GNU Affero General Public License
* version 3 along with this program in the file "LICENSE".  If not, see 
* <http://www.gnu.org/licenses/agpl-3.0.txt>.
* 
* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org
* 
* The interactive user interfaces in modified source and object code versions
* of this program must display Appropriate Legal Notices, as required under
* Section 5 of the GNU Affero General Public License version 3.
* 
* In accordance with Section 7(b) of the GNU Affero General Public License version 3,
* these Appropriate Legal Notices must retain the display of the "Powered by
* eyeos" logo and retain the original copyright notice. If the display of the 
* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices
* must display the words "Powered by eyeos" and retain the original copyright notice. 
*/

function files_application(checknum, pid, args) {
	var filesApplication = new eyeos.system.EyeApplication('files', checknum, pid);
	var filesController = new eyeos.files.Controller(filesApplication, args, 'iconview', checknum);
}

qx.Class.define('eyeos.files.Controller', {

	extend: qx.core.Object,
	
	construct: function (application, args, defaultView, checknum) {
		
		arguments.callee.base.call(this);
		
		// SETTERS
		this.setApplication(application);

		/*
		 * We fill with a default path in case none is given
		 * Init of the model and the view manager
		 */
		
		var defArgs;
		if (args[0] == undefined) {
			defArgs = ['path', 'home:///'];
		} else {
			defArgs = ['path', args[0]];
		}
		
		this.setModel(new eyeos.files.Model(defaultView, defArgs));

		/*
		 * Init of the application depending on what we have to show
		 */
		this._addListeners();
		this.setView(new eyeos.files.ViewManager(
				this,
				this.getModel(),
				this.getApplication(),
				'Files',
				'index.php?extern=/images/16x16/apps/system-file-manager.png',
				false,
				false
		));

		// Init SocialBarUpdater
		var socialBarUpdater = new eyeos.files.SUManager(this.getView()._socialBar, checknum);
		this.setSocialBarUpdater(socialBarUpdater);
		this._addSocialBarUpdaterListeners();
		
		this._browse(true);
		//this.getView().maximize();
	},

	properties: {
		application: {
			check: 'Object'
		},

		model: {
			check: 'Object'
		},
		
		view: {
			check: 'Object'
		},

		socialBarUpdater: {
			check: 'eyeos.files.SocialBarUpdater',
			init: null
		}
	},

	members: {

		_dBusListeners: new Array(),
		
		_filesQueue: eyeos.filesQueue.getInstance(),
		_dBus: eyeos.messageBus.getInstance(),

		_addListeners: function () {
//			this.addListener('selectedFile', function (e) {
//				var selected = e.getData();
//				var temp = new Array();
//				var callToUpdateContacts = true;
//				if (selected.length == 1) {
//					temp.push(selected[0].getFile());
//				} else if (selected.length > 1) {
//					for (var i = 0; i < selected.length; ++i) {
//						temp.push(selected[i].getFile());
//						callToUpdateContacts = false;
//					}
//				}
//				this.getView().updateSocialBar(temp, callToUpdateContacts);
//			});
//
//			this.addListener('cleanSocialBar', function () {
//				this.getView().cleanSocialBar();
//			});


			// DBUS Messages for syncing all "Files"

			/*
			 * eyeos_files_delete - Deletes a file from the Model in case our current path is the same as the source one and updates the view
			 *
			 * @receives {Array} [sourcePath: string, files: Array] 
			 */
			this._dBusListeners.push(this._dBus.addListener('eyeos_files_delete', function (e) {
				var sourcePath = e.getData()[0];
				var filesToDelete = e.getData()[1];
				var currentPath = this.getModel().getCurrentPath()[1];
				var currentFiles = this.getModel().getCurrentFiles();

				if(sourcePath.charAt(sourcePath.length-1) != '/') {
					sourcePath = sourcePath + '/';
				}
				if(currentPath.charAt(sourcePath.length-1) != '/') {
					currentPath = currentPath + '/';
				}
				if (sourcePath == currentPath) {
					for (var i = currentFiles.length - 1; i >= 0; --i) {
						if (filesToDelete.indexOf(currentFiles[i].getAbsolutePath()) != -1) {
							this.getModel().getCurrentFiles().splice(i, 1);
						}
					}
					this.getView().showBrowse();
				} else if (filesToDelete.indexOf(currentPath) != -1) {
					this._browsePath('home://~'+eyeos.getCurrentUserName()+'/');
				}

				//Update SocialBar
				var params = {
					path: currentPath,
					checknum: this.getApplication().getChecknum()
				}
				this.getSocialBarUpdater().directoryChanged(params);
			}, this));

			/*
			 * eyeos_files_new - Adds a file to the Model in case our current path is the same as the source one and updated the view
			 *
			 * @receives {Array} [sourcePath: string, file: Object]
			 */
			this._dBusListeners.push(this._dBus.addListener('eyeos_files_new', function (e) {

				var sourcePath = e.getData()[0];
				var fileToCreate = e.getData()[1];
				var currentPath = this.getModel().getCurrentPath()[1];

				if (sourcePath == currentPath) {
					var file = new eyeos.files.File(fileToCreate);
					this.getModel().getCurrentFiles().push(file);
					this.getView()._view.showBrowse();

                                        var items = this.getView()._view.returnAll();
                                        //en items tengo un array de IconViewItems
                                        var i = 0;
                                        var size = items.length;
                                        for(i=0;i<size;i++) {
                                            if(items[i].getFile().getName() == e.getData()[1].name) {
                                                items[i].select();
                                                this.editFile();
                                                i = size;
                                            }

                                        }
				}
			}, this));

			/*
			 * eyeos_files_cut - Directly updates the view if the source folder is our current one
			 *
			 * @receives {Array} [sourcePath: string, files: Array]
			 */
			this._dBusListeners.push(this._dBus.addListener('eyeos_files_cut', function (e) {

				var sourcePath = e.getData()[0];
				var currentPath = this.getModel().getCurrentPath()[1];

				var filesToCut = e.getData()[1];
				var filesToCutPath = new Array();
				for (var i = 0; i < filesToCut.length; ++i) {
					filesToCutPath[i] = filesToCut[i].getAbsolutePath();
				}

				if (sourcePath == currentPath) {
					var currentFiles = this.getModel().getCurrentFiles();
					var currentFilesPaths = new Array();
					for (var i = 0; i < currentFiles.length; ++i) {
						currentFilesPaths[i] = currentFiles[i].getAbsolutePath();
					}

					for (var i = 0; i < filesToCut.length; ++i) {
						var index = currentFilesPaths.indexOf(filesToCutPath[i]);
						if (index != -1) {
							currentFiles[index].setCutted(true);
						}
					}

					this.getView().showBrowse();
				} else if (filesToCutPath.indexOf(currentPath) != -1) {
					this._browsePath('home://~'+eyeos.getCurrentUserName()+'/');
				}
			}, this));

			/*
			 * eyeos_files_update - Adds/Remove information to the Files objects and updates the view
			 *
			 * @receives {Array} [sourcePath: string, files: Array]
			 */

			this._dBusListeners.push(this._dBus.addListener('eyeos_files_update', function (e) {
				var sourcePath = e.getData()[0];
				var filesToUpdate = e.getData()[1];
				var currentPath = this.getModel().getCurrentPath()[1];

				if (currentPath.substr(currentPath.length - 1) != '/') {
					currentPath += '/';
				}

				if (sourcePath.substr(sourcePath.length - 1) != '/') {
					sourcePath += '/';
				}
			
				if (sourcePath == currentPath) {

					var currentFiles = this.getModel().getCurrentFiles();
					var currentFilesPath = new Array();
					var filesToUpdatePath = new Array();

					for (var i = 0; i < filesToUpdate.length; ++i) {
						filesToUpdatePath.push(filesToUpdate[i].getAbsolutePath());
					}

					for (var i = 0; i < currentFiles.length; ++i) {
						currentFilesPath.push(currentFiles[i].getAbsolutePath());
					}

					for (var i = 0; i < filesToUpdate.length; ++i) {
						var index = currentFilesPath.indexOf(filesToUpdatePath[i]);
						if (index != -1) {
							currentFiles[index].setShared(filesToUpdate[i].getShared());
							currentFiles[index].setRating(filesToUpdate[i].getRating());
							
						}
					}

					var returnSelected = this.getView().returnSelected();
					for (var i = 0; i < returnSelected.length; ++i) {
						returnSelected[i].updateImage();
					}

//					this.getView().showBrowse();
				}
			}, this));

			/*
			 * eyeos_files_paste - Adds/Remove files to/from the Model in case our current path is the source or the target one and updates the view
			 *
			 * @receives {Array} [files: Array, action: string, sourcePath: string, targetPath: string, results: Array]
			 *
			 * (results is just used when our action is copy, it's an array containing the new names of the files in case they have been renamed
			 */

			this._dBusListeners.push(this._dBus.addListener('eyeos_files_paste', function (e) {
				var files = e.getData()[0];
				var action = e.getData()[1];
				var source = e.getData()[2];
				var target = e.getData()[3];
				var results = e.getData()[4];
				var currentPath = this.getModel().getCurrentPath()[1];
				var currentFiles = this.getModel().getCurrentFiles();

				var filesPath = new Array();
				var currentFilesPath = new Array();

				for (var i = 0; i < currentFiles.length; ++i) {
					currentFilesPath.push(currentFiles[i].getAbsolutePath());
				}

				for (var i = 0; i < files.length; ++i) {
					filesPath.push(files[i].getAbsolutePath());
				}

				if (action == 'move') {

					var toSplice = new Array();

					for (var i = files.length - 1; i >= 0; --i) {
						var index = currentFilesPath.indexOf(filesPath[i]);
						if (index != -1) {
							if (target == currentPath) {
								currentFiles[index].setCutted(false);
							} else {
								toSplice.push(index);
							}
						} else {
							if (target == currentPath) {
								var destination = target + '/' + files[i].getName();
								var index = currentFilesPath.indexOf(destination);
								if (index == -1) {
									var newFile = {
										type: files[i].getType(),
										size: files[i].getSize(),
										name: files[i].getName(),
										extension: files[i].getExtension(),
										permissions: files[i].getPermissions(),
										owner: files[i].getOwner(),
										path: target,
										absolutepath: destination,
										shared: files[i].getShared(),
										rating: files[i].getRating(),
										created: files[i].getCreated(),
										modified: files[i].getModified()
									};
									var nFile = new eyeos.files.File(newFile);
									this.getModel().getCurrentFiles().push(nFile);
								} else {
									currentFiles[index].set({
										type: files[i].getType(),
										size: files[i].getSize(),
										name: files[i].getName(),
										extension: files[i].getExtension(),
										permissions: files[i].getPermissions(),
										owner: files[i].getOwner(),
										shared: files[i].getShared(),
										rating: files[i].getRating(),
										created: files[i].getCreated(),
										modified: files[i].getModified()
									});
								}
							}
						}
					}

					if (toSplice.length >= 1) {
						for (var i = 0; i < toSplice.length; ++i) {
							this.getModel().getCurrentFiles().splice(toSplice[i], 1);
						}
					}

				} else if (action == 'copy') {
					if (target == currentPath) {
						for (var i = 0; i < results.length; ++i) {
							if (currentFilesPath.indexOf(results[i].absolutepath) == -1) {
								var futureFile = currentPath  + results[i].name;
								if (currentFilesPath.indexOf(futureFile) == -1) {
									var file = new eyeos.files.File(results[i]);
									file.setShared('0');
									this.getModel().getCurrentFiles().push(file);
								}
							}
						}
					}
				}

				this.getView().showBrowse();
				
			}, this));

			/*
			 * eyeos_files_paste - Adds/Remove files to/from the Model in case our current path is the source or the target one and updates the view
			 *
			 * @receives {Array} [files: Array, action: string, sourcePath: string, targetPath: string, results: Array]
			 *
			 * (results is just used when our action is copy, it's an array containing the new names of the files in case they have been renamed
			 */

			this._dBusListeners.push(this._dBus.addListener('eyeos_files_drop', function (e) {
				var files = e.getData()[0];
				var source = e.getData()[1];
				var target = e.getData()[2];

				if(target.charAt(target.length-1) != '/') {
					target = target + '/';
				}

				var currentPath = this.getModel().getCurrentPath()[1];

				if(currentPath.charAt(currentPath.length-1) != '/') {
					currentPath = currentPath + '/';
				}
				var currentFiles = this.getModel().getCurrentFiles();

				var filesPath = new Array();
				var currentFilesPath = new Array();

				for (var i = 0; i < currentFiles.length; ++i) {
					currentFilesPath.push(currentFiles[i].getAbsolutePath());
				}

				for (var i = 0; i < files.length; ++i) {
					filesPath.push(files[i].getAbsolutePath());
				}

				var toSplice = new Array();

				for (var i = files.length - 1; i >= 0; --i) {
					var index = currentFilesPath.indexOf(filesPath[i]);
					if (index != -1) {
						if (target != currentPath) {
							toSplice.push(index);
						}
					} else {
						if (target == currentPath) {
							var destination = target + files[i].getName();
							var index = currentFilesPath.indexOf(destination);
							if (index == -1) {
								var newFile = {
									type: files[i].getType(),
									size: files[i].getSize(),
									name: files[i].getName(),
									extension: files[i].getExtension(),
									permissions: files[i].getPermissions(),
									owner: files[i].getOwner(),
									path: target,
									absolutepath: destination,
									shared: files[i].getShared(),
									rating: files[i].getRating(),
									created: files[i].getCreated(),
									modified: files[i].getModified()
								};
								if(newFile.extension == 'LNK') {
									newFile.content = files[i].getContent();
								}
								var nFile = new eyeos.files.File(newFile);
								this.getModel().getCurrentFiles().push(nFile);
							} else {
								currentFiles[index].set({
									type: files[i].getType(),
									size: files[i].getSize(),
									name: files[i].getName(),
									extension: files[i].getExtension(),
									permissions: files[i].getPermissions(),
									owner: files[i].getOwner(),
									shared: files[i].getShared(),
									rating: files[i].getRating(),
									created: files[i].getCreated(),
									modified: files[i].getModified()
								});
							}
						}
					}
				}

				if (toSplice.length >= 1) {
					for (var i = 0; i < toSplice.length; ++i) {
						this.getModel().getCurrentFiles().splice(toSplice[i], 1);
					}
				}

				this.getView().showBrowse();

			}, this));

			/*
			 * eyeos_files_rename - Adds/Remove files to/from the Model in case our current path is the source or the target one
			 *
			 * @receives {Array} [oldName: string, sourcePath: string, results: Object containing the data of the file]
			 */

			this._dBusListeners.push(this._dBus.addListener('eyeos_files_rename', function (e) {
				var sourcePath = e.getData()[1];
				var currentPath = this.getModel().getCurrentPath()[1];
				if (sourcePath == currentPath) {
					var oldName = e.getData()[0];
					var currentFiles = this.getModel().getCurrentFiles();
					var results = e.getData()[2];
					for (var i = 0; i < currentFiles.length; ++i) {
						if (currentFiles[i].getAbsolutePath() == oldName) {
							currentFiles[i].setName(results.name);
							currentFiles[i].setAbsolutePath(results.absolutepath);
						}
					}
				}
				this.getView().showBrowse();
			}, this));

			this._dBusListeners.push(this._dBus.addListener('eyeos_file_uploadComplete', function (e) {
				var currentPath = this.getModel().getCurrentPath()[1];
				var splitted = e.getData().absolutepath.split('/');
				var path = '';
				for (var i = 0; i < splitted.length - 1; ++i) {
					if (splitted[i] != '') {
						if (i == 0) {
							path += splitted[i] + '//';
						} else {
							path += splitted[i] + '/';
						}
					}
				}

				if (currentPath.substring(currentPath.length - 1) != '/') {
					currentPath += '/';
				}

				if (path == currentPath) {
					var file = new eyeos.files.File(e.getData());
					this.getModel().getCurrentFiles().push(file);
					this.getView().showBrowse();
				}
			}
			, this));

			this._dBusListeners.push(this._dBus.addListener('eyeos_socialbar_ratingChanged', function (e) {
				var eventPath = e.getData()['path'];
				var eventFiles = e.getData()['files'];
				var currentPath = this.getModel().getCurrentPath()[1];
				
				if (eventPath == currentPath) {
					var modelFiles = this.getModel().getCurrentFiles();
					for (var i = 0; i < modelFiles.length; ++i) {
						for (var j=0; j < eventFiles.length; ++j) {
							if (modelFiles[i].getAbsolutePath() == eventFiles[j].getAbsolutePath()) {
								modelFiles[i].setRating(eventFiles[j].getRating());
							}
						}
					}
				}
			}
			, this));
		},

		_addSocialBarUpdaterListeners: function () {
			this.addListener('selectedFile', function (e) {
				var params = {
					path: this.getModel().getCurrentPath()[1],
					selected: this._getFilesFromIconViews(e.getData()),
					checknum: this.getApplication().getChecknum()
				}
				this.getSocialBarUpdater().selectionChanged(params);
			}, this);

			this.addListener('directoryChanged', function (e) {
				var params = {
					path: e.getData(),
					checknum: this.getApplication().getChecknum()
				}
				this.getSocialBarUpdater().directoryChanged(params);
			}, this);
		},

		_getFilesFromIconViews: function (iconViews) {
			var filesArray = [];
			for (var i = 0; i < iconViews.length; ++i) {
				filesArray.push(iconViews[i].getFile());
			}
			return filesArray;
		},

		_browse: function (addToHistory) {
			var currentPath = this.getModel().getCurrentPath();
			this._browsePath(currentPath[1], addToHistory);
		},

		_browsePath: function(path, addToHistory) {
			eyeos.callMessage(this.getApplication().getChecknum(), 'browsePath', [path, null, null], function (results) {
				this._browsePath_callback(results, path, addToHistory);
			}, this, null, 12000);
		},

		_browsePath_callback: function(results, path, addToHistory) {
			// Send data to the model
			this.getModel().setCurrentPath(['path', results.absolutepath]);

			if (addToHistory) {
				this._addToHistory('path');
			}

			// Empty the array with all the previous files
			this.getModel().getCurrentFiles().splice(0, this.getModel().getCurrentFiles().length);
			
			// The Cut/Copy/Paste queue
			var filesQueue = this._filesQueue.getMoveQueue();
			var action = this._filesQueue.getAction();
			var filesQueuePath = new Array();
			for (var i = 0; i < filesQueue.length; ++i) {
				filesQueuePath.push(filesQueue[i].getAbsolutePath());
			}

			// Foreach file we will create a "file object" that will contain all the data of the file
			for (var i = 0; i < results.files.length; ++i) {
				if(path == 'share:///') {
					results.files[i].sharedByContacts = true;
				}

				var item = new eyeos.files.File(results.files[i]);

				var index = filesQueuePath.indexOf(results.files[i].absolutepath);
				if (index != -1 && action == 'move') {
					item.setCutted(true);
				}

				this.getModel().getCurrentFiles().push(item);
			}

			// We call to the view controller to show the browse
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) == 'share://' || currentPath == 'workgroup:///') {
				this.getView()._view.setContextMenu(null);
			} else {
				this.getView()._view.setContextMenu(this.getView()._view._menu);
			}
			this.getView().showBrowse();

			this.fireDataEvent('directoryChanged', currentPath);
		},

		_addToHistory: function (input) {
			// If we have to add this path to the history ...
			var history = this.getModel().getHistory();
			var historyIndex = this.getModel().getHistoryIndex();
			// A new position is added on the array pointing to our current path
			history[historyIndex] = [input, this.getModel().getCurrentPath()[1]];
			if (historyIndex > 0) {
				this.getModel().getHistory().splice(parseInt(historyIndex + 1), parseInt(history.length - parseInt(historyIndex + 1)));
			}
			this.getModel().setHistoryIndex(historyIndex + 1);
		},

		specialMove: function (path, selection) {
			if(selection) {
				var filesToMove = [];
				var files = [path];
				for(var i = 0; i < selection.length; i++) {
					var info = selection[i].getUserData('info');
					var pathFromFile = info.absolutepath;
					var source = pathFromFile.replace(/\\/g, '/').replace(/\/[^\/]*\/?$/, '');
					var target = path;
					var content = selection[i].getUserData('content');
					files.push(pathFromFile);
					filesToMove.push({
							mPathFromFile: pathFromFile,
							mInfo: info,
							content: content,
							getAbsolutePath: function() {
								return this.mPathFromFile;
							},

							getName: function() {
								return this.mPathFromFile.replace(/^.*[\/\\]/g, '');
							},

							getType: function() {
								return this.mInfo.type;
							},

							getSize: function() {
								return this.mInfo.size;
							},

							getExtension: function() {
								return this.mInfo.extension;
							},

							getPermissions: function() {
								return this.mInfo.permissions;
							},

							getOwner: function() {
								return this.mInfo.owner;
							},

							getShared: function() {
								if(!this.mInfo.shared) {
									return "0";
								}
								return this.mInfo.shared;
							},

							getRating: function() {
								if(!this.mInfo.rating) {
									return "0";
								}
								return this.mInfo.rating;
							},

							getCreated: function() {
								try {
									var ret = this.mInfo.meta.creationTime;
								} catch (e) {
									var foo = new Date;
									var unixtime_ms = foo.getTime();
									var unixtime = parseInt(unixtime_ms / 1000);
									return unixtime;
								}
								return ret;
							},

							getModified: function() {
								try {
									var ret = this.mInfo.meta.modificationTime;
								} catch (e) {
									var foo = new Date;
									var unixtime_ms = foo.getTime();
									var unixtime = parseInt(unixtime_ms / 1000);
									return unixtime;
								}
								return ret;
							},

							getContent: function() {
								if(!this.content) {
									return "";
								} else {
									return this.content;
								}
							}
					});
				}
				eyeos.callMessage(this.getApplication().getChecknum(), 'move', files, function (results) {
						this._dBus.send('files', 'drop', [filesToMove, source, target]);
						this._browsePath(path);
						this._filesQueue.setDragQueue([]);
				}, this);
			} else {
				var filesToMove = this._filesQueue.getDragQueue();
				if (filesToMove.length >= 1) {
						var files = new Array();
						var action = this._filesQueue.getAction();
						var source = this._filesQueue.getDragSource();
						var target = path;
						for (var i = 0; i < filesToMove.length; ++i) {
								files.push(filesToMove[i].getAbsolutePath());
						}

						files.unshift(path);
						eyeos.callMessage(this.getApplication().getChecknum(), 'move', files, function (results) {
								this._dBus.send('files', 'drop', [filesToMove, source, target]);
								this._browsePath(path);
								this._filesQueue.setDragQueue([]);
						}, this);
				}
			}

		},
		
		openFile: function () {
			var filesToOpen = this.getView().returnSelected();
			var filesForViewer = new Array();
			var filesForDocuments = new Array();
			var filesForFemto = new Array();
			var foldersToOpen = new Array();
			var filesForImageViewer = new Array();
			var filesForDocPreview = new Array();
			var filesForPDFPreview = new Array();
			var filesForOpenLink = new Array();

			var extensionsForViewer = ['MP3','FLV','HTM','HTML','M4A','WAV','WMA','MOV', '3GP', '3GPP', '3G2', 'MP4', 'MPG', 'MPV', 'AVI', 'OGG', 'OGV', 'WEBM'];
			var extensionsForDocuments = ['EDOC'];
			var extensionsDocPreview = ['DOC', 'DOCX', 'ODT', 'ODS', 'OTS', 'SXC', 'XLS', 'XLT', 'XLS', 'XLSX', 'ODP', 'OTP', 'SXI', 'STI', 'PPT', 'POT', 'SXD', 'PPTX', 'PPSX', 'POTM', 'PPS', 'FODP', 'UOP'];
			var extensionsForFemto = ['TXT'];
			var extensionsForImageViewer = ['JPG', 'JPEG', 'BMP', 'GIF', 'PNG'];
			var extensionsForPDFViewer = ['PDF'];
			var extensionsForLink = ['LNK'];

			for (var i = 0; i < filesToOpen.length; ++i) {
				var type = filesToOpen[i].getFile().getType();
				var extension = filesToOpen[i].getFile().getExtension();
				if (type == 'folder') {
					foldersToOpen.push(filesToOpen[i].getFile().getAbsolutePath());
				} else {
					if (extensionsForViewer.indexOf(extension) != -1) {
						filesForViewer.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForImageViewer.indexOf(extension) != -1) {
						filesForImageViewer.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForDocuments.indexOf(extension) != -1) {
						filesForDocuments.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForFemto.indexOf(extension) != -1) {
						filesForFemto.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsDocPreview.indexOf(extension) != -1) {
						filesForDocPreview.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForPDFViewer.indexOf(extension) != -1) {
						filesForPDFPreview.push(filesToOpen[i].getFile().getAbsolutePath());
					}
					if (extensionsForLink.indexOf(extension) != -1) {
						filesForOpenLink.push(filesToOpen[i].getFile().getAbsolutePath());
					}
				}
			}

			if (filesForViewer.length >= 1) {
				eyeos.execute('viewer', this.getApplication().getChecknum(), filesForViewer);
			}

			if (filesForImageViewer.length >= 1) {
				eyeos.execute('imageviewer', this.getApplication().getChecknum(), filesForImageViewer);
			}
			
			if (filesForDocuments.length >= 1) {
				eyeos.execute('documents', this.getApplication().getChecknum(), filesForDocuments);
			}

			if (filesForDocPreview.length >= 1) {
				eyeos.execute('docviewer', this.getApplication().getChecknum(), filesForDocPreview);
			}

			if (filesForPDFPreview.length >= 1) {
				eyeos.execute('pdfviewer', this.getApplication().getChecknum(), filesForPDFPreview);
			}

			if (filesForFemto.length >= 1) {
				eyeos.execute('notepad', this.getApplication().getChecknum(), filesForFemto);
			}
			if (filesForOpenLink.length >= 1) {
				eyeos.execute('openLink', this.getApplication().getChecknum(), filesForOpenLink);
			}

			for (var i = 0; i < foldersToOpen.length; ++i) {
				eyeos.execute('files', this.getApplication().getChecknum(), [foldersToOpen[i]]);
			}
		},

		newFile: function (extension) {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var name = null;
				switch (extension) {
					case 'txt': {
						name = tr('New File');
						break;
					}
					case 'edoc': {
						name = tr('New Document');
						break;
					}
					case 'xls': {
						name = tr('New Spreadsheet');
						break;
					}
				}

				eyeos.callMessage(this.getApplication().getChecknum(), 'createNewFile', [currentPath + '/' + name + '.' + extension], function (results) {
					this._dBus.send('files', 'new', [currentPath, results]);
				},this);
			}
		},
		newLink: function() {
		   eyeos.execute('newLink', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);
		},

		uploadFile: function() {
		   eyeos.execute('upload', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);
		},
		newFolder: function () {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var name = tr('New Folder');
				eyeos.callMessage(this.getApplication().getChecknum(), 'mkdir', new Array(currentPath, name), function (results) {
					this._dBus.send('files', 'new', [currentPath, results]);
				}, this);
			}
		},
		
		deleteFile: function () {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var filesToDelete = this.getView().returnSelected();
				var files = new Array();
				for (var i = 0; i < filesToDelete.length; ++i) {
					if(filesToDelete[i].getFile().getAbsolutePath() != 'home://~' + eyeos.getCurrentUserName() + '/Desktop') {
						files.push(filesToDelete[i].getFile().getAbsolutePath());
					}
				}
				if(files.length == 0) {
					alert('You can not deleted this folder');
					return;
				}
				eyeos.callMessage(this.getApplication().getChecknum(), 'delete', files, function (results) {
					this._dBus.send('files', 'delete', [currentPath, results]);
				}, this);
			}
		},

		cutFile: function () {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var filesToCut = this.getView().returnSelected();

				var filesToCut_files = new Array();
				for (var i = 0; i < filesToCut.length; ++i) {
					filesToCut_files.push(filesToCut[i].getFile());
				}
				this._dBus.send('files', 'cut', [currentPath, filesToCut_files]);
				this._filesQueue.fillMoveQueue('move', filesToCut, currentPath);
			}
		},

		copyFile: function () {
			var filesToCopy = this.getView().returnSelected();
			var currentPath = this.getModel().getCurrentPath()[1];
			this._filesQueue.fillMoveQueue('copy', filesToCopy, currentPath);
		},

		pasteFile: function () {
			var filesToPaste = this._filesQueue.getMoveQueue();
			if (filesToPaste.length >= 1) {
				var source = this._filesQueue.getMoveSource();
				var target = this.getModel().getCurrentPath()[1];
				var action = this._filesQueue.getAction();
				var files = new Array();

				for (var i = 0; i < filesToPaste.length; ++i) {
					if (action == 'move') {
						if (target != filesToPaste[i].getPath()) {
							files.push(filesToPaste[i].getAbsolutePath());
						}
					} else {
						files.push(filesToPaste[i].getAbsolutePath());
					}
				}

				if (files.length >= 1) {
					files.unshift(target);
					eyeos.callMessage(this.getApplication().getChecknum(), action, files, function (results) {
						this._dBus.send('files', 'paste', [filesToPaste, action, source, target, results]);
						if (action == 'move') {
							this._filesQueue.setMoveQueue([]);
							this._filesQueue.setAction('');
						}
					}, this, {"dontAutoCatchExceptions": true});
				} else {
					this._dBus.send('files', 'paste', [filesToPaste, action, source, target]);
						if (action == 'move') {
							this._filesQueue.setMoveQueue([]);
							this._filesQueue.setAction('');
						}
				}
			}
		},

		editFile: function () {
			var currentPath = this.getModel().getCurrentPath()[1];
			if (currentPath.substr(0, 8) != 'share://' && currentPath != 'workgroup://') {
				var selected = this.getView().returnSelected();
				if (selected.length == 1) {
					selected[0].edit();
				}
			}
		},

		renameFile: function (rename, object, file) {
			if(!file) {
				var selected = this.getView().returnSelected()[0];
			} else {
				var selected = file;
			}
		
			var absPath = selected.getFile().getAbsolutePath();
			var currentPath = this.getModel().getCurrentPath()[1];
			if (selected.getFile().getName() != rename) {
				eyeos.callMessage(this.getApplication().getChecknum(), 'rename', [absPath, currentPath, rename], function (results) {
					object.setValue(rename);
					this._dBus.send('files', 'rename', [absPath, currentPath, results]);
				}, this);
			}
		},

		downloadFile: function (rename) {
			var selected = this.getView().returnSelected();
			eyeos.execute('download',this.getApplication().getChecknum(), [selected[0].getFile().getAbsolutePath()]);
		},
		
		toolBarBack: function () {
			if (parseInt(this.getModel().getHistoryIndex() - 1) >= 0) {
				if (parseInt(this.getModel().getHistoryIndex() - 1) == 0) {
					this.getModel().setCurrentPath(this.getModel().getHistory()[0]);
				} else {
					this.getModel().setHistoryIndex(this.getModel().getHistoryIndex() - 1);
					this.getModel().setCurrentPath(this.getModel().getHistory()[parseInt(this.getModel().getHistoryIndex() - 1)]);
				}
				this._browse(false);
			} else {
				this.getModel().setHistoryIndex(0);
			}
		},

		toolBarForward: function () {
			if (parseInt(this.getModel().getHistoryIndex()+1) <= this.getModel().getHistory().length) {
				this.getModel().setHistoryIndex(this.getModel().getHistoryIndex() + 1);
			} else {
				this.getModel().setHistoryIndex(this.getModel().getHistory().length);
			}
			this.getModel().setCurrentPath(this.getModel().getHistory()[this.getModel().getHistoryIndex()]);
			this._browse(false);
		},

		toolBarUpload: function () {
                    eyeos.execute('upload', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);
		},

        shareURLFile: function () {
            var selected = this.getView().returnSelected();
            eyeos.execute('urlshare', this.getApplication().getChecknum(), [selected[0].getFile().getAbsolutePath(), true]);
        }
	}
});

files_application(342695633, 3749, []);eyeos._callbackProxyWithContent(null, null, null, {"__eyeos_specialControlMessage_header":"__control_enhancedData","__eyeos_specialControlMessage_body":{"messages":[{"type":"application","eventName":"start","eventData":{"name":"files","pid":3749,"loginContext":{"user":"username","group":"users"},"checknum":342695633,"time":1318409340,"args":{}}}],"data":"lang['File'] = 'File';\nlang['Edit'] = 'Edit';\nlang['View'] = 'View';\nlang['Open'] = 'Open';\nlang['Rename'] = 'Rename';\nlang['New folder'] = 'New folder';\nlang['New simple document'] = 'New simple document';\nlang['New document'] = 'New document';\nlang['New spreadsheet'] = 'New spreadsheet';\nlang['Cut'] = 'Cut';\nlang['Copy'] = 'Copy';\nlang['Paste'] = 'Paste';\nlang['Back'] = 'Back';\nlang['Forward'] = 'Forward';\nlang['New'] = 'New';\nlang['Upload'] = 'Upload';\nlang['Places'] = 'Places';\nlang['Shared'] = 'Shared';\nlang['Groups'] = 'Groups';\nlang['By me'] = 'By me';\nlang['By my contacts'] = 'By my contacts';\nlang['All my groups'] = 'All my groups';\nlang['Delete'] = 'Delete';\nlang['Download'] = 'Download';\nlang['Search'] = 'Search';\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nqx.Class.define('eyeos.files.Sidebar', {\n\t\n\textend: qx.ui.container.Composite,\n\n\tconstruct: function (label, items, controller, acceptNewItems) {\n\t\tthis.base(arguments);\n\t\tthis._label = label;\n\t\tthis._items = items;\n\t\tthis.setController(controller);\n\t\tthis.setAcceptNewItems(acceptNewItems);\n\t\tthis._buildLayout(label);\n\n\t\tthis._title.addListener('changeValue', function (e) {\n\t\t\tif (this._title.isValue()) {\n\t\t\t\tthis._layoutBase.setVisibility('excluded');\n\t\t\t} else {\n\t\t\t\tthis._layoutBase.setVisibility('visible');\n\t\t\t}\n\t\t}, this);\n\t},\n\n\tproperties: {\n\t\tacceptNewItems: {\n\t\t\ttype: 'Boolean',\n\t\t\tinit: true\n\t\t}\n\t},\n\n\tmembers: {\n\t\t_controller: null,\n\t\t_label: null,\n\t\t_items: null,\n\t\t_dragging: false,\n\t\t_layoutBase: this,\n\n\t\t_buildLayout: function (label, items) {\n\t\t\tthis.setLayout(new qx.ui.layout.VBox());\n\t\t\tthis.set({\n\t\t\t\talignY: 'top',\n\t\t\t\twidth: 200,\n\t\t\t\tmaxWidth: 200\n\t\t\t});\n\t\t\tthis._title = new eyeos.files.SideBarTitle(this._label);\n\t\t\tthis.add(this._title);\n\t\t\tthis._layoutBase = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n\t\t\tthis.add(this._layoutBase);\n\t\t\tthis._rebuild();\n\t\t},\n\n\t\t_rebuild: function () {\n\t\t\tthis._layoutBase.removeAll();\n\t\t\tvar newPlace = new eyeos.files.SideBarNewPlace(this, this.getAcceptNewItems(), 0);\n\t\t\tthis._addPlace(newPlace);\n\t\t\tfor (var i = 0; i < this._items.length; ++i) {\n\t\t\t\tvar item = new eyeos.files.SideBarItem(this._items[i].label, this._items[i].path, this, this.getAcceptNewItems(), i)\n\t\t\t\tif (this._items[i].icon) {\n\t\t\t\t\titem.set({\n\t\t\t\t\t\ticon: this._items[i].icon\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tnewPlace = new eyeos.files.SideBarNewPlace(this, this.getAcceptNewItems(), parseInt(i + 1));\n\t\t\t\tthis._addItem(item);\n\t\t\t\tthis._addPlace(newPlace);\n\t\t\t}\n\t\t},\n\n\t\t_addItem: function (item) {\n\t\t\tthis._layoutBase.add(item, {flex: 1});\n\t\t\tthis._addListenersToItem(item);\n\t\t\titem._currentBar = this;\n\t\t},\n\n\t\t_addPlace: function (place) {\n\t\t\tthis._layoutBase.add(place, {flex: 1});\n\t\t\tthis._addListenersToPlace(place);\n\t\t},\n\n\t\t_addListenersToPlace: function (place) {\n\t\t\t\n\t\t\tvar self = this;\n\n\t\t\tif (place.getAcceptsDrop()) {\n\t\t\t\tplace.addListener('dragover', function (e) {\n\t\t\t\t\tself.setDragging(true);\n\t\t\t\t\tthis.setDecorator(this._decoratorDragOver);\n\t\t\t\t});\n\n\t\t\t\tplace.addListener('dragleave', function (e) {\n\t\t\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\t});\n\n\t\t\t\tplace.addListener('dragend', function (e) {\n\t\t\t\t\tself.setDragging(false);\n\t\t\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\t});\n\n\t\t\t\tplace.addListener('drop', function (e) {\n\t\t\t\t\tif (e.getRelatedTarget() instanceof eyeos.files.IconViewItem && e.getRelatedTarget().getFile().getType() == 'folder') {\n\t\t\t\t\t\tself.setDragging(false);\n\t\t\t\t\t\tself.addNewPlace(e.getRelatedTarget(), this._position);\n\t\t\t\t\t}\n\t\t\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t_addListenersToItem: function (item) {\n\n\t\t\tvar self = this;\n\n\t\t\titem.addListener('click', function () {\n\t\t\t\tif (!self.isDragging()) {\n\t\t\t\t\tself.getController().getModel().setCurrentPath(['path', this.getPath()]);\n\t\t\t\t\tself.getController()._browse(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\titem.addListener('mouseover', function () {\n\t\t\t\tif (!self.isDragging()) {\n\t\t\t\t\tthis.onMouseOver();\n\t\t\t\t}\n\t\t\t});\n\n\t\t\titem.addListener('mouseout', function (e) {\n\t\t\t\t\tif (!qx.ui.core.Widget.contains(item, e.getRelatedTarget())) {\n\t\t\t\t\t\tthis.onMouseOut();\n\t\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (item.getAcceptsDrop()) {\n\t\t\t\titem.addListener('dragover', function (e) {\n\t\t\t\t\tself.setDragging(true);\n\t\t\t\t\tthis.setDecorator(this._decoratorDragOver);\n\t\t\t\t});\n\n\t\t\t\titem.addListener('dragleave', function (e) {\n\t\t\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\t});\n\n\t\t\t\titem.addListener('dragend', function (e) {\n\t\t\t\t\tself.setDragging(false);\n\t\t\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\t});\n\n\t\t\t\titem.addListener('drop', function (e) {\n\t\t\t\t\tvar movingFile = e.getRelatedTarget();\n\t\t\t\t\tif (movingFile != null && movingFile instanceof eyeos.files.IconViewItem) {\n\t\t\t\t\t\tself.setDragging(false);\n\t\t\t\t\t\tthis._clicked = true;\n\n\t\t\t\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (movingFile.getFile().getType() == 'folder' && movingFile.getFile().getAbsolutePath() != this.getPath() && movingFile.getFile().getPath() != this.getPath()) {\n\t\t\t\t\t\t\tself.getController().specialMove(this.getPath());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (movingFile.getFile().getType() != 'folder' && movingFile.getFile().getPath() != this.getPath()) {\n\t\t\t\t\t\t\tself.getController().specialMove(this.getPath());\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\titem._image.addListener('click', function () {\n\t\t\t\t\tself.removePlace(this);\n\t\t\t\t}, item);\n\t\t\t}\n\n\t\t},\n\n\t\taddNewPlace: function (place, position) {\n\t\t\tvar placeToAdd = true;\n\t\t\tvar items = this._items;\n\t\t\tfor (var i = 0; i < items.length; ++i) {\n\t\t\t\tif (items[i].path == place.getFile().getAbsolutePath()) {\n\t\t\t\t\tplaceToAdd = false;\n\t\t\t\t\ti = parseInt(this._items.length + 1);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (placeToAdd) {\n\t\t\t\tvar myObject = {\n\t\t\t\t\tlabel: place.getFile().getName(),\n\t\t\t\t\tpath: place.getFile().getAbsolutePath()\n\t\t\t\t}\n\n\t\t\t\tvar newArray = new Array();\n\t\t\t\t\n\t\t\t\tfor (var i = 0; i < this._items.length; ++i) {\n\t\t\t\t\tif (i == position) {\n\t\t\t\t\t\tnewArray.push(myObject);\t\n\t\t\t\t\t}\n\t\t\t\t\tnewArray.push(this._items[i]);\n\t\t\t\t}\n\n\t\t\t\tif (position >= this._items.length) {\n\t\t\t\t\tnewArray.push(myObject);\n\t\t\t\t}\n\n\t\t\t\tthis._items = newArray;\n\t\t\t}\n\n\t\t\tthis._rebuild();\n\t\t},\n\n\t\tgetPlaceByPosition: function (id) {\n\t\t\tvar childrenList = this._layoutBase.getChildren();\n\t\t\tfor (var i = 0; i < childrenList.length; ++i) {\n\t\t\t\tif (childrenList[i] instanceof eyeos.files.SideBarNewPlace && childrenList[i]._position == parseInt(id - 1)) {\n\t\t\t\t\treturn childrenList[i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tremovePlace: function (place) {\n\t\t\tfor (var i = 0; i < this._items.length; ++i) {\n\t\t\t\tif (this._items[i].path == place.getPath()) {\n\t\t\t\t\tthis._items.splice(i, 1);\n\t\t\t\t\tplace.destroy();\n\t\t\t\t\tthis._rebuild();\n\t\t\t\t\ti = parseInt(this._items.length + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tgetController: function () {\n\t\t\treturn this._controller;\n\t\t},\n\n\t\tsetController: function (controller) {\n\t\t\tthis._controller = controller;\n\t\t},\n\n\t\tgetLayoutBase: function () {\n\t\t\treturn this._layoutBase;\n\t\t},\n\n\t\tsetDragging: function (value) {\n\t\t\tthis._dragging = value;\n\t\t},\n\n\t\tisDragging: function (value) {\n\t\t\treturn this._dragging;\n\t\t}\n\t}\n});\n\n\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nqx.Class.define('eyeos.files.IconViewItem', {\n\n\textend: qx.ui.core.Widget,\n\n\tconstruct: function (manager, file) {\n\t\t\n\t\tthis.base(arguments);\n\n\t\t\/\/ EXTENSIONS\n\t\tthis._imageExtensions = ['JPG', 'JPEG', 'PNG', 'GIF'];\n\t\tthis._videoExtensions = ['FLV'];\n\t\tthis._musicExtensions = ['MP3', 'M4A'];\n\t\tthis._docExtensions = ['DOC', 'TXT', 'XLS', 'ODS', 'EDOC'];\n\t\tthis._zipExtensions = ['ZIP'];\n\n\t\t\/\/ Reference and parent objects\n\t\tthis.setManager(manager);\n\t\tthis.setFile(file);\n\t\tthis.setCurrentPath(this.getManager().getViewManager().getModel().getCurrentPath()[1]);\n\t\t\/\/ Layout and listeners\n\t\tthis._buildLayout();\n\t\tthis._addListeners();\n\n\t\tvar filesQueue = eyeos.filesQueue.getInstance();\n\n\t\tif (this.getFile().isCutted() && filesQueue.getMoveQueue().indexOf(this.getFile())) {\n\t\t\tthis.unselect();\n\t\t\tthis.set({\n\t\t\t\tdraggable: false,\n\t\t\t\tenabled: false,\n\t\t\t\tfocusable: false,\n\t\t\t\topacity: 0.5\n\t\t\t});\n\t\t} else if (this.getFile().isCutted() && !filesQueue.getMoveQueue().indexOf(this.getFile())) {\n\t\t\tthis.getFile().setCutted(false);\n\t\t}\n\t},\n\n\tproperties: {\n\t\tmanager: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tfile: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tcurrentPath: {\n\t\t\tcheck: 'String',\n\t\t\tinit: null\n\t\t}\n\t},\n\n\tmembers: {\n\t\t_activeMenu: false,\n\t\t_editing: false,\n\t\t_file: null,\n\t\t_manager: null,\n\t\t_controller: null,\n\t\t_decoratorMouseOut: new qx.ui.decoration.Single(1, 'solid', 'transparent'),\n\t\t_decoratorMouseOver: new qx.ui.decoration.Single(1, 'solid', '#D3D3D3'),\n\t\t_decoratorMouseSelected: new qx.ui.decoration.Single(1, 'solid', '#ADCDF2').set({backgroundColor: '#EFF5FC'}),\n\t\t_decoratorDragOver: new qx.ui.decoration.Single(1, 'solid', '#74a100').set({backgroundColor: '#b9d07f'}),\n\t\t_layoutIcon: null,\n\t\t_layoutButtonSelection: null,\n\t\t_layoutButtonMenu: null,\n\t\t_selected: false,\n\t\t\n\t\t_buildLayout: function () {\n\n\t\t\tthis.set({\n\t\t\t\tdraggable: true,\n\t\t\t\tdroppable: true,\n\t\t\t\tpadding: 0,\n\t\t\t\twidth: 95,\n\t\t\t\theight: 95\n\t\t\t});\n\n\t\t\tthis.addListener('dragstart', function(e) {\n\t\t\t\tvar x = e.getDocumentLeft();\n\t\t\t\tvar y = e.getDocumentTop();\n\t\t\t\ty = y - 30;\n\t\t\t\tx = x + 1;\n\t\t\t\tthis.clipImage = e.getTarget()._itemImage.clone();\n\t\t\t\tthis.clipImage.setOpacity(0.5);\n\t\t\t\tdocument.eyeDesktop.add(this.clipImage);\n\t\t\t\tthis.clipImage.set({\n\t\t\t\t\tzIndex: 100003\n\t\t\t\t});\n\t\t\t\tthis.clipImage.setMarginTop(y);\n\t\t\t\tthis.clipImage.setMarginLeft(x);\n\t\t\t}, this);\n\n\t\t\tthis.addListener('drag', function(e) {\n\t\t\t\tvar x = e.getDocumentLeft();\n\t\t\t\tvar y = e.getDocumentTop();\n\t\t\t\ty = y - 30;\n\t\t\t\tx = x + 1;\n\t\t\t\tthis.clipImage.setMarginTop(y);\n\t\t\t\tthis.clipImage.setMarginLeft(x);\n\t\t\t}, this);\n\n\t\t\tthis.addListener('dragend', function(e) {\n\t\t\t\tthis.clipImage.destroy();\n\t\t\t}, this);\n\n\t\t\tvar layout = new qx.ui.layout.Canvas();\n\t\t\tthis._setLayout(layout);\n\n\t\t\tif (this.getCurrentPath() != 'share:\/\/\/' && this.getCurrentPath() != 'workgroup:\/\/\/') {\n\t\t\t\tvar menu;\n\t\t\t\tif (this.getCurrentPath().substr(0, 8) != 'share:\/\/' && this.getCurrentPath() != 'workgroup:\/\/') {\n\t\t\t\t\tmenu = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: tr('Open'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/document-open.png',\n\t\t\t\t\t\t\tid: 'openFile()'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Rename'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-rename.png',\n\t\t\t\t\t\t\tid: 'editFile()'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Separator'),\n\t\t\t\t\t\t\tid: 'separator'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Cut'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-cut.png',\n\t\t\t\t\t\t\tid: 'cutFile()'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Copy'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-copy.png',\n\t\t\t\t\t\t\tid: 'copyFile()'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Paste'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-paste.png',\n\t\t\t\t\t\t\tid: 'pasteFile()'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Separator'),\n\t\t\t\t\t\t\tid: 'separator'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Delete'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-delete.png',\n\t\t\t\t\t\t\tid: 'deleteFile()'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Download'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-paste.png',\n\t\t\t\t\t\t\tid: 'downloadFile()'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Share by URL'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/categories\/applications-internet.png',\n\t\t\t\t\t\t\tid: 'shareURLFile()'\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\tmenu = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlabel: tr('Open'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/document-open.png',\n\t\t\t\t\t\t\tid: 'openFile()'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Copy'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-copy.png',\n\t\t\t\t\t\t\tid: 'copyFile()'\n\t\t\t\t\t\t}, {\n\t\t\t\t\t\t\tlabel: tr('Download'),\n\t\t\t\t\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-paste.png',\n\t\t\t\t\t\t\tid: 'downloadFile()'\n\t\t\t\t\t\t}\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\tvar borderMenu = new qx.ui.decoration.Single(1, 'solid', '#C3C3C3');\n\t\t\t\tthis._menu = new qx.ui.menu.Menu().set({\n\t\t\t\t\tdecorator: borderMenu,\n\t\t\t\t\tshadow: null,\n\t\t\t\t\tpadding: 3,\n\t\t\t\t\tbackgroundColor: '#F3F3F3'\n\t\t\t\t});\n\n\t\t\t\tfor (var i = 0; i < menu.length; ++i) {\n\t\t\t\t\tvar item = null;\n\t\t\t\t\tif (menu[i].id != 'separator') {\n\t\t\t\t\t\titem = new qx.ui.menu.Button(menu[i].label, menu[i].image);\n\t\t\t\t\t\titem.setUserData('id', menu[i].id);\n\t\t\t\t\t\titem._manager = this.getManager().getViewManager().getController();\n\t\t\t\t\t\titem.addListener('appear', function (e) {\n\t\t\t\t\t\t\tthis.setBackgroundColor(null);\n\t\t\t\t\t\t\tthis.setDecorator(null);\n\t\t\t\t\t\t\tthis.setTextColor('#4A4A4A');\n\t\t\t\t\t\t});\n\t\t\t\t\t\titem.addListener('mouseover', function (e) {\n\t\t\t\t\t\t\tthis.setBackgroundColor('#D3D3D3');\n\t\t\t\t\t\t\tthis.setTextColor('#404040');\n\t\t\t\t\t\t});\n\t\t\t\t\t\titem.addListener('mouseout', function (e) {\n\t\t\t\t\t\t\tthis.setDecorator(null);\n\t\t\t\t\t\t\tthis.setBackgroundColor(null);\n\t\t\t\t\t\t});\n\t\t\t\t\t\titem.addListener('execute', function (e) {\n\t\t\t\t\t\t\teval('this._manager.'+this.getUserData('id'));\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\titem = new qx.ui.menu.Separator();\n\t\t\t\t\t}\n\t\t\t\t\tthis._menu.add(item);\n\t\t\t\t}\n\n\t\t\t\tthis.setContextMenu(this._menu);\n\n\t\t\t\tthis._layoutButtonSelection = new qx.ui.form.Button(null, null).set({\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tdecorator: null\n\t\t\t\t});\n\t\t\t\tthis._add(this._layoutButtonSelection, {\n\t\t\t\t\tleft: 5,\n\t\t\t\t\ttop: 5\n\t\t\t\t});\n\t\t\t\tthis._layoutButtonMenu = new qx.ui.form.MenuButton(null, null, this._menu).set({\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tdecorator: null\n\t\t\t\t});\n\t\t\t\tthis._add(this._layoutButtonMenu, {\n\t\t\t\t\tright: 5,\n\t\t\t\t\ttop: 5\n\t\t\t\t});\n\n\t\t\t}\n\n\t\t\tthis._itemImage = new qx.ui.basic.Image().set({\n\t\t\t\twidth: 48,\n\t\t\t\theight: 48,\n\t\t\t\tallowGrowY: false,\n\t\t\t\tallowGrowX: false,\n\t\t\t\tscale: true\n\t\t\t});\n\n\t\t\tthis.updateImage();\n\n                        var name = this.getFile().getName();\n                        if(this.getFile().getExtension() == 'LNK') {\n                            name = name.substr(0, name.length-4);\n                        }\n\t\t\tthis._itemLabel = new qx.ui.basic.Label().set({\n\t\t\t\tvalue: name,\n\t\t\t\trich: true,\n\t\t\t\twidth: 83,\n\t\t\t\tmaxHeight: 40,\n\t\t\t\ttextAlign: 'center'\n\t\t\t});\n\n\t\t\tthis._itemInput = new qx.ui.form.TextField(this.getFile().getName()).set({\n\t\t\t\twidth: 83,\n\t\t\t\tmaxHeight: 40\n\t\t\t});\n\n\n\n\t\t\tthis._add(this._itemImage, {top: 10, left: 20});\n\t\t\tthis._add(this._itemLabel, {top: 60, left: 5});\n\t\t\tthis._add(this._itemInput, {top: 60, left: 5});\n\t\t\tthis._itemInput.setVisibility('excluded');\n\n\t\t\tthis._itemInput.addListener('mousedown', function(e) {\n\t\t\t\te.stopPropagation();\n\t\t\t}, this);\n\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t},\n\n\t\tupdateImage: function () {\n\t\t\tvar image = null;\n\t\t\tif (this.getFile().getType() == 'folder') {\n\t\t\t\tif(this.getFile().getUserData('sharedByContacts') || this.getManager().getViewManager().getModel().getCurrentPath()[1].substr(0,8) == 'share:\/\/') {\n\t\t\t\t\tvar checknum = this.getManager().getViewManager().getController().getApplication().getChecknum();\n\t\t\t\t\timage = 'index.php?checknum=' + checknum + '&message=__UserInfo_getAvatarPicture&params[userName]=' + this.getFile().getName();\n\t\t\t\t\tif (this.getFile().getContentSize() > 0) {\n\t\t\t\t\t\tthis._add(new qx.ui.basic.Image('index.php?extern=images\/shared_on.png').set({zIndex: 20}), {top: 50, left: 17});\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else if (this.getFile().getContentSize() == 0) {\n\t\t\t\t\timage = 'index.php?extern=images\/48x48\/places\/folder.png';\n\t\t\t\t} else {\n\t\t\t\t\timage = 'index.php?extern=images\/48x48\/places\/folder-documents.png';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._docExtensions.indexOf(this.getFile().getExtension()) != -1) {\n\t\t\t\t\tif(this.getFile().getShared() != 0) {\n\t\t\t\t\t\timage = 'index.php?extern=images\/iconsshared\/application-msword.png';\n\t\t\t\t\t} else{\n\t\t\t\t\t\timage = 'index.php?extern=images\/48x48\/mimetypes\/application-msword.png';\n\t\t\t\t\t}\n\t\t\t\t} else if (this._imageExtensions.indexOf(this.getFile().getExtension()) != -1) {\n\t\t\t\t\tif(this.getFile().getShared() != 0) {\n\t\t\t\t\t\timage = 'index.php?extern=images\/iconsshared\/imatge.png';\n\t\t\t\t\t} else{\n\t\t\t\t\t\timage = 'index.php?extern=images\/48x48\/mimetypes\/image-x-generic.png';\n\t\t\t\t\t}\n\t\t\t\t} else if (this._musicExtensions.indexOf(this.getFile().getExtension()) != -1) {\n\t\t\t\t\tif(this.getFile().getShared() != 0) {\n\t\t\t\t\t\timage = 'index.php?extern=images\/iconsshared\/audio.png';\n\t\t\t\t\t} else{\n\t\t\t\t\t\timage = 'index.php?extern=images\/48x48\/mimetypes\/audio-x-generic.png';\n\t\t\t\t\t}\n\t\t\t\t} else if (this._videoExtensions.indexOf(this.getFile().getExtension()) != -1) {\n\t\t\t\t\tif(this.getFile().getShared() != 0) {\n\t\t\t\t\t\timage = 'index.php?extern=images\/iconsshared\/video.png';\n\t\t\t\t\t} else{\n\t\t\t\t\t\timage = 'index.php?extern=images\/48x48\/mimetypes\/audio-vnd.rn-realvideo.png';\n\t\t\t\t\t}\n\t\t\t\t} else if (this._zipExtensions.indexOf(this.getFile().getExtension()) != -1) {\n\t\t\t\t\tif(this.getFile().getShared() != 0) {\n\t\t\t\t\t\timage = 'index.php?extern=images\/iconsshared\/zip.png';\n\t\t\t\t\t} else{\n\t\t\t\t\t\timage = 'index.php?extern=images\/48x48\/mimetypes\/application-x-gzip.png';\n\t\t\t\t\t}\n\t\t\t\t} else if(this.getFile().getExtension() == 'LNK') {\n\t\t\t\t\tvar info = qx.util.Json.parse(this.getFile().getContent());\n\t\t\t\t\timage = info.icon;\n\t\t\t\t} else if(this.getFile().getExtension() == 'PDF') {\n\t\t\t\t\tif(this.getFile().getShared() != 0) {\n\t\t\t\t\t\timage = 'index.php?extern=images\/iconsshared\/pdf.png';\n\t\t\t\t\t} else{\n\t\t\t\t\t\timage = 'index.php?extern=images\/48x48\/mimetypes\/application-pdf.png';\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}else {\n\t\t\t\t\tif(this.getFile().getShared() != 0) {\n\t\t\t\t\t\timage = 'index.php?extern=images\/iconsshared\/unknown.png';\n\t\t\t\t\t} else{\n\t\t\t\t\t\timage = 'index.php?extern=images\/48x48\/mimetypes\/application-x-zerosize.png';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\timage = image + '&nocache=' + eyeos.utils.getRandomValue();\n\t\t\tthis._itemImage.setSource(image);\n\t\t},\n\n\t\t_addListeners: function () {\t\n\n\t\t\tthis.addListener('mouseover', function (e) {\n\t\t\t\tif (!this.isSelected() && !this.getManager().isDragging() && this.isEnabled()) {\n\t\t\t\t\tthis.setDecorator(this._decoratorMouseOver);\n\/\/\t\t\t\t\tif (this.getCurrentPath() != 'share:\/\/\/' && this.getCurrentPath() != 'workgroup:\/\/\/') {\n\/\/\t\t\t\t\t\t\/\/this._layoutButtonSelection.setIcon('index.php?extern=images\/add1.png');\n\/\/\t\t\t\t\t\t\/\/this._layoutButtonMenu.setIcon('index.php?extern=images\/arrow1.png');\n\/\/\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.addListener('mouseout', function (e) {\n\t\t\t\tif (!qx.ui.core.Widget.contains(this, e.getRelatedTarget())) {\n\t\t\t\t\tif (!this.isSelected() && !this.getManager().isDragging()) {\n\t\t\t\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\/\/\t\t\t\t\t\tif (this.getCurrentPath() != 'share:\/\/\/' && this.getCurrentPath() != 'workgroup:\/\/\/') {\n\/\/\t\t\t\t\t\t\t\/\/this._layoutButtonSelection.setIcon(null);\n\/\/\t\t\t\t\t\t\t\/\/this._layoutButtonMenu.setIcon(null);\n\/\/\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.getCurrentPath() != 'share:\/\/\/' && this.getCurrentPath() != 'workgroup:\/\/\/') {\n\t\t\t\tthis._itemInput.addListener('keypress', function (e) {\n\t\t\t\t\tif (e.getKeyIdentifier() == 'Enter') {\n\t\t\t\t\t\tthis._itemInput.exclude();\n\t\t\t\t\t} else if (e.getKeyIdentifier() == 'Escape') {\n\t\t\t\t\t\tthis.cancelEdit();\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tthis._itemInput.addListener('blur', function (e) {\n\t\t\t\t\tthis.save();\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\n\t\tsave: function () {\n\t\t\tif (this.getFile().getType() == 'file') {\n\t\t\t\tvar fileAtInput = this._itemInput.getValue();\n\t\t\t\tvar fileAtInputSplitted = fileAtInput.split('.');\n\t\t\t\tvar extension = fileAtInputSplitted[fileAtInputSplitted.length - 1];\n\t\t\t\tif (extension != '' && extension != null && fileAtInputSplitted.length >= 2) {\n\t\t\t\t\tif (extension.toUpperCase() != this.getFile().getExtension()) {\n\t\t\t\t\t\tvar optionPane = new eyeos.dialogs.OptionPane(\n\t\t\t\t\t\t\ttr(\"Are you sure you want to change the extension to the file?\"),\n\t\t\t\t\t\t\teyeos.dialogs.OptionPane.QUESTION_MESSAGE,\n\t\t\t\t\t\t\teyeos.dialogs.OptionPane.YES_NO_CANCEL_OPTION);\n\t\t\t\t\t\tvar dialog = optionPane.createDialog(this.getManager().getViewManager(), \"Files\", function(result) {\n\t\t\t\t\t\t\tif (result == 1) {\n\t\t\t\t\t\t\t\tthis.getFile().setExtension(extension.toUpperCase());\n\t\t\t\t\t\t\t\tthis.getManager().getViewManager().getController().renameFile(this._itemInput.getValue(), this._itemLabel);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this);\n\t\t\t\t\t\tdialog.open();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.getManager().getViewManager().getController().renameFile(this._itemInput.getValue(), this._itemLabel, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tvar optionPane = new eyeos.dialogs.OptionPane(\n\t\t\t\t\t\ttr(\"Are you sure you want to leave the file without extension?\"),\n\t\t\t\t\t\teyeos.dialogs.OptionPane.QUESTION_MESSAGE,\n\t\t\t\t\t\teyeos.dialogs.OptionPane.YES_NO_CANCEL_OPTION);\n\t\t\t\t\tvar dialog = optionPane.createDialog(this.getManager().getViewManager(), \"Files\", function(result) {\n\t\t\t\t\t\tif (result == 1) {\n\t\t\t\t\t\t\tthis.getFile().setExtension(null);\n\t\t\t\t\t\t\tthis.getManager().getViewManager().getController().renameFile(this._itemInput.getValue(), this._itemLabel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this);\n\t\t\t\t\tdialog.open();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.getManager().getViewManager().getController().renameFile(this._itemInput.getValue(), this._itemLabel);\n\t\t\t}\n\t\t\t\n\t\t\tthis.cancelEdit();\n\t\t},\n\n\t\tresetAllSelected: function (params) {\n\t\t\tvar childrenList = this.getManager().getLayoutBase().getChildren();\n\t\t\tfor (var i = 0; i < childrenList.length; ++i) {\n\t\t\t\tif (childrenList[i].isSelected()) {\n\t\t\t\t\tif (params == 'dragend') {\n\t\t\t\t\t\tchildrenList[i].setDroppable(true);\n\t\t\t\t\t} else if (params == 'drop') {\n\t\t\t\t\t\tchildrenList[i].destroy();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchildrenList[i].unselect();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tsetSelected: function (value) {\n\t\t\tthis._selected = value\n\t\t},\n\n\t\tisSelected: function () {\n\t\t\treturn this._selected;\n\t\t},\n\n\t\tgetName: function () {\n\t\t\treturn this._itemLabel.getValue();\n\t\t},\n\n\t\tgetCurrentPanel: function () {\n\t\t\treturn this._currentPanel;\n\t\t},\n\n\t\tsetCurrentPanel: function (panel) {\n\t\t\tthis._currentPanel = panel;\n\t\t},\n\n\t\tedit: function () {\n\t\t\tthis._editing = true;\n\t\t\tthis._itemInput.setValue(this._itemLabel.getValue());\n\t\t\tthis._itemLabel.setVisibility('excluded');\n\t\t\tthis._itemInput.setVisibility('visible');\n\t\t\tthis._itemInput.focus();\n\t\t\tthis._itemInput.addListener('focusin', function (e) {\n\t\t\t\tthis.setTextSelection(0, this.getValue().lastIndexOf('.'));\n\t\t\t\t\/\/this.selectAllText();\n\t\t\t});\n\t\t},\n\n\t\tcancelEdit: function () {\n\t\t\tthis._editing = false;\n\t\t\tthis._itemLabel.setVisibility('visible');\n\t\t\tthis._itemInput.setVisibility('excluded');\n\t\t},\n\n\t\tselect: function () {\n\t\t\tthis.setDecorator(this._decoratorMouseSelected);\n\t\t\tif (this.getCurrentPath() != 'share:\/\/\/' && this.getCurrentPath() != 'workgroup:\/\/\/') {\n\t\t\t\tthis._layoutButtonSelection.setIcon('index.php?extern=images\/less2.png');\n\t\t\t\tthis._layoutButtonMenu.setIcon('index.php?extern=images\/arrow3.png');\n\t\t\t}\n\t\t\tthis.setSelected(true);\n\t\t\tthis.fireEvent('selected');\n\t\t},\n\n\t\tunselect: function () {\n\t\t\tthis._editing = false;\n\t\t\tthis._selected = false;\n\t\t\tthis._activeMenu = false;\n\t\t\tthis._itemLabel.setVisibility('visible');\n\t\t\tthis._itemInput.setVisibility('excluded');\n\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\tif (this.getCurrentPath() != 'share:\/\/\/' && this.getCurrentPath() != 'workgroup:\/\/\/') {\n\t\t\t\tthis._layoutButtonSelection.setIcon(null);\n\t\t\t\tthis._layoutButtonMenu.setIcon(null);\n\t\t\t}\n\t\t\tthis.setSelected(false);\n\n\t\t\tthis.fireEvent('unselected');\n\t\t}\n\t}\n});\n\n\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nqx.Class.define('eyeos.files.SideBarNewPlace', {\n\n\textend: qx.ui.container.Composite,\n\n\tconstruct: function (manager, droppable, position) {\n\n\t\tthis.base(arguments);\n\t\tthis._position = position;\n\t\tthis.setAcceptsDrop(droppable);\n\t\tthis._buildLayout();\n\t\t\/\/ Reference and parent objects\n\t\tthis.setManager(manager);\n\t},\n\n\tproperties: {\n\t\tacceptsDrop: {\n\t\t\tcheck: 'Boolean',\n\t\t\tinit: false\n\t\t}\n\t},\n\n\tmembers: {\n\t\t_manager: null,\n\n\t\t_decoratorDragOver: new qx.ui.decoration.Single(1, 'solid', '#74a100').set({backgroundColor: '#b9d07f'}),\n\t\t_decoratorMouseOut: new qx.ui.decoration.Single(1, 'solid', 'transparent'),\n\n\t\t_buildLayout: function () {\n\t\t\tthis.setLayout(new qx.ui.layout.HBox());\n\t\t\tthis.set({\n\t\t\t\theight: 5,\n\t\t\t\tminHeight: 5,\n\t\t\t\tmaxHeight: 5\n\t\t\t});\n\n\t\t\tif (this.getAcceptsDrop()) {\n\t\t\t\tthis.setDroppable(true);\n\t\t\t}\n\t\t},\n\n\t\tgetManager: function () {\n\t\t\treturn this._manager;\n\t\t},\n\n\t\tsetManager: function (manager) {\n\t\t\tthis._manager = manager;\n\t\t}\n\t}\n});\n\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nqx.Class.define('eyeos.files.HeaderBarItem',  {\n\n\textend: qx.ui.core.Widget,\n\n\tconstruct: function (manager, path, name, clickable, droppable) {\n\t\tthis.base(arguments);\n\t\tif (droppable) {\n\t\t\tthis.setAcceptsDrop(true);\n\t\t}\n\t\tthis._clickable = clickable;\n\t\tthis.setManager(manager);\n\t\tthis.setPath(path);\n\t\tthis._buildLayout(name);\n\t},\n\n\tproperties: {\n\t\tacceptsDrop: {\n\t\t\tcheck: 'Boolean',\n\t\t\tinit: false\n\t\t}\n\t},\n\n\tmembers: {\n\n\t\t_clickable: null,\n\t\t_manager: null,\n\t\t_file: null,\n\t\t_decoratorMouseOut: new qx.ui.decoration.Single(1, 'solid', 'transparent'),\n\t\t_decoratorMouseOver: new qx.ui.decoration.Single(1, 'solid', '#A3A3A3').set({backgroundColor: '#D3D3D3'}),\n\t\t_decoratorDragOver: new qx.ui.decoration.Single(1, 'solid', '#74a100').set({backgroundColor: '#b9d07f'}),\n\n\t\t_buildLayout: function (name) {\n\t\t\tthis.set({\n\t\t\t\tdroppable: false,\n\t\t\t\tpadding: 5\n\t\t\t});\n\n\t\t\tif (this.getAcceptsDrop()) {\n\t\t\t\tthis.set({droppable: true});\n\t\t\t}\n\n\t\t\tvar layout = new qx.ui.layout.HBox();\n\t\t\tthis._setLayout(layout);\n\n\t\t\tthis._label = new qx.ui.basic.Label(tr(name));\n\t\t\tthis._add(this._label, {flex: 1});\n\t\t\tif (this._clickable) {\n\t\t\t\tvar image = new qx.ui.basic.Image('index.php?extern=images\/arrowHeader.png').set({\n\t\t\t\t\tpaddingTop: 3,\n\t\t\t\t\tpaddingLeft: 7\n\t\t\t\t});\n\t\t\t\tthis._add(image);\n\t\t\t}\n\t\t\tthis._label.setDecorator(this._decoratorMouseOut);\n\t\t},\n\n\t\tgetManager: function () {\n\t\t\treturn this._manager;\n\t\t},\n\n\t\tsetManager: function (manager) {\n\t\t\tthis._manager = manager;\n\t\t},\n\n\t\tgetPath: function () {\n\t\t\treturn this._path;\n\t\t},\n\n\t\tsetPath: function (path) {\n\t\t\tthis._path = path;\n\t\t}\n\t}\n});\n\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nqx.Class.define('eyeos.files.ViewManager', {\n\n\textend: eyeos.ui.Window,\n\n\tconstruct: function (controller, model, application, caption, icon, fakeMinimize, fakeClose) {\n\t\targuments.callee.base.call(this, application, caption, icon, fakeMinimize, fakeClose);\n\t\tthis.setController(controller);\n\t\tthis.setModel(model);\n\t\tthis.setKeyPress(false);\n\t\tthis._buildLayout();\n\t\tthis._buildMenuBar();\n\t\tthis._buildToolBar();\n\t\tthis._buildSideBar();\n\t\tthis._buildContent();\n\t\tthis._addListeners();\n\t\tthis.set({\n\t\t\twidth: 800,\n\t\t\theight: 450\n\t\t});\n\t\tthis.open();\n                this.toggleShowStatusbar();\n\t},\n\n\tproperties: {\n\t\tcontroller: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tmodel: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tkeyPress: {\n\t\t\tcheck: 'Boolean'\n\t\t}\n\t},\n\n\tmembers: {\n\n\t\t_content: null,\n\t\t_mainView: null,\n\t\t_menuBar: null,\n\t\t_searchBox: null,\n\t\t_sideBar: null,\n\t\t_toolBar: null,\n\t\t_toolBarLayout: null,\n\t\t_top: null,\n\n\t\tclose: function () {\n\t\t\tvar dBusListeners = this.getController()._dBusListeners\n\t\t\tvar dBus = eyeos.messageBus.getInstance();\n\t\t\tfor (var i = 0; i < dBusListeners.length; ++i) {\n\t\t\t\tdBus.removeListenerById(dBusListeners[i]);\n\t\t\t}\n\t\t\tthis.base(arguments);\n\t\t},\n\n\t\t_buildLayout: function () {\n\n\t\t\tthis.setContentPadding(0);\n\t\t\tthis.setLayout(new qx.ui.layout.HBox());\n\n\t\t\tthis._socialBar = new eyeos.socialbar.SocialBar('#FFFFFF');\n\n\t\t\tthis._mainWindow = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n\n\t\t\tvar borderBottom = new qx.ui.decoration.Single(2, 'solid', '#D3D3D3').set({\n\t\t\t\tstyleLeft: null,\n\t\t\t\tstyleTop: null,\n\t\t\t\tstyleRight: null\n\t\t\t});\n\n\t\t\tvar borderRight = new qx.ui.decoration.Single(1, 'solid', '#D3D3D3').set({\n\t\t\t\tstyleLeft: null,\n\t\t\t\tstyleTop: null,\n\t\t\t\tstyleBottom: null\n\t\t\t});\n\n\t\t\tthis._top = new qx.ui.container.Composite(new qx.ui.layout.VBox()).set({decorator: borderBottom});\n\t\t\tthis._menuBar = new qx.ui.menubar.MenuBar().set({decorator: null, backgroundColor: '#FCFCFC'});\n\t\t\tthis._toolBarLayout = new qx.ui.container.Composite(new qx.ui.layout.HBox()).set({\n\t\t\t\tbackgroundColor: '#FCFCFC'\n\t\t\t});\n\t\t\tthis._searchBox = new qx.ui.form.TextField(tr('Search')).set({\n\t\t\t\tmarginTop: 8,\n\t\t\t\tmarginRight: 7,\n\t\t\t\tmarginLeft: 20,\n\t\t\t\twidth: 120\n\t\t\t});\n\t\t\tthis._searchBox.addListener('focusin', function (e) {\n\t\t\t\tif (this.getValue() == tr('Search')){\n\t\t\t\t\tthis.setValue('');\n\t\t\t\t} \n\t\t\t});\n\t\t\tthis._searchBox.addListener('keypress', function(e) {\n\t\t\t\tif (e.getKeyIdentifier().toLowerCase() == 'enter') {\n                                    this._view.filterBrowse(this._searchBox.getValue());\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\tthis._toolBar = new qx.ui.toolbar.ToolBar().set({decorator: null, backgroundColor: '#FCFCFC'});\n\t\t\tthis._content = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n\t\t\tthis._sideBar = new qx.ui.container.Composite(new qx.ui.layout.VBox()).set({\n\t\t\t\tbackgroundColor: '#FFFFFF',\n\t\t\t\tdecorator: borderRight\n\t\t\t});\n\n\t\t\tthis._mainView = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n\n\t\t\tthis._toolBarLayout.add(this._toolBar, {flex: 1});\n\t\t\tthis._toolBarLayout.add(this._searchBox);\n\t\t\tthis._top.add(this._menuBar);\n\t\t\tthis._top.add(this._toolBarLayout);\n\t\t\tthis._mainWindow.add(this._top);\n\t\t\tthis._content.add(this._sideBar);\n\t\t\tthis._content.add(this._mainView, {flex: 1});\n\t\t\tthis._mainWindow.add(this._content, {flex: 1});\n\t\t\tthis.add(this._mainWindow, {flex: 1})\n\t\t\tthis.add(this._socialBar);\n\t\t},\n\n\t\t_buildDynamicBar: function (which, buttons, menus) {\n\t\t\tfor (var i = 0; i < buttons.length; ++i) {\n\t\t\t\tvar id = buttons[i].id;\n\t\t\t\tif (menus[id] != undefined) {\n\t\t\t\t\tvar borderMenu = new qx.ui.decoration.Single(1, 'solid', '#C3C3C3');\n\t\t\t\t\tvar menu = new qx.ui.menu.Menu().set({\n\t\t\t\t\t\tdecorator: borderMenu,\n\t\t\t\t\t\tshadow: null,\n\t\t\t\t\t\tpadding: 3,\n\t\t\t\t\t\tbackgroundColor: '#F3F3F3'\n\t\t\t\t\t});\n\t\t\t\t\tfor (var f = 0; f < menus[id].length; ++f) {\n\n\t\t\t\t\t\tif (menus[id] != undefined) {\n\t\t\t\t\t\t\tvar menuItem = null;\n\t\t\t\t\t\t\tif (menus[id][f] && menus[id][f].id != 'separator') {\n\t\t\t\t\t\t\t\tmenuItem = new qx.ui.menu.Button(tr(menus[id][f].name), menus[id][f].image);\n\t\t\t\t\t\t\t\tmenuItem.setUserData('id', menus[id][f].id);\n\t\t\t\t\t\t\t\tmenuItem._manager = this.getController();\n\t\t\t\t\t\t\t\tmenuItem.addListener('appear', function (e) {\n\t\t\t\t\t\t\t\t\tthis.setBackgroundColor(null);\n\t\t\t\t\t\t\t\t\tthis.setDecorator(null);\n\t\t\t\t\t\t\t\t\tthis.setTextColor('#4A4A4A');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tmenuItem.addListener('mouseover', function (e) {\n\t\t\t\t\t\t\t\t\tthis.setBackgroundColor('#D3D3D3');\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tmenuItem.addListener('mouseout', function (e) {\n\t\t\t\t\t\t\t\t\tif (!qx.ui.core.Widget.contains(menuItem, e.getRelatedTarget())) {\n\t\t\t\t\t\t\t\t\t\tthis.setDecorator(null);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tthis.setBackgroundColor(null);\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tmenuItem.addListener('execute', function (e) {\n\t\t\t\t\t\t\t\t\t\/\/\t\t\t\t\t\t\t\t\t\/\/console.log('ye')\n\t\t\t\t\t\t\t\t\teval('this._manager.'+this.getUserData('id'));\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmenuItem = new qx.ui.menu.Separator();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmenu.add(menuItem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (which == 'menu') {\n\t\t\t\t\t\tvar item = new qx.ui.menubar.Button(tr(buttons[i].name), buttons[i].image, menu);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar item = new qx.ui.toolbar.MenuButton(tr(buttons[i].name), buttons[i].image, menu);\n\t\t\t\t\t\titem.setIconPosition('top');\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tif (which == 'menu') {\n\t\t\t\t\t\tvar item = new qx.ui.menubar.Button(tr(buttons[i].name), buttons[i].image);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar item = new qx.ui.toolbar.Button(tr(buttons[i].name), buttons[i].image);\n\t\t\t\t\t\titem.setIconPosition('top');\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\titem.setUserData('id', buttons[i].id);\n\t\t\t\titem._manager = this.getController();\n\t\t\t\titem.addListener('execute', function (e) {\n\t\t\t\t\teval('this._manager.'+this.getUserData('id'));\n\t\t\t\t});\n\t\t\t\tif (which == 'menu') {\n\t\t\t\t\tthis._menuBar.add(item);\n\t\t\t\t} else {\n\t\t\t\t\tthis._toolBar.add(item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_buildMenuBar: function () {\n\t\t\tthis._menuBar.removeAll();\n\t\t\tthis._buildDynamicBar('menu', this.self(arguments).MENUBAR_BUTTONS, this.self(arguments).MENUBAR_MENUS);\n\t\t},\n\n\t\t_buildToolBar: function () {\n\t\t\tthis._toolBar.removeAll();\n\t\t\tthis._buildDynamicBar('toolbar', this.self(arguments).TOOLBAR_BUTTONS, this.self(arguments).TOOLBAR_MENUS);\n\t\t},\n\n\t\t_buildSideBar: function () {\n\t\t\tthis._places = new eyeos.files.Sidebar(tr('Places'), this.self(arguments).PLACES, this.getController(), true);\n\t\t\tthis._sideBar.add(this._places);\n\n\t\t\tthis._shared = new eyeos.files.Sidebar(tr('Shared'), this.self(arguments).SHARES, this.getController(), false);\n\t\t\tthis._sideBar.add(this._shared);\n\t\t\t\n\t\t\tthis._workgroups = new eyeos.files.Sidebar(tr('Groups'), this.self(arguments).WORKGROUPS, this.getController(), false);\n\t\t\tthis._sideBar.add(this._workgroups);\n\t\t},\n\n\t\t_buildContent: function () {\n\t\t\tthis._header = new eyeos.files.HeaderBar(this);\n\t\t\tif (this.getModel().getDefaultView() == 'iconview') {\n\t\t\t\tthis._view = new eyeos.files.IconView(this);\n\t\t\t} else {\n\t\t\t\t\/\/this._view = new eyeos.files.IconView(this._checknum);\n\t\t\t}\n\t\t\tthis._mainView.add(this._header);\n\t\t\tthis._mainView.add(this._view, {flex: 1});\n\t\t},\n\n\t\t_addListeners: function () {\n\t\t\tthis.addListener('keydown', function (e) {\n\t\t\t\tif (e.getKeyIdentifier() == 'Control') {\n\t\t\t\t\tthis.setKeyPress(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.addListener('keyup', function (e) {\n\t\t\t\tif (e.getKeyIdentifier() == 'Control') {\n\t\t\t\t\tthis.setKeyPress(false);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t\/\/copy by shortcuts\n\t\t\tthis.addListener('keypress', function(e) {\n\t\t\t\tif(this.isKeyPress()) {\n\t\t\t\t\tif(e.getKeyIdentifier() == 'C') {\n\t\t\t\t\t\tthis.getController().copyFile();\n\t\t\t\t\t} else if(e.getKeyIdentifier() == 'V') {\n\t\t\t\t\t\tthis.getController().pasteFile();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\tvar bus = eyeos.messageBus.getInstance();\n\t\t\tbus.addListener('eyeos_upload_uploadFinished', function(e) {\n\t\t\t\tif (e.getData() != null && e.getData() != undefined) {\n\t\t\t\t\tthis.getController()._browsePath(this.getModel().getCurrentPath()[1], true);\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t},\n\n\t\t\/**\n\t\t * Common View functions that are linked to the member \"_view\" which can switch between IconView and the future ListView\n\t\t * TODO: Some functions should be common and implemented directly here, not on every view\n\t\t *\/\n\n\t\treorder: function (filesToOrder) {\n\t\t\treturn this._view.reorder(filesToOrder);\n\t\t},\n\n\t\tshowBrowse: function () {\n\t\t\tthis._header.showBrowse();\n\t\t\tthis._view.showBrowse();\n\t\t},\n\n\t\treturnSelected: function () { \n\t\t\treturn this._view.returnSelected();\n\t\t},\n\n\t\treturnAll: function () { \n\t\t\treturn this._view.returnAll();\n\t\t},\n\n\t\tresetAllSelected: function () { \n\t\t\tthis._view.resetAllSelected();\n\t\t}\n\t},\n\n\t\/\/ function tr() to translate menus and toolbar isn't need here, because apply translate when items is constructing.\n\tstatics: {\n\t\tMENUBAR_BUTTONS: [\n\t\t\t{\n\t\t\t\tname: 'File',\n\t\t\t\tid: 'menuBarFile'\n\t\t\t}, {\n\t\t\t\tname: 'Edit',\n\t\t\t\tid: 'menuBarEdit'\n\t\t\t}\n\/\/\t\t\t{\n\/\/\t\t\t\tname: 'View',\n\/\/\t\t\t\tid: 'menuBarView'\n\/\/\t\t\t}\n\t\t],\n\n\t\tMENUBAR_MENUS: {\n\t\t\tmenuBarFile: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Open',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/actions\/document-open.png',\n\t\t\t\t\tid: 'openFile()'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'Rename',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/actions\/edit-rename.png',\n\t\t\t\t\tid: 'editFile()'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'Separator',\n\t\t\t\t\tid: 'separator'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'New folder',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/places\/folder.png',\n\t\t\t\t\tid: 'newFolder()'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'New simple document',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/mimetypes\/text-x-generic.png',\n\t\t\t\t\tid: 'newFile(\\'txt\\')'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'New document',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/mimetypes\/application-msword.png',\n\t\t\t\t\tid: 'newFile(\\'edoc\\')'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'New link',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/mimetypes\/application-x-mswinurl.png',\n\t\t\t\t\tid: 'newLink()'\n\t\t\t\t}\n\t\t\t],\n\n\t\t\tmenuBarEdit: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Cut',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/actions\/edit-cut.png',\n\t\t\t\t\tid: 'cutFile()'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'Copy',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/actions\/edit-copy.png',\n\t\t\t\t\tid: 'copyFile()'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'Paste',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/actions\/edit-paste.png',\n\t\t\t\t\tid: 'pasteFile()'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\n\t\tTOOLBAR_BUTTONS: [\n\t\t\t{\n\t\t\t\tname: 'Back',\n\t\t\t\tid: 'toolBarBack()',\n\t\t\t\timage: 'index.php?extern=images\/22x22\/actions\/go-previous.png'\n\t\t\t}, {\n\t\t\t\tname: 'Forward',\n\t\t\t\tid: 'toolBarForward()',\n\t\t\t\timage: 'index.php?extern=images\/22x22\/actions\/go-next.png'\n\t\t\t}, {\n\t\t\t\tname: 'New',\n\t\t\t\tid: 'toolBarNew',\n\t\t\t\timage: 'index.php?extern=images\/22x22\/actions\/document-new.png'\n\t\t\t}, {\n\t\t\t\tname: 'Upload',\n\t\t\t\tid: 'toolBarUpload()',\n\t\t\t\timage: 'index.php?extern=images\/eyefiles\/upload.png'\n\t\t\t}\n\t\t],\n\n\t\tTOOLBAR_MENUS: {\n\t\t\ttoolBarNew: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Folder',\n\t\t\t\t\timage: 'index.php?extern=images\/eyefiles\/folder.png',\n\t\t\t\t\tid: 'newFolder()'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'Simple document',\n\t\t\t\t\timage: 'index.php?extern=images\/eyefiles\/doc.png',\n\t\t\t\t\tid: 'newFile(\\'txt\\')'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'Document',\n\t\t\t\t\timage: 'index.php?extern=images\/eyefiles\/document.png',\n\t\t\t\t\tid: 'newFile(\\'edoc\\')'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'Spreadsheet',\n\t\t\t\t\timage: 'index.php?extern=images\/eyefiles\/spreadsheet.png',\n\t\t\t\t\tid: 'newFile(\\'xls\\')'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'New link',\n\t\t\t\t\timage: 'index.php?extern=images\/22x22\/mimetypes\/application-x-mswinurl.png',\n\t\t\t\t\tid: 'newLink()'\n\t\t\t\t}\n\t\t\t],\n\t\t\ttoolBarView: [\n\t\t\t\t{\n\t\t\t\t\tname: 'Icons',\n\t\t\t\t\timage: 'index.php?extern=images\/eyefiles\/view_icon.png'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'List',\n\t\t\t\t\timage: 'index.php?extern=images\/eyefiles\/view_list.png'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'Icon with types',\n\t\t\t\t\timage: 'index.php?extern=images\/eyefiles\/view_icon.png'\n\t\t\t\t}, {\n\t\t\t\t\tname: 'Hide SocialBar',\n\t\t\t\t\timage: 'index.php?extern=images\/eyefiles\/view_icon.png'\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\n\t\tPLACES: [\n\t\t\t{\n\t\t\t\tlabel: 'Home',\n\t\t\t\ticon: 'index.php?extern=images\/16x16\/places\/user-home.png',\n\t\t\t\tpath: 'home:\/\/~'+eyeos.getCurrentUserName()+'\/'\n\t\t\t}, {\n\t\t\t\tlabel: 'Desktop',\n\t\t\t\ticon: 'index.php?extern=images\/16x16\/places\/user-desktop.png',\n\t\t\t\tpath: 'home:\/\/~'+eyeos.getCurrentUserName()+'\/Desktop'\n\t\t\t}, {\n\t\t\t\tlabel: 'Documents',\n\t\t\t\ticon: 'index.php?extern=images\/16x16\/places\/folder-txt.png',\n\t\t\t\tpath: 'home:\/\/~'+eyeos.getCurrentUserName()+'\/Documents'\n\t\t\t}, {\n\t\t\t\tlabel: 'Images',\n\t\t\t\ticon: 'index.php?extern=images\/16x16\/places\/folder-image.png',\n\t\t\t\tpath: 'home:\/\/~'+eyeos.getCurrentUserName()+'\/Images'\n\t\t\t}, {\n\t\t\t\tlabel: 'Music',\n\t\t\t\ticon: 'index.php?extern=images\/16x16\/places\/folder-sound.png',\n\t\t\t\tpath: 'home:\/\/~'+eyeos.getCurrentUserName()+'\/Music'\n\t\t\t}\n\t\t],\n\n\t\tSHARES: [\n\t\t\t{\n\t\t\t\tlabel: 'By me',\n\t\t\t\ticon: 'index.php?extern=images\/16x16\/places\/user-identity.png',\n\t\t\t\tpath: 'share:\/\/~' + eyeos.getCurrentUserName() + '\/'\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: 'By my contacts',\n\t\t\t\ticon: 'index.php?extern=images\/16x16\/apps\/system-users.png',\n\t\t\t\tpath: 'share:\/\/\/'\n\t\t\t}\n\t\t],\n\n\t\tWORKGROUPS: [\n\t\t\t{\n\t\t\t\tlabel: 'All my groups',\n\t\t\t\ticon: 'index.php?extern=images\/16x16\/places\/folder-development.png',\n\t\t\t\tpath: 'workgroup:\/\/\/'\n\t\t\t}\n\t\t]\n\t}\n});\n\n\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nfunction files_application(checknum, pid, args) {\n\tvar filesApplication = new eyeos.system.EyeApplication('files', checknum, pid);\n\tvar filesController = new eyeos.files.Controller(filesApplication, args, 'iconview', checknum);\n}\n\nqx.Class.define('eyeos.files.Controller', {\n\n\textend: qx.core.Object,\n\t\n\tconstruct: function (application, args, defaultView, checknum) {\n\t\t\n\t\targuments.callee.base.call(this);\n\t\t\n\t\t\/\/ SETTERS\n\t\tthis.setApplication(application);\n\n\t\t\/*\n\t\t * We fill with a default path in case none is given\n\t\t * Init of the model and the view manager\n\t\t *\/\n\t\t\n\t\tvar defArgs;\n\t\tif (args[0] == undefined) {\n\t\t\tdefArgs = ['path', 'home:\/\/\/'];\n\t\t} else {\n\t\t\tdefArgs = ['path', args[0]];\n\t\t}\n\t\t\n\t\tthis.setModel(new eyeos.files.Model(defaultView, defArgs));\n\n\t\t\/*\n\t\t * Init of the application depending on what we have to show\n\t\t *\/\n\t\tthis._addListeners();\n\t\tthis.setView(new eyeos.files.ViewManager(\n\t\t\t\tthis,\n\t\t\t\tthis.getModel(),\n\t\t\t\tthis.getApplication(),\n\t\t\t\t'Files',\n\t\t\t\t'index.php?extern=\/images\/16x16\/apps\/system-file-manager.png',\n\t\t\t\tfalse,\n\t\t\t\tfalse\n\t\t));\n\n\t\t\/\/ Init SocialBarUpdater\n\t\tvar socialBarUpdater = new eyeos.files.SUManager(this.getView()._socialBar, checknum);\n\t\tthis.setSocialBarUpdater(socialBarUpdater);\n\t\tthis._addSocialBarUpdaterListeners();\n\t\t\n\t\tthis._browse(true);\n\t\t\/\/this.getView().maximize();\n\t},\n\n\tproperties: {\n\t\tapplication: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tmodel: {\n\t\t\tcheck: 'Object'\n\t\t},\n\t\t\n\t\tview: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tsocialBarUpdater: {\n\t\t\tcheck: 'eyeos.files.SocialBarUpdater',\n\t\t\tinit: null\n\t\t}\n\t},\n\n\tmembers: {\n\n\t\t_dBusListeners: new Array(),\n\t\t\n\t\t_filesQueue: eyeos.filesQueue.getInstance(),\n\t\t_dBus: eyeos.messageBus.getInstance(),\n\n\t\t_addListeners: function () {\n\/\/\t\t\tthis.addListener('selectedFile', function (e) {\n\/\/\t\t\t\tvar selected = e.getData();\n\/\/\t\t\t\tvar temp = new Array();\n\/\/\t\t\t\tvar callToUpdateContacts = true;\n\/\/\t\t\t\tif (selected.length == 1) {\n\/\/\t\t\t\t\ttemp.push(selected[0].getFile());\n\/\/\t\t\t\t} else if (selected.length > 1) {\n\/\/\t\t\t\t\tfor (var i = 0; i < selected.length; ++i) {\n\/\/\t\t\t\t\t\ttemp.push(selected[i].getFile());\n\/\/\t\t\t\t\t\tcallToUpdateContacts = false;\n\/\/\t\t\t\t\t}\n\/\/\t\t\t\t}\n\/\/\t\t\t\tthis.getView().updateSocialBar(temp, callToUpdateContacts);\n\/\/\t\t\t});\n\/\/\n\/\/\t\t\tthis.addListener('cleanSocialBar', function () {\n\/\/\t\t\t\tthis.getView().cleanSocialBar();\n\/\/\t\t\t});\n\n\n\t\t\t\/\/ DBUS Messages for syncing all \"Files\"\n\n\t\t\t\/*\n\t\t\t * eyeos_files_delete - Deletes a file from the Model in case our current path is the same as the source one and updates the view\n\t\t\t *\n\t\t\t * @receives {Array} [sourcePath: string, files: Array] \n\t\t\t *\/\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_delete', function (e) {\n\t\t\t\tvar sourcePath = e.getData()[0];\n\t\t\t\tvar filesToDelete = e.getData()[1];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\n\t\t\t\tif(sourcePath.charAt(sourcePath.length-1) != '\/') {\n\t\t\t\t\tsourcePath = sourcePath + '\/';\n\t\t\t\t}\n\t\t\t\tif(currentPath.charAt(sourcePath.length-1) != '\/') {\n\t\t\t\t\tcurrentPath = currentPath + '\/';\n\t\t\t\t}\n\t\t\t\tif (sourcePath == currentPath) {\n\t\t\t\t\tfor (var i = currentFiles.length - 1; i >= 0; --i) {\n\t\t\t\t\t\tif (filesToDelete.indexOf(currentFiles[i].getAbsolutePath()) != -1) {\n\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t} else if (filesToDelete.indexOf(currentPath) != -1) {\n\t\t\t\t\tthis._browsePath('home:\/\/~'+eyeos.getCurrentUserName()+'\/');\n\t\t\t\t}\n\n\t\t\t\t\/\/Update SocialBar\n\t\t\t\tvar params = {\n\t\t\t\t\tpath: currentPath,\n\t\t\t\t\tchecknum: this.getApplication().getChecknum()\n\t\t\t\t}\n\t\t\t\tthis.getSocialBarUpdater().directoryChanged(params);\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_new - Adds a file to the Model in case our current path is the same as the source one and updated the view\n\t\t\t *\n\t\t\t * @receives {Array} [sourcePath: string, file: Object]\n\t\t\t *\/\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_new', function (e) {\n\n\t\t\t\tvar sourcePath = e.getData()[0];\n\t\t\t\tvar fileToCreate = e.getData()[1];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\n\t\t\t\tif (sourcePath == currentPath) {\n\t\t\t\t\tvar file = new eyeos.files.File(fileToCreate);\n\t\t\t\t\tthis.getModel().getCurrentFiles().push(file);\n\t\t\t\t\tthis.getView()._view.showBrowse();\n\n                                        var items = this.getView()._view.returnAll();\n                                        \/\/en items tengo un array de IconViewItems\n                                        var i = 0;\n                                        var size = items.length;\n                                        for(i=0;i<size;i++) {\n                                            if(items[i].getFile().getName() == e.getData()[1].name) {\n                                                items[i].select();\n                                                this.editFile();\n                                                i = size;\n                                            }\n\n                                        }\n\t\t\t\t}\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_cut - Directly updates the view if the source folder is our current one\n\t\t\t *\n\t\t\t * @receives {Array} [sourcePath: string, files: Array]\n\t\t\t *\/\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_cut', function (e) {\n\n\t\t\t\tvar sourcePath = e.getData()[0];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\n\t\t\t\tvar filesToCut = e.getData()[1];\n\t\t\t\tvar filesToCutPath = new Array();\n\t\t\t\tfor (var i = 0; i < filesToCut.length; ++i) {\n\t\t\t\t\tfilesToCutPath[i] = filesToCut[i].getAbsolutePath();\n\t\t\t\t}\n\n\t\t\t\tif (sourcePath == currentPath) {\n\t\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\t\t\t\t\tvar currentFilesPaths = new Array();\n\t\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\t\tcurrentFilesPaths[i] = currentFiles[i].getAbsolutePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < filesToCut.length; ++i) {\n\t\t\t\t\t\tvar index = currentFilesPaths.indexOf(filesToCutPath[i]);\n\t\t\t\t\t\tif (index != -1) {\n\t\t\t\t\t\t\tcurrentFiles[index].setCutted(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t} else if (filesToCutPath.indexOf(currentPath) != -1) {\n\t\t\t\t\tthis._browsePath('home:\/\/~'+eyeos.getCurrentUserName()+'\/');\n\t\t\t\t}\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_update - Adds\/Remove information to the Files objects and updates the view\n\t\t\t *\n\t\t\t * @receives {Array} [sourcePath: string, files: Array]\n\t\t\t *\/\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_update', function (e) {\n\t\t\t\tvar sourcePath = e.getData()[0];\n\t\t\t\tvar filesToUpdate = e.getData()[1];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\n\t\t\t\tif (currentPath.substr(currentPath.length - 1) != '\/') {\n\t\t\t\t\tcurrentPath += '\/';\n\t\t\t\t}\n\n\t\t\t\tif (sourcePath.substr(sourcePath.length - 1) != '\/') {\n\t\t\t\t\tsourcePath += '\/';\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif (sourcePath == currentPath) {\n\n\t\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\t\t\t\t\tvar currentFilesPath = new Array();\n\t\t\t\t\tvar filesToUpdatePath = new Array();\n\n\t\t\t\t\tfor (var i = 0; i < filesToUpdate.length; ++i) {\n\t\t\t\t\t\tfilesToUpdatePath.push(filesToUpdate[i].getAbsolutePath());\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\t\tcurrentFilesPath.push(currentFiles[i].getAbsolutePath());\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < filesToUpdate.length; ++i) {\n\t\t\t\t\t\tvar index = currentFilesPath.indexOf(filesToUpdatePath[i]);\n\t\t\t\t\t\tif (index != -1) {\n\t\t\t\t\t\t\tcurrentFiles[index].setShared(filesToUpdate[i].getShared());\n\t\t\t\t\t\t\tcurrentFiles[index].setRating(filesToUpdate[i].getRating());\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar returnSelected = this.getView().returnSelected();\n\t\t\t\t\tfor (var i = 0; i < returnSelected.length; ++i) {\n\t\t\t\t\t\treturnSelected[i].updateImage();\n\t\t\t\t\t}\n\n\/\/\t\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t}\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_paste - Adds\/Remove files to\/from the Model in case our current path is the source or the target one and updates the view\n\t\t\t *\n\t\t\t * @receives {Array} [files: Array, action: string, sourcePath: string, targetPath: string, results: Array]\n\t\t\t *\n\t\t\t * (results is just used when our action is copy, it's an array containing the new names of the files in case they have been renamed\n\t\t\t *\/\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_paste', function (e) {\n\t\t\t\tvar files = e.getData()[0];\n\t\t\t\tvar action = e.getData()[1];\n\t\t\t\tvar source = e.getData()[2];\n\t\t\t\tvar target = e.getData()[3];\n\t\t\t\tvar results = e.getData()[4];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\n\t\t\t\tvar filesPath = new Array();\n\t\t\t\tvar currentFilesPath = new Array();\n\n\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\tcurrentFilesPath.push(currentFiles[i].getAbsolutePath());\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < files.length; ++i) {\n\t\t\t\t\tfilesPath.push(files[i].getAbsolutePath());\n\t\t\t\t}\n\n\t\t\t\tif (action == 'move') {\n\n\t\t\t\t\tvar toSplice = new Array();\n\n\t\t\t\t\tfor (var i = files.length - 1; i >= 0; --i) {\n\t\t\t\t\t\tvar index = currentFilesPath.indexOf(filesPath[i]);\n\t\t\t\t\t\tif (index != -1) {\n\t\t\t\t\t\t\tif (target == currentPath) {\n\t\t\t\t\t\t\t\tcurrentFiles[index].setCutted(false);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttoSplice.push(index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (target == currentPath) {\n\t\t\t\t\t\t\t\tvar destination = target + '\/' + files[i].getName();\n\t\t\t\t\t\t\t\tvar index = currentFilesPath.indexOf(destination);\n\t\t\t\t\t\t\t\tif (index == -1) {\n\t\t\t\t\t\t\t\t\tvar newFile = {\n\t\t\t\t\t\t\t\t\t\ttype: files[i].getType(),\n\t\t\t\t\t\t\t\t\t\tsize: files[i].getSize(),\n\t\t\t\t\t\t\t\t\t\tname: files[i].getName(),\n\t\t\t\t\t\t\t\t\t\textension: files[i].getExtension(),\n\t\t\t\t\t\t\t\t\t\tpermissions: files[i].getPermissions(),\n\t\t\t\t\t\t\t\t\t\towner: files[i].getOwner(),\n\t\t\t\t\t\t\t\t\t\tpath: target,\n\t\t\t\t\t\t\t\t\t\tabsolutepath: destination,\n\t\t\t\t\t\t\t\t\t\tshared: files[i].getShared(),\n\t\t\t\t\t\t\t\t\t\trating: files[i].getRating(),\n\t\t\t\t\t\t\t\t\t\tcreated: files[i].getCreated(),\n\t\t\t\t\t\t\t\t\t\tmodified: files[i].getModified()\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tvar nFile = new eyeos.files.File(newFile);\n\t\t\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().push(nFile);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcurrentFiles[index].set({\n\t\t\t\t\t\t\t\t\t\ttype: files[i].getType(),\n\t\t\t\t\t\t\t\t\t\tsize: files[i].getSize(),\n\t\t\t\t\t\t\t\t\t\tname: files[i].getName(),\n\t\t\t\t\t\t\t\t\t\textension: files[i].getExtension(),\n\t\t\t\t\t\t\t\t\t\tpermissions: files[i].getPermissions(),\n\t\t\t\t\t\t\t\t\t\towner: files[i].getOwner(),\n\t\t\t\t\t\t\t\t\t\tshared: files[i].getShared(),\n\t\t\t\t\t\t\t\t\t\trating: files[i].getRating(),\n\t\t\t\t\t\t\t\t\t\tcreated: files[i].getCreated(),\n\t\t\t\t\t\t\t\t\t\tmodified: files[i].getModified()\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (toSplice.length >= 1) {\n\t\t\t\t\t\tfor (var i = 0; i < toSplice.length; ++i) {\n\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().splice(toSplice[i], 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else if (action == 'copy') {\n\t\t\t\t\tif (target == currentPath) {\n\t\t\t\t\t\tfor (var i = 0; i < results.length; ++i) {\n\t\t\t\t\t\t\tif (currentFilesPath.indexOf(results[i].absolutepath) == -1) {\n\t\t\t\t\t\t\t\tvar futureFile = currentPath  + results[i].name;\n\t\t\t\t\t\t\t\tif (currentFilesPath.indexOf(futureFile) == -1) {\n\t\t\t\t\t\t\t\t\tvar file = new eyeos.files.File(results[i]);\n\t\t\t\t\t\t\t\t\tfile.setShared('0');\n\t\t\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().push(file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_paste - Adds\/Remove files to\/from the Model in case our current path is the source or the target one and updates the view\n\t\t\t *\n\t\t\t * @receives {Array} [files: Array, action: string, sourcePath: string, targetPath: string, results: Array]\n\t\t\t *\n\t\t\t * (results is just used when our action is copy, it's an array containing the new names of the files in case they have been renamed\n\t\t\t *\/\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_drop', function (e) {\n\t\t\t\tvar files = e.getData()[0];\n\t\t\t\tvar source = e.getData()[1];\n\t\t\t\tvar target = e.getData()[2];\n\n\t\t\t\tif(target.charAt(target.length-1) != '\/') {\n\t\t\t\t\ttarget = target + '\/';\n\t\t\t\t}\n\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\n\t\t\t\tif(currentPath.charAt(currentPath.length-1) != '\/') {\n\t\t\t\t\tcurrentPath = currentPath + '\/';\n\t\t\t\t}\n\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\n\t\t\t\tvar filesPath = new Array();\n\t\t\t\tvar currentFilesPath = new Array();\n\n\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\tcurrentFilesPath.push(currentFiles[i].getAbsolutePath());\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < files.length; ++i) {\n\t\t\t\t\tfilesPath.push(files[i].getAbsolutePath());\n\t\t\t\t}\n\n\t\t\t\tvar toSplice = new Array();\n\n\t\t\t\tfor (var i = files.length - 1; i >= 0; --i) {\n\t\t\t\t\tvar index = currentFilesPath.indexOf(filesPath[i]);\n\t\t\t\t\tif (index != -1) {\n\t\t\t\t\t\tif (target != currentPath) {\n\t\t\t\t\t\t\ttoSplice.push(index);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (target == currentPath) {\n\t\t\t\t\t\t\tvar destination = target + files[i].getName();\n\t\t\t\t\t\t\tvar index = currentFilesPath.indexOf(destination);\n\t\t\t\t\t\t\tif (index == -1) {\n\t\t\t\t\t\t\t\tvar newFile = {\n\t\t\t\t\t\t\t\t\ttype: files[i].getType(),\n\t\t\t\t\t\t\t\t\tsize: files[i].getSize(),\n\t\t\t\t\t\t\t\t\tname: files[i].getName(),\n\t\t\t\t\t\t\t\t\textension: files[i].getExtension(),\n\t\t\t\t\t\t\t\t\tpermissions: files[i].getPermissions(),\n\t\t\t\t\t\t\t\t\towner: files[i].getOwner(),\n\t\t\t\t\t\t\t\t\tpath: target,\n\t\t\t\t\t\t\t\t\tabsolutepath: destination,\n\t\t\t\t\t\t\t\t\tshared: files[i].getShared(),\n\t\t\t\t\t\t\t\t\trating: files[i].getRating(),\n\t\t\t\t\t\t\t\t\tcreated: files[i].getCreated(),\n\t\t\t\t\t\t\t\t\tmodified: files[i].getModified()\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif(newFile.extension == 'LNK') {\n\t\t\t\t\t\t\t\t\tnewFile.content = files[i].getContent();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar nFile = new eyeos.files.File(newFile);\n\t\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().push(nFile);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcurrentFiles[index].set({\n\t\t\t\t\t\t\t\t\ttype: files[i].getType(),\n\t\t\t\t\t\t\t\t\tsize: files[i].getSize(),\n\t\t\t\t\t\t\t\t\tname: files[i].getName(),\n\t\t\t\t\t\t\t\t\textension: files[i].getExtension(),\n\t\t\t\t\t\t\t\t\tpermissions: files[i].getPermissions(),\n\t\t\t\t\t\t\t\t\towner: files[i].getOwner(),\n\t\t\t\t\t\t\t\t\tshared: files[i].getShared(),\n\t\t\t\t\t\t\t\t\trating: files[i].getRating(),\n\t\t\t\t\t\t\t\t\tcreated: files[i].getCreated(),\n\t\t\t\t\t\t\t\t\tmodified: files[i].getModified()\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (toSplice.length >= 1) {\n\t\t\t\t\tfor (var i = 0; i < toSplice.length; ++i) {\n\t\t\t\t\t\tthis.getModel().getCurrentFiles().splice(toSplice[i], 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.getView().showBrowse();\n\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_rename - Adds\/Remove files to\/from the Model in case our current path is the source or the target one\n\t\t\t *\n\t\t\t * @receives {Array} [oldName: string, sourcePath: string, results: Object containing the data of the file]\n\t\t\t *\/\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_rename', function (e) {\n\t\t\t\tvar sourcePath = e.getData()[1];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\tif (sourcePath == currentPath) {\n\t\t\t\t\tvar oldName = e.getData()[0];\n\t\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\t\t\t\t\tvar results = e.getData()[2];\n\t\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\t\tif (currentFiles[i].getAbsolutePath() == oldName) {\n\t\t\t\t\t\t\tcurrentFiles[i].setName(results.name);\n\t\t\t\t\t\t\tcurrentFiles[i].setAbsolutePath(results.absolutepath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.getView().showBrowse();\n\t\t\t}, this));\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_file_uploadComplete', function (e) {\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\tvar splitted = e.getData().absolutepath.split('\/');\n\t\t\t\tvar path = '';\n\t\t\t\tfor (var i = 0; i < splitted.length - 1; ++i) {\n\t\t\t\t\tif (splitted[i] != '') {\n\t\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\t\tpath += splitted[i] + '\/\/';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpath += splitted[i] + '\/';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (currentPath.substring(currentPath.length - 1) != '\/') {\n\t\t\t\t\tcurrentPath += '\/';\n\t\t\t\t}\n\n\t\t\t\tif (path == currentPath) {\n\t\t\t\t\tvar file = new eyeos.files.File(e.getData());\n\t\t\t\t\tthis.getModel().getCurrentFiles().push(file);\n\t\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t}\n\t\t\t}\n\t\t\t, this));\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_socialbar_ratingChanged', function (e) {\n\t\t\t\tvar eventPath = e.getData()['path'];\n\t\t\t\tvar eventFiles = e.getData()['files'];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\t\n\t\t\t\tif (eventPath == currentPath) {\n\t\t\t\t\tvar modelFiles = this.getModel().getCurrentFiles();\n\t\t\t\t\tfor (var i = 0; i < modelFiles.length; ++i) {\n\t\t\t\t\t\tfor (var j=0; j < eventFiles.length; ++j) {\n\t\t\t\t\t\t\tif (modelFiles[i].getAbsolutePath() == eventFiles[j].getAbsolutePath()) {\n\t\t\t\t\t\t\t\tmodelFiles[i].setRating(eventFiles[j].getRating());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t, this));\n\t\t},\n\n\t\t_addSocialBarUpdaterListeners: function () {\n\t\t\tthis.addListener('selectedFile', function (e) {\n\t\t\t\tvar params = {\n\t\t\t\t\tpath: this.getModel().getCurrentPath()[1],\n\t\t\t\t\tselected: this._getFilesFromIconViews(e.getData()),\n\t\t\t\t\tchecknum: this.getApplication().getChecknum()\n\t\t\t\t}\n\t\t\t\tthis.getSocialBarUpdater().selectionChanged(params);\n\t\t\t}, this);\n\n\t\t\tthis.addListener('directoryChanged', function (e) {\n\t\t\t\tvar params = {\n\t\t\t\t\tpath: e.getData(),\n\t\t\t\t\tchecknum: this.getApplication().getChecknum()\n\t\t\t\t}\n\t\t\t\tthis.getSocialBarUpdater().directoryChanged(params);\n\t\t\t}, this);\n\t\t},\n\n\t\t_getFilesFromIconViews: function (iconViews) {\n\t\t\tvar filesArray = [];\n\t\t\tfor (var i = 0; i < iconViews.length; ++i) {\n\t\t\t\tfilesArray.push(iconViews[i].getFile());\n\t\t\t}\n\t\t\treturn filesArray;\n\t\t},\n\n\t\t_browse: function (addToHistory) {\n\t\t\tvar currentPath = this.getModel().getCurrentPath();\n\t\t\tthis._browsePath(currentPath[1], addToHistory);\n\t\t},\n\n\t\t_browsePath: function(path, addToHistory) {\n\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'browsePath', [path, null, null], function (results) {\n\t\t\t\tthis._browsePath_callback(results, path, addToHistory);\n\t\t\t}, this, null, 12000);\n\t\t},\n\n\t\t_browsePath_callback: function(results, path, addToHistory) {\n\t\t\t\/\/ Send data to the model\n\t\t\tthis.getModel().setCurrentPath(['path', results.absolutepath]);\n\n\t\t\tif (addToHistory) {\n\t\t\t\tthis._addToHistory('path');\n\t\t\t}\n\n\t\t\t\/\/ Empty the array with all the previous files\n\t\t\tthis.getModel().getCurrentFiles().splice(0, this.getModel().getCurrentFiles().length);\n\t\t\t\n\t\t\t\/\/ The Cut\/Copy\/Paste queue\n\t\t\tvar filesQueue = this._filesQueue.getMoveQueue();\n\t\t\tvar action = this._filesQueue.getAction();\n\t\t\tvar filesQueuePath = new Array();\n\t\t\tfor (var i = 0; i < filesQueue.length; ++i) {\n\t\t\t\tfilesQueuePath.push(filesQueue[i].getAbsolutePath());\n\t\t\t}\n\n\t\t\t\/\/ Foreach file we will create a \"file object\" that will contain all the data of the file\n\t\t\tfor (var i = 0; i < results.files.length; ++i) {\n\t\t\t\tif(path == 'share:\/\/\/') {\n\t\t\t\t\tresults.files[i].sharedByContacts = true;\n\t\t\t\t}\n\n\t\t\t\tvar item = new eyeos.files.File(results.files[i]);\n\n\t\t\t\tvar index = filesQueuePath.indexOf(results.files[i].absolutepath);\n\t\t\t\tif (index != -1 && action == 'move') {\n\t\t\t\t\titem.setCutted(true);\n\t\t\t\t}\n\n\t\t\t\tthis.getModel().getCurrentFiles().push(item);\n\t\t\t}\n\n\t\t\t\/\/ We call to the view controller to show the browse\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) == 'share:\/\/' || currentPath == 'workgroup:\/\/\/') {\n\t\t\t\tthis.getView()._view.setContextMenu(null);\n\t\t\t} else {\n\t\t\t\tthis.getView()._view.setContextMenu(this.getView()._view._menu);\n\t\t\t}\n\t\t\tthis.getView().showBrowse();\n\n\t\t\tthis.fireDataEvent('directoryChanged', currentPath);\n\t\t},\n\n\t\t_addToHistory: function (input) {\n\t\t\t\/\/ If we have to add this path to the history ...\n\t\t\tvar history = this.getModel().getHistory();\n\t\t\tvar historyIndex = this.getModel().getHistoryIndex();\n\t\t\t\/\/ A new position is added on the array pointing to our current path\n\t\t\thistory[historyIndex] = [input, this.getModel().getCurrentPath()[1]];\n\t\t\tif (historyIndex > 0) {\n\t\t\t\tthis.getModel().getHistory().splice(parseInt(historyIndex + 1), parseInt(history.length - parseInt(historyIndex + 1)));\n\t\t\t}\n\t\t\tthis.getModel().setHistoryIndex(historyIndex + 1);\n\t\t},\n\n\t\tspecialMove: function (path, selection) {\n\t\t\tif(selection) {\n\t\t\t\tvar filesToMove = [];\n\t\t\t\tvar files = [path];\n\t\t\t\tfor(var i = 0; i < selection.length; i++) {\n\t\t\t\t\tvar info = selection[i].getUserData('info');\n\t\t\t\t\tvar pathFromFile = info.absolutepath;\n\t\t\t\t\tvar source = pathFromFile.replace(\/\\\\\/g, '\/').replace(\/\\\/[^\\\/]*\\\/?$\/, '');\n\t\t\t\t\tvar target = path;\n\t\t\t\t\tvar content = selection[i].getUserData('content');\n\t\t\t\t\tfiles.push(pathFromFile);\n\t\t\t\t\tfilesToMove.push({\n\t\t\t\t\t\t\tmPathFromFile: pathFromFile,\n\t\t\t\t\t\t\tmInfo: info,\n\t\t\t\t\t\t\tcontent: content,\n\t\t\t\t\t\t\tgetAbsolutePath: function() {\n\t\t\t\t\t\t\t\treturn this.mPathFromFile;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetName: function() {\n\t\t\t\t\t\t\t\treturn this.mPathFromFile.replace(\/^.*[\\\/\\\\]\/g, '');\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetType: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.type;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetSize: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.size;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetExtension: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.extension;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetPermissions: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.permissions;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetOwner: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.owner;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetShared: function() {\n\t\t\t\t\t\t\t\tif(!this.mInfo.shared) {\n\t\t\t\t\t\t\t\t\treturn \"0\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn this.mInfo.shared;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetRating: function() {\n\t\t\t\t\t\t\t\tif(!this.mInfo.rating) {\n\t\t\t\t\t\t\t\t\treturn \"0\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn this.mInfo.rating;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetCreated: function() {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tvar ret = this.mInfo.meta.creationTime;\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tvar foo = new Date;\n\t\t\t\t\t\t\t\t\tvar unixtime_ms = foo.getTime();\n\t\t\t\t\t\t\t\t\tvar unixtime = parseInt(unixtime_ms \/ 1000);\n\t\t\t\t\t\t\t\t\treturn unixtime;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetModified: function() {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tvar ret = this.mInfo.meta.modificationTime;\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tvar foo = new Date;\n\t\t\t\t\t\t\t\t\tvar unixtime_ms = foo.getTime();\n\t\t\t\t\t\t\t\t\tvar unixtime = parseInt(unixtime_ms \/ 1000);\n\t\t\t\t\t\t\t\t\treturn unixtime;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetContent: function() {\n\t\t\t\t\t\t\t\tif(!this.content) {\n\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn this.content;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'move', files, function (results) {\n\t\t\t\t\t\tthis._dBus.send('files', 'drop', [filesToMove, source, target]);\n\t\t\t\t\t\tthis._browsePath(path);\n\t\t\t\t\t\tthis._filesQueue.setDragQueue([]);\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\tvar filesToMove = this._filesQueue.getDragQueue();\n\t\t\t\tif (filesToMove.length >= 1) {\n\t\t\t\t\t\tvar files = new Array();\n\t\t\t\t\t\tvar action = this._filesQueue.getAction();\n\t\t\t\t\t\tvar source = this._filesQueue.getDragSource();\n\t\t\t\t\t\tvar target = path;\n\t\t\t\t\t\tfor (var i = 0; i < filesToMove.length; ++i) {\n\t\t\t\t\t\t\t\tfiles.push(filesToMove[i].getAbsolutePath());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfiles.unshift(path);\n\t\t\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'move', files, function (results) {\n\t\t\t\t\t\t\t\tthis._dBus.send('files', 'drop', [filesToMove, source, target]);\n\t\t\t\t\t\t\t\tthis._browsePath(path);\n\t\t\t\t\t\t\t\tthis._filesQueue.setDragQueue([]);\n\t\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\t\n\t\topenFile: function () {\n\t\t\tvar filesToOpen = this.getView().returnSelected();\n\t\t\tvar filesForViewer = new Array();\n\t\t\tvar filesForDocuments = new Array();\n\t\t\tvar filesForFemto = new Array();\n\t\t\tvar foldersToOpen = new Array();\n\t\t\tvar filesForImageViewer = new Array();\n\t\t\tvar filesForDocPreview = new Array();\n\t\t\tvar filesForPDFPreview = new Array();\n\t\t\tvar filesForOpenLink = new Array();\n\n\t\t\tvar extensionsForViewer = ['MP3','FLV','HTM','HTML','M4A','WAV','WMA','MOV', '3GP', '3GPP', '3G2', 'MP4', 'MPG', 'MPV', 'AVI', 'OGG', 'OGV', 'WEBM'];\n\t\t\tvar extensionsForDocuments = ['EDOC'];\n\t\t\tvar extensionsDocPreview = ['DOC', 'DOCX', 'ODT', 'ODS', 'OTS', 'SXC', 'XLS', 'XLT', 'XLS', 'XLSX', 'ODP', 'OTP', 'SXI', 'STI', 'PPT', 'POT', 'SXD', 'PPTX', 'PPSX', 'POTM', 'PPS', 'FODP', 'UOP'];\n\t\t\tvar extensionsForFemto = ['TXT'];\n\t\t\tvar extensionsForImageViewer = ['JPG', 'JPEG', 'BMP', 'GIF', 'PNG'];\n\t\t\tvar extensionsForPDFViewer = ['PDF'];\n\t\t\tvar extensionsForLink = ['LNK'];\n\n\t\t\tfor (var i = 0; i < filesToOpen.length; ++i) {\n\t\t\t\tvar type = filesToOpen[i].getFile().getType();\n\t\t\t\tvar extension = filesToOpen[i].getFile().getExtension();\n\t\t\t\tif (type == 'folder') {\n\t\t\t\t\tfoldersToOpen.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t} else {\n\t\t\t\t\tif (extensionsForViewer.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForViewer.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForImageViewer.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForImageViewer.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForDocuments.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForDocuments.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForFemto.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForFemto.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsDocPreview.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForDocPreview.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForPDFViewer.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForPDFPreview.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForLink.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForOpenLink.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (filesForViewer.length >= 1) {\n\t\t\t\teyeos.execute('viewer', this.getApplication().getChecknum(), filesForViewer);\n\t\t\t}\n\n\t\t\tif (filesForImageViewer.length >= 1) {\n\t\t\t\teyeos.execute('imageviewer', this.getApplication().getChecknum(), filesForImageViewer);\n\t\t\t}\n\t\t\t\n\t\t\tif (filesForDocuments.length >= 1) {\n\t\t\t\teyeos.execute('documents', this.getApplication().getChecknum(), filesForDocuments);\n\t\t\t}\n\n\t\t\tif (filesForDocPreview.length >= 1) {\n\t\t\t\teyeos.execute('docviewer', this.getApplication().getChecknum(), filesForDocPreview);\n\t\t\t}\n\n\t\t\tif (filesForPDFPreview.length >= 1) {\n\t\t\t\teyeos.execute('pdfviewer', this.getApplication().getChecknum(), filesForPDFPreview);\n\t\t\t}\n\n\t\t\tif (filesForFemto.length >= 1) {\n\t\t\t\teyeos.execute('notepad', this.getApplication().getChecknum(), filesForFemto);\n\t\t\t}\n\t\t\tif (filesForOpenLink.length >= 1) {\n\t\t\t\teyeos.execute('openLink', this.getApplication().getChecknum(), filesForOpenLink);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < foldersToOpen.length; ++i) {\n\t\t\t\teyeos.execute('files', this.getApplication().getChecknum(), [foldersToOpen[i]]);\n\t\t\t}\n\t\t},\n\n\t\tnewFile: function (extension) {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar name = null;\n\t\t\t\tswitch (extension) {\n\t\t\t\t\tcase 'txt': {\n\t\t\t\t\t\tname = tr('New File');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'edoc': {\n\t\t\t\t\t\tname = tr('New Document');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'xls': {\n\t\t\t\t\t\tname = tr('New Spreadsheet');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'createNewFile', [currentPath + '\/' + name + '.' + extension], function (results) {\n\t\t\t\t\tthis._dBus.send('files', 'new', [currentPath, results]);\n\t\t\t\t},this);\n\t\t\t}\n\t\t},\n\t\tnewLink: function() {\n\t\t   eyeos.execute('newLink', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);\n\t\t},\n\n\t\tuploadFile: function() {\n\t\t   eyeos.execute('upload', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);\n\t\t},\n\t\tnewFolder: function () {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar name = tr('New Folder');\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'mkdir', new Array(currentPath, name), function (results) {\n\t\t\t\t\tthis._dBus.send('files', 'new', [currentPath, results]);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\t\t\n\t\tdeleteFile: function () {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar filesToDelete = this.getView().returnSelected();\n\t\t\t\tvar files = new Array();\n\t\t\t\tfor (var i = 0; i < filesToDelete.length; ++i) {\n\t\t\t\t\tif(filesToDelete[i].getFile().getAbsolutePath() != 'home:\/\/~' + eyeos.getCurrentUserName() + '\/Desktop') {\n\t\t\t\t\t\tfiles.push(filesToDelete[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(files.length == 0) {\n\t\t\t\t\talert('You can not deleted this folder');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'delete', files, function (results) {\n\t\t\t\t\tthis._dBus.send('files', 'delete', [currentPath, results]);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\n\t\tcutFile: function () {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar filesToCut = this.getView().returnSelected();\n\n\t\t\t\tvar filesToCut_files = new Array();\n\t\t\t\tfor (var i = 0; i < filesToCut.length; ++i) {\n\t\t\t\t\tfilesToCut_files.push(filesToCut[i].getFile());\n\t\t\t\t}\n\t\t\t\tthis._dBus.send('files', 'cut', [currentPath, filesToCut_files]);\n\t\t\t\tthis._filesQueue.fillMoveQueue('move', filesToCut, currentPath);\n\t\t\t}\n\t\t},\n\n\t\tcopyFile: function () {\n\t\t\tvar filesToCopy = this.getView().returnSelected();\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tthis._filesQueue.fillMoveQueue('copy', filesToCopy, currentPath);\n\t\t},\n\n\t\tpasteFile: function () {\n\t\t\tvar filesToPaste = this._filesQueue.getMoveQueue();\n\t\t\tif (filesToPaste.length >= 1) {\n\t\t\t\tvar source = this._filesQueue.getMoveSource();\n\t\t\t\tvar target = this.getModel().getCurrentPath()[1];\n\t\t\t\tvar action = this._filesQueue.getAction();\n\t\t\t\tvar files = new Array();\n\n\t\t\t\tfor (var i = 0; i < filesToPaste.length; ++i) {\n\t\t\t\t\tif (action == 'move') {\n\t\t\t\t\t\tif (target != filesToPaste[i].getPath()) {\n\t\t\t\t\t\t\tfiles.push(filesToPaste[i].getAbsolutePath());\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfiles.push(filesToPaste[i].getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (files.length >= 1) {\n\t\t\t\t\tfiles.unshift(target);\n\t\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), action, files, function (results) {\n\t\t\t\t\t\tthis._dBus.send('files', 'paste', [filesToPaste, action, source, target, results]);\n\t\t\t\t\t\tif (action == 'move') {\n\t\t\t\t\t\t\tthis._filesQueue.setMoveQueue([]);\n\t\t\t\t\t\t\tthis._filesQueue.setAction('');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this, {\"dontAutoCatchExceptions\": true});\n\t\t\t\t} else {\n\t\t\t\t\tthis._dBus.send('files', 'paste', [filesToPaste, action, source, target]);\n\t\t\t\t\t\tif (action == 'move') {\n\t\t\t\t\t\t\tthis._filesQueue.setMoveQueue([]);\n\t\t\t\t\t\t\tthis._filesQueue.setAction('');\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\teditFile: function () {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar selected = this.getView().returnSelected();\n\t\t\t\tif (selected.length == 1) {\n\t\t\t\t\tselected[0].edit();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\trenameFile: function (rename, object, file) {\n\t\t\tif(!file) {\n\t\t\t\tvar selected = this.getView().returnSelected()[0];\n\t\t\t} else {\n\t\t\t\tvar selected = file;\n\t\t\t}\n\t\t\n\t\t\tvar absPath = selected.getFile().getAbsolutePath();\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (selected.getFile().getName() != rename) {\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'rename', [absPath, currentPath, rename], function (results) {\n\t\t\t\t\tobject.setValue(rename);\n\t\t\t\t\tthis._dBus.send('files', 'rename', [absPath, currentPath, results]);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\n\t\tdownloadFile: function (rename) {\n\t\t\tvar selected = this.getView().returnSelected();\n\t\t\teyeos.execute('download',this.getApplication().getChecknum(), [selected[0].getFile().getAbsolutePath()]);\n\t\t},\n\t\t\n\t\ttoolBarBack: function () {\n\t\t\tif (parseInt(this.getModel().getHistoryIndex() - 1) >= 0) {\n\t\t\t\tif (parseInt(this.getModel().getHistoryIndex() - 1) == 0) {\n\t\t\t\t\tthis.getModel().setCurrentPath(this.getModel().getHistory()[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.getModel().setHistoryIndex(this.getModel().getHistoryIndex() - 1);\n\t\t\t\t\tthis.getModel().setCurrentPath(this.getModel().getHistory()[parseInt(this.getModel().getHistoryIndex() - 1)]);\n\t\t\t\t}\n\t\t\t\tthis._browse(false);\n\t\t\t} else {\n\t\t\t\tthis.getModel().setHistoryIndex(0);\n\t\t\t}\n\t\t},\n\n\t\ttoolBarForward: function () {\n\t\t\tif (parseInt(this.getModel().getHistoryIndex()+1) <= this.getModel().getHistory().length) {\n\t\t\t\tthis.getModel().setHistoryIndex(this.getModel().getHistoryIndex() + 1);\n\t\t\t} else {\n\t\t\t\tthis.getModel().setHistoryIndex(this.getModel().getHistory().length);\n\t\t\t}\n\t\t\tthis.getModel().setCurrentPath(this.getModel().getHistory()[this.getModel().getHistoryIndex()]);\n\t\t\tthis._browse(false);\n\t\t},\n\n\t\ttoolBarUpload: function () {\n                    eyeos.execute('upload', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);\n\t\t},\n\n        shareURLFile: function () {\n            var selected = this.getView().returnSelected();\n            eyeos.execute('urlshare', this.getApplication().getChecknum(), [selected[0].getFile().getAbsolutePath(), true]);\n        }\n\t}\n});\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nqx.Class.define('eyeos.files.IconView', {\n\n\textend: qx.ui.container.Scroll,\n\n\tconstruct: function (manager) {\n\t\tthis.base(arguments);\n\t\tthis.setViewManager(manager);\n\t\tthis.setDragging(false);\n\t\tthis._buildLayout();\n\t\tthis._addListeners();\n\t},\n\t\n\tproperties: {\n\t\tviewManager: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tmodel: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tdragging: {\n\t\t\tcheck: 'Boolean'\n\t\t}\n\t},\n\n\tmembers: {\n\t\t\n\t\t_layoutBase: null,\n\t\t_activeIcon: null,\n\t\t\n\t\tgetLayoutBase: function () {\n\t\t\treturn this._layoutBase;\n\t\t},\n\n\t\t_addListeners: function () {\n\t\t\tvar currentPath = this.getViewManager().getModel().getCurrentPath()[1];\n\t\t\tif (currentPath != 'share:\/\/\/' && currentPath != 'workgroup:\/\/\/') {\n\t\t\t\tthis._layoutBase.addListener('drop', function (e) {\n\t\t\t\t\tif(!e.getRelatedTarget().getUserData('info')) {\n\t\t\t\t\t\tvar fileDropped = e.getRelatedTarget().getFile();\n\t\t\t\t\t\tvar pathFromFile = fileDropped.getAbsolutePath();\n\t\t\t\t\t\tvar type = fileDropped.getType();\n\t\t\t\t\t\tvar dirPath = fileDropped.getPath();\n\t\t\t\t\t\tvar currentPath = this.getViewManager().getModel().getCurrentPath()[1];\n\t\t\t\t\t\tif (currentPath.substr(0,8) != 'share:\/\/' && currentPath != 'workgroup:\/\/\/') {\n\t\t\t\t\t\t\tif (dirPath != currentPath && type != 'folder') {\n\t\t\t\t\t\t\t\tthis.getViewManager().getController().specialMove(currentPath);\n\t\t\t\t\t\t\t} else if (type == 'folder' && currentPath != dirPath && currentPath.search(new RegExp(pathFromFile, 'gi')) == -1) {\n\t\t\t\t\t\t\t\tthis.getViewManager().getController().specialMove(currentPath);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar filesQueue = eyeos.filesQueue.getInstance();\n\t\t\t\t\t\t\t\tfilesQueue.setDragQueue([]);\n\t\t\t\t\t\t\t\tfilesQueue.setAction('');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setDragging(false);\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\/\/check if there is a selection\n\t\t\t\t\t\tvar sm = desktop.SelectionManager.getInstance();\n\t\t\t\t\t\tif(sm.hasSelection() && sm.getSelection().length > 0) {\n\t\t\t\t\t\t\tvar selection = sm.getSelection();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar selection = [e.getRelatedTarget()];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar info = selection[0].getUserData('info');\n\t\t\t\t\t\tvar type = info.type;\n\t\t\t\t\t\tvar pathFromFile = info.absolutepath;\n\t\t\t\t\t\t\/\/dirname() from php.js\n\t\t\t\t\t\tvar dirPath = pathFromFile.replace(\/\\\\\/g, '\/').replace(\/\\\/[^\\\/]*\\\/?$\/, '');\n\t\t\t\t\t\tvar currentPath = this.getViewManager().getModel().getCurrentPath()[1];\n\t\t\t\t\t\tif (currentPath.substr(0,8) != 'share:\/\/' && currentPath != 'workgroup:\/\/\/') {\n\t\t\t\t\t\t\tif (dirPath != currentPath && type != 'folder') {\n\t\t\t\t\t\t\t\tthis.getViewManager().getController().specialMove(currentPath, selection);\n\t\t\t\t\t\t\t} else if (type == 'folder' && currentPath != dirPath && currentPath.search(new RegExp(pathFromFile, 'gi')) == -1) {\n\t\t\t\t\t\t\t\tthis.getViewManager().getController().specialMove(currentPath, selection);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvar filesQueue = eyeos.filesQueue.getInstance();\n\t\t\t\t\t\t\t\tfilesQueue.setDragQueue([]);\n\t\t\t\t\t\t\t\tfilesQueue.setAction('');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.setDragging(false);\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tthis.addListener('click', function (e) {\n\t\t\t\t\tvar selected = this.returnSelected();\n\t\t\t\t\tif (selected.length >= 1) {\n\t\t\t\t\t\tif(this.rangeBefore && this.rangeBefore == 1) {\n\t\t\t\t\t\t\tthis.rangeBefore = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.resetAllSelected();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\/\/\t\t\t\t\t\tthis.getViewManager().getController().fireEvent('cleanSocialBar');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tthis.addListener('contextmenu', function (e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t});\n\n\t\t\t\tvar mousemovecallback = function(e) {\n\t\t\t\t\tif(this.selecting) {\n\t\t\t\t\t\tvar x = e.getDocumentLeft();\n\t\t\t\t\t\tvar y = e.getDocumentTop();\n\t\t\t\t\t\ty = y - 35; \/\/topmenu + borders\n\n\t\t\t\t\t\tif(x > this.selectorX) {\n\t\t\t\t\t\t\tthis.selector.setWidth(x-this.selectorX);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.selector.setWidth(this.selectorX-x);\n\t\t\t\t\t\t\tthis.selector.setMarginLeft(x);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(y > this.selectorY) {\n\t\t\t\t\t\t\tthis.selector.setHeight(y-this.selectorY);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.selector.setHeight(this.selectorY-y);\n\t\t\t\t\t\t\tthis.selector.setMarginTop(y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\/\/\n\t\t\t\t\t\/\/\t\t\t\t\t\tvar selected = this.returnSelected();\n\t\t\t\t\t\/\/\t\t\t\t\t\tif (selected.length >= 1) {\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tthis.resetAllSelected();\n\t\t\t\t\t\/\/\t\t\t\t\t\t}\n\t\t\t\t\t\/\/\n\t\t\t\t\t\/\/\t\t\t\t\t\tvar box = new Object();\n\t\t\t\t\t\/\/\t\t\t\t\t\tif(x > this.selectorX) {\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tbox.x = this.selectorX;\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tbox.width = x-this.selectorX;\n\t\t\t\t\t\/\/\t\t\t\t\t\t} else {\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tbox.x = x;\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tbox.width = this.selectorX-x;\n\t\t\t\t\t\/\/\t\t\t\t\t\t}\n\t\t\t\t\t\/\/\n\t\t\t\t\t\/\/\t\t\t\t\t\tif(y > this.selectorY) {\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tbox.y = this.selectorY;\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tbox.height = y-this.selectorY;\n\t\t\t\t\t\/\/\t\t\t\t\t\t} else {\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tbox.y = y;\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tbox.height = this.selectorY-y;\n\t\t\t\t\t\/\/\t\t\t\t\t\t}\n\t\t\t\t\t\/\/\n\t\t\t\t\t\/\/\t\t\t\t\t\t\/\/this is because the window can be moved in the screen!!!!\n\t\t\t\t\t\/\/\t\t\t\t\t\tbox.y = box.y - this.windowOffsetTop;\n\t\t\t\t\t\/\/\t\t\t\t\t\tbox.x = box.x - this.windowOffsetLeft;\n\t\t\t\t\t\/\/\n\t\t\t\t\t\/\/\t\t\t\t\t\tbox.y = box.y - 165; \/\/top part of the window... hardcoded :(\n\t\t\t\t\t\/\/\t\t\t\t\t\tbox.x = box.x - 190; \/\/left part of the window... hardcoded :(\n\t\t\t\t\t\/\/\n\t\t\t\t\t\/\/\t\t\t\t\t\tvar childrens = this._layoutBase.getChildren();\n\t\t\t\t\t\/\/\t\t\t\t\t\tfor(var i in childrens) {\n\t\t\t\t\t\/\/\t\t\t\t\t\t\tif(childrens[i] instanceof eyeos.files.IconViewItem) {\n\t\t\t\t\t\/\/\t\t\t\t\t\t\t\tvar bounds = childrens[i].getBounds();\n\t\t\t\t\t\/\/\/\/\t\t\t\t\t\t\t\tconsole.log(bounds);\n\t\t\t\t\t\/\/\/\/\t\t\t\t\t\t\t\tconsole.log(box);\n\t\t\t\t\t\/\/\t\t\t\t\t\t\t\tif(parseInt(bounds.top)+parseInt(bounds.height) > box.y\n\t\t\t\t\t\/\/\t\t\t\t\t\t\t\t\t&& parseInt(bounds.top) < box.y + box.height\n\t\t\t\t\t\/\/\t\t\t\t\t\t\t\t\t&& parseInt(bounds.left)+parseInt(bounds.width) > box.x\n\t\t\t\t\t\/\/\t\t\t\t\t\t\t\t\t&& parseInt(bounds.left) < box.x + box.width\n\t\t\t\t\t\/\/\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\/\/\t\t\t\t\t\t\t\t\tchildrens[i].select();\n\t\t\t\t\t\/\/\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\/\/\t\t\t\t\t\t\t}\n\t\t\t\t\t\/\/\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(this.selector) {\n\t\t\t\t\t\t\tthis.selector.destroy();\n\t\t\t\t\t\t\tthis.selector = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t};\n\n\t\t\t\tvar mouseupcallback = function(e) {\n\t\t\t\t\tvar x = e.getDocumentLeft();\n\t\t\t\t\tvar y = e.getDocumentTop();\n\t\t\t\t\ty = y - 35; \/\/topmenu + borders\n\n\t\t\t\t\tif(this.selector) {\n\t\t\t\t\t\tthis.selector.destroy();\n\t\t\t\t\t\t\/\/\t\t\t\t\t\tvar x = e.getDocumentLeft();\n\t\t\t\t\t\t\/\/\t\t\t\t\t\tvar y = e.getDocumentTop();\n\t\t\t\t\t\t\/\/\t\t\t\t\t\ty = y - 85;\n\t\t\t\t\t\t\/\/\t\t\t\t\t\tx = x - 15;\n\t\t\t\t\t\t\/\/\t\t\t\t\t\t\/\/now, we need to calculate what are the icons inside the box\n\t\t\t\t\t\t\/\/\t\t\t\t\t\t\/\/so first, go calculate the box :)\n\t\t\t\t\t\t\/\/\n\t\t\t\t\t\tvar box = new Object();\n\t\t\t\t\t\tif(x > this.selectorX) {\n\t\t\t\t\t\t\tbox.x = this.selectorX;\n\t\t\t\t\t\t\tbox.width = x-this.selectorX;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbox.x = x;\n\t\t\t\t\t\t\tbox.width = this.selectorX-x;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(y > this.selectorY) {\n\t\t\t\t\t\t\tbox.y = this.selectorY;\n\t\t\t\t\t\t\tbox.height = y-this.selectorY;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbox.y = y;\n\t\t\t\t\t\t\tbox.height = this.selectorY-y;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\/\/this is because the window can be moved in the screen!!!!\n\t\t\t\t\t\tbox.y = box.y - this.windowOffsetTop;\n\t\t\t\t\t\tbox.x = box.x - this.windowOffsetLeft;\n\n\t\t\t\t\t\t\/\/and what about the scroll? :)\n\n\t\t\t\t\t\tbox.y = box.y + this.getScrollY();\n\n\t\t\t\t\t\tbox.y = box.y - 165; \/\/top part of the window... hardcoded :(\n\t\t\t\t\t\tbox.x = box.x - 190; \/\/left part of the window... hardcoded :(\n\n\n\t\t\t\t\t\tvar childrens = this._layoutBase.getChildren();\n\t\t\t\t\t\tfor(var i in childrens) {\n\t\t\t\t\t\t\tif(childrens[i] instanceof eyeos.files.IconViewItem) {\n\t\t\t\t\t\t\t\tvar bounds = childrens[i].getBounds();\n\t\t\t\t\t\t\t\t\/\/\t\t\t\t\t\t\t\tconsole.log(bounds);\n\t\t\t\t\t\t\t\t\/\/\t\t\t\t\t\t\t\tconsole.log(box);\n\t\t\t\t\t\t\t\tif(parseInt(bounds.top)+parseInt(bounds.height) > box.y\n\t\t\t\t\t\t\t\t\t&& parseInt(bounds.top) < box.y + box.height\n\t\t\t\t\t\t\t\t\t&& parseInt(bounds.left)+parseInt(bounds.width) > box.x\n\t\t\t\t\t\t\t\t\t&& parseInt(bounds.left) < box.x + box.width\n\t\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tchildrens[i].select();\n\t\t\t\t\t\t\t\t\tthis.rangeBefore = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.selector = null;\n\t\t\t\t\tthis.selecting = false;\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\t\/\/--------------- multiple select\n\t\t\t\tthis._layoutBase.addListener('mousedown', function(e) {\n\n\t\t\t\t\tif(e.getButton() != 'left' || e.getTarget() != this._layoutBase) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.resetAllSelected();\n\t\t\t\t\tif(this.selector) {\n\t\t\t\t\t\tthis.selector.destroy();\n\t\t\t\t\t\tthis.selector = null;\n\t\t\t\t\t}\n\t\t\t\t\tvar x = e.getDocumentLeft();\n\t\t\t\t\tvar y = e.getDocumentTop();\n\t\t\t\t\ty = y - 35; \/\/topmenu + borders\n\t\t\t\t\tthis.selecting = true;\n\t\t\t\t\tthis.selector = new qx.ui.container.Composite();\n\t\t\t\t\tthis.selector.addListener('mousemove', mousemovecallback, this);\n\t\t\t\t\tthis.selector.addListener('mouseup', mouseupcallback, this);\n\t\t\t\t\tthis.selector.set({\n\t\t\t\t\t\topacity: 0.1,\n\t\t\t\t\t\tbackgroundColor: 'blue',\n\t\t\t\t\t\twidth:0,\n\t\t\t\t\t\theight:0,\n\t\t\t\t\t\tmarginLeft:x,\n\t\t\t\t\t\tmarginTop:y,\n\t\t\t\t\t\tzIndex: 9000000\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.selectorY = y;\n\t\t\t\t\tthis.selectorX = x;\n\t\t\t\t\tthis.windowOffsetTop = this.getViewManager().getBounds().top;\n\t\t\t\t\tthis.windowOffsetLeft = this.getViewManager().getBounds().left;\n\t\t\t\t\tdocument.eyeDesktop.add(this.selector);\n\t\t\t\t}, this);\n\t\t\t\t\n\t\t\t\tthis._layoutBase.addListener('mousemove', mousemovecallback, this);\n\t\t\t\tthis._layoutBase.addListener('mouseup', mouseupcallback, this);\n\t\t\t}\n\t\t},\n\n\t\t_addItem: function (item) {\n\t\t\tthis._addListenersToItem(item);\n\t\t\tthis._layoutBase.add(item);\n\t\t},\n\n\t\t_addListenersToItem: function (item) {\n\t\t\t\n\t\t\tvar self = this;\n\n\t\t\t\/**\n\t\t\t * Click events\n\t\t\t *\/\n\n\t\t\titem.addListener('selected', function (e) {\n\t\t\t\tself.getViewManager().getController().fireDataEvent('selectedFile', self.returnSelected());\t\n\t\t\t}, this);\n\t\t\t\n\t\t\titem.addListener('click',  function (e) {\n\t\t\t\tif (!this._editing && !this._buttonSelectionActive) {\n\t\t\t\t\tif (this.isSelected() && this.getManager().getViewManager().isKeyPress()) {\n\t\t\t\t\t\tthis.unselect();\n\t\t\t\t\t} else if (!this.isSelected() && this.getManager().getViewManager().isKeyPress()) {\n\t\t\t\t\t\tthis.select();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(e.getButton() == 'left') {\n\t\t\t\t\t\t\tthis.resetAllSelected();\n\t\t\t\t\t\t\tthis.select();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t\/\/ In case our flag is true ... the click has popped, flag should return to false\n\t\t\t\t\/\/ Now we use the stop propagation to avoid the click on the manager\n\t\t\t\te.stopPropagation();\n\t\t\t\tthis._buttonSelectionActive = false;\n\t\t\t});\n\n\t\t\titem.addListener('dblclick', function () {\n\t\t\t\tvar file = this.getFile();\n\t\t\t\tvar absolutePath = file.getAbsolutePath();\n\t\t\t\tif (file.getType() == 'folder') {\n\t\t\t\t\tthis.getManager().getViewManager().getController()._browsePath(absolutePath, true);\n\t\t\t\t} else {\n\t\t\t\t\tvar checknum = this.getManager().getViewManager().getController().getApplication().getChecknum();\n\t\t\t\t\teyeos.openFile(absolutePath, checknum);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\titem.addListener('unselected', function () {\n\t\t\t\tvar selected = item.getManager().returnSelected();\n\t\t\t\tif (selected.length == 0) {\n\t\t\t\t\tself.getViewManager().getController().fireDataEvent('directoryChanged', this.getViewManager().getModel().getCurrentPath()[1]);\n\t\t\t\t}\n\t\t\t}, this);\n\t\t\t\n\t\t\tvar currentPath = this.getViewManager().getModel().getCurrentPath()[1];\n\t\t\t\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/\/') {\n\t\t\t\titem.getContextMenu().addListener('appear', function (e) {\n\t\t\t\t\tvar childrens = this.getContextMenu().getChildren();\n\t\t\t\t\tvar selected = this.getManager().returnSelected();\n\t\t\t\t\tfor (var i = 0; i < childrens.length; ++i) {\n\t\t\t\t\t\t\/\/\t\t\t\t\t\tconsole.log(childrens[i]);\n\t\t\t\t\t\tchildrens[i].setEnabled(true);\n\t\t\t\t\t\tif (childrens[i].getUserData('id') == 'pasteFile()' && this.getFile().getType() == 'file') {\n\t\t\t\t\t\t\tchildrens[i].setEnabled(false);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (childrens[i].getUserData('id') == 'editFile()' && selected.length >= 2) {\n\t\t\t\t\t\t\tchildrens[i].setEnabled(false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, item);\n\n\t\t\t\titem._layoutButtonSelection.addListener('click', function (e) {\n\t\t\t\t\tif (!this._editing) {\n\t\t\t\t\t\tif (this.isSelected()) {\n\t\t\t\t\t\t\tthis.unselect();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.select();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tself.getViewManager().getController().fireDataEvent('selectedFile', self.returnSelected());\n\n\t\t\t\t\t\t\/\/ We have to set a flag due to stopPropagation doesn't work properly'\n\t\t\t\t\t\t\/\/ e.stopPropagation();\n\t\t\t\t\t\titem._buttonSelectionActive = true;\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t}, item);\n\n\t\t\t\titem.addListener('contextmenu', function (e) {\n\t\t\t\t\tif (!this.isSelected()) {\n\t\t\t\t\t\tself.resetAllSelected();\n\t\t\t\t\t\tthis.select();\n\t\t\t\t\t}\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t});\n\n\t\t\t\titem._layoutButtonMenu.addListener('click', function (e) {\n\t\t\t\t\tif (!this.isSelected()) {\n\t\t\t\t\t\tself.resetAllSelected();\n\t\t\t\t\t\tthis.select();\n\t\t\t\t\t\/\/this._layoutButtonMenu.setIcon('index.php?extern=images\/arrow4.png');\n\t\t\t\t\t}\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}, item);\n\n\n\t\t\t\t\/**\n\t\t\t\t * Drag and drop events\n\t\t\t\t *\/\n\n\t\t\t\titem.addListener('dragstart', function (e) {\n\n\t\t\t\t\te.addAction('move');\n\n\t\t\t\t\t\/\/ Multiple Selection on dragstart to select all the items\n\n\t\t\t\t\tvar childrenList = this.getManager().getLayoutBase().getChildren();\n\t\t\t\t\tvar alreadyDone = false;\n\n\t\t\t\t\t\/\/ If there is more than one we will select it\n\n\t\t\t\t\tfor (var i = 0; i < childrenList.length; ++i) {\n\t\t\t\t\t\tif (childrenList[i].isSelected()) {\n\t\t\t\t\t\t\tchildrenList[i].setDroppable(false);\n\t\t\t\t\t\t\talreadyDone = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t\/\/ If not, do it now\n\n\t\t\t\t\tif (!alreadyDone) {\n\t\t\t\t\t\tthis.select();\n\t\t\t\t\t\tthis.setDroppable(false);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.getManager().setDragging(true);\n\n\t\t\t\t\tvar filesToMove = self.returnSelected();\n\t\t\t\t\tvar currentPath = self.getViewManager ().getModel().getCurrentPath()[1];\n\t\t\t\t\tvar filesToPreMove = new Array();\n\n\t\t\t\t\tfor (var i = 0; i < filesToMove.length; ++i) {\n\t\t\t\t\t\tfilesToPreMove.push(filesToMove[i]);\n\t\t\t\t\t}\n\n\t\t\t\t\tvar filesQueue = eyeos.filesQueue.getInstance();\n\t\t\t\t\tfilesQueue.fillDragQueue(filesToPreMove, currentPath);\n\n\t\t\t\t\/\/\t\t\t\t\tvar rootChildrens = qx.core.Init.getApplication().getRoot().getChildren();\n\t\t\t\t\/\/\t\t\t\t\tfor (var i = rootChildrens.length - 1; i >= 0; --i) {\n\t\t\t\t\/\/\t\t\t\t\t\tif (rootChildrens[i] instanceof qx.ui.core.DragDropCursor) {\n\t\t\t\t\/\/\t\t\t\t\t\t\trootChildrens[i].getContentElement().resetSource();\n\t\t\t\t\/\/\t\t\t\t\t\t\ti = 0;\n\t\t\t\t\/\/\t\t\t\t\t\t\t\/\/TO-DO: The 'replaced' image gets stuck sometimes\n\t\t\t\t\/\/\t\t\t\t\t\t\t\/\/rootChildrens[i].getContentElement().setSource('qx\/decoration\/Modern\/menu\/checkbox.gif');\n\t\t\t\t\/\/\t\t\t\t\t\t}\n\t\t\t\t\/\/\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\titem.addListener('dragover', function (e) {\n\t\t\t\t\tthis.getManager().setDragging(true);\n\t\t\t\t\tif (this.getManager().isDragging() && !this.isSelected() && this.getFile().getType() == 'folder') {\n\t\t\t\t\t\tvar movingFile = e.getRelatedTarget();\n\t\t\t\t\t\tif (movingFile != null && movingFile instanceof eyeos.files.IconViewItem) {\n\t\t\t\t\t\t\tthis.setDecorator(this._decoratorDragOver);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\titem.addListener('dragleave', function (e) {\n\t\t\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\t});\n\n\t\t\t\titem.addListener('dragend', function (e) {\n\t\t\t\t\tthis.getManager().setDragging(false);\n\t\t\t\t\tthis.getManager().getViewManager()._places.setDragging(false);\n\t\t\t\t\tthis.getManager().getViewManager()._shared.setDragging(false);\n\t\t\t\t\tthis.getManager().getViewManager()._workgroups.setDragging(false);\n\t\t\t\t\tthis.getManager().getViewManager()._header.setDragging(false);\n\t\t\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\t\tthis.resetAllSelected();\n\t\t\t\t\tvar filesQueue = eyeos.filesQueue.getInstance();\n\t\t\t\t\tfilesQueue.setDragQueue([]);\n\t\t\t\t});\n\n\n\t\t\t\titem.addListener('drop', function (e) {\n\t\t\t\t\tvar item = e.getRelatedTarget();\n\t\t\t\t\tif(item instanceof eyeos.files.IconViewItem) {\n\t\t\t\t\t\tvar droppedFile = item.getFile();\n\t\t\t\t\t\tvar droppedPath;\n\t\t\t\t\t\tif (droppedFile.getType() == 'folder') {\n\t\t\t\t\t\t\tdroppedPath = droppedFile.getAbsolutePath();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdroppedPath = droppedFile.getPath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this.getFile().getType() == 'folder') {\n\t\t\t\t\t\t\tif (droppedFile.getType() == 'folder' && droppedFile.getAbsolutePath() != this.getFile().getAbsolutePath() && droppedFile.getPath() != this.getFile().getAbsolutePath() && this.getFile().getAbsolutePath().search(new RegExp(droppedFile.getAbsolutePath(), 'gi')) == -1) {\n\t\t\t\t\t\t\t\tthis.getManager().getViewManager().getController().specialMove(this.getFile().getAbsolutePath());\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (droppedFile.getType() != 'folder' && droppedFile.getPath() != this.getFile().getAbsolutePath()) {\n\t\t\t\t\t\t\t\tthis.getManager().getViewManager().getController().specialMove(this.getFile().getAbsolutePath());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar filesQueue = eyeos.filesQueue.getInstance();\n\t\t\t\t\t\t\tfilesQueue.setDragQueue([]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.getManager().setDragging(false);\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\t_buildLayout: function (e) {\n\n\t\t\tthis._layoutBase = new qx.ui.container.Composite(new qx.ui.layout.Flow(5,5)).set({\n\t\t\t\tdroppable: true,\n\t\t\t\tpadding: 10,\n\t\t\t\tbackgroundColor: '#FFFFFF',\n\t\t\t\tallowShrinkY: false,\n\t\t\t\tallowGrowX: true,\n\t\t\t\tallowGrowY: true\n\t\t\t});\n\n\t\t\tvar borderMenu = new qx.ui.decoration.Single(1, 'solid', '#C3C3C3');\n\t\t\tthis._menu = new qx.ui.menu.Menu().set({\n\t\t\t\tdecorator: borderMenu,\n\t\t\t\tshadow: null,\n\t\t\t\tpadding: 3,\n\t\t\t\tbackgroundColor: '#F3F3F3'\n\t\t\t});\n\n\t\t\tvar menu = this.self(arguments).MENU;\n\t\t\t\n\t\t\tfor (var i = 0; i < menu.length; ++i) {\n\t\t\t\tvar item = null;\n\t\t\t\tif (menu[i].id != 'separator') {\n\t\t\t\t\titem = new qx.ui.menu.Button(menu[i].label, menu[i].image);\n\t\t\t\t\titem.setUserData('id', menu[i].id);\n\t\t\t\t\titem._manager = this.getViewManager().getController();\n\t\t\t\t\titem.addListener('appear', function (e) {\n\t\t\t\t\t\tthis.setBackgroundColor(null);\n\t\t\t\t\t\tthis.setDecorator(null);\n\t\t\t\t\t\tthis.setTextColor('#4A4A4A');\n\t\t\t\t\t});\n\t\t\t\t\titem.addListener('mouseover', function (e) {\n\t\t\t\t\t\tthis.setBackgroundColor('#D3D3D3');\n\t\t\t\t\t\tthis.setTextColor('#404040');\n\t\t\t\t\t});\n\t\t\t\t\titem.addListener('mouseout', function (e) {\n\t\t\t\t\t\tif (!qx.ui.core.Widget.contains(item, e.getRelatedTarget())) {\n\t\t\t\t\t\t\tthis.setDecorator(null);\n\t\t\t\t\t\t\tthis.setBackgroundColor(null);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\titem.addListener('execute', function (e) {\n\t\t\t\t\t\teval('this._manager.'+this.getUserData('id'));\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\titem = new qx.ui.menu.Separator();\n\t\t\t\t}\n\t\t\t\tthis._menu.add(item);\n\t\t\t}\n\t\t\t\n\t\t\tthis.add(this._layoutBase,  {\n\t\t\t\tflex: 1\n\t\t\t});\n\t\t},\n\n\t\tshowBrowse: function () {\n\t\t\tthis._layoutBase.removeAll();\n\t\t\tvar files = this.reorder(this.getViewManager().getModel().getCurrentFiles());\n\t\t\tfor (var i = 0; i < files.length; ++i) {\n\t\t\t\tvar item = new eyeos.files.IconViewItem(this, files[i]);\n\t\t\t\tthis._addItem(item);\n\t\t\t}\n\t\t},\n\n\t\tfilterBrowse: function(filter) {\n\t\t\tthis._layoutBase.removeAll();\n\t\t\tvar files = this.reorder(this.getViewManager().getModel().getCurrentFiles());\n\t\t\tfor (var i = 0; i < files.length; ++i) {\n\t\t\t\tif(files[i].getName().toUpperCase().indexOf(filter.toUpperCase()) >= 0) {\n\t\t\t\t\tvar item = new eyeos.files.IconViewItem(this, files[i]);\n\t\t\t\t\tthis._addItem(item);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\treorder: function (filesToOrder) {\n\t\t\tvar folders = new Array();\n\t\t\tvar files = new Array();\n\t\t\tvar filesOrdered = new Array();\n\n\t\t\tfor (var i = 0; i < filesToOrder.length; ++i) {\n\t\t\t\tif (filesToOrder[i].getType() == 'folder') {\n\t\t\t\t\tfolders.push(filesToOrder[i]);\n\t\t\t\t} else {\n\t\t\t\t\tfiles.push(filesToOrder[i]);\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tfilesOrdered = folders.concat(files);\n\n\t\t\treturn filesOrdered;\n\t\t},\n\n\t\treturnAll: function () {\n\t\t\treturn this._layoutBase.getChildren();\n\t\t},\n\n\t\treturnSelected: function () {\n\t\t\tvar selected = new Array();\n\t\t\tvar childrens = this._layoutBase.getChildren();\n\t\t\tfor (var i = 0; i < childrens.length; ++i) {\n\t\t\t\tif (childrens[i].isSelected()) {\n\t\t\t\t\tselected.push(childrens[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn selected;\n\t\t},\n\n\t\tresetAllSelected: function () {\n\t\t\tvar childrenList = this.returnSelected();\n\t\t\tfor (var i = 0; i < childrenList.length; ++i) {\n\t\t\t\tif (childrenList[i].isSelected()) {\n\t\t\t\t\tchildrenList[i].unselect();\n\t\t\t\t\tchildrenList[i]._clicked = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tstatics: {\n\t\tMENU: [\n\t\t{\n\t\t\tlabel: tr('Upload file'),\n\t\t\timage: 'index.php?extern=images\/16x16\/actions\/window-new.png',\n\t\t\tid: 'uploadFile()'\n\t\t}, {\n\t\t\tlabel: tr('Separator'),\n\t\t\tid: 'separator'\n\t\t}, {\n\t\t\tlabel: tr('New folder'),\n\t\t\timage: 'index.php?extern=images\/16x16\/places\/folder.png',\n\t\t\tid: 'newFolder()'\n\t\t}, {\n\t\t\tlabel: tr('New simple document'),\n\t\t\timage: 'index.php?extern=images\/16x16\/mimetypes\/text-x-generic.png',\n\t\t\tid: 'newFile(\\'txt\\')'\n\t\t}, {\n\t\t\tlabel: tr('New document'),\n\t\t\timage: 'index.php?extern=images\/16x16\/mimetypes\/application-msword.png',\n\t\t\tid: 'newFile(\\'edoc\\')'\n\t\t}, {\n\t\t\tlabel: tr('New link'),\n\t\t\timage: 'index.php?extern=images\/16x16\/mimetypes\/application-x-mswinurl.png',\n\t\t\tid: 'newLink()'\n\t\t}, {\n\t\t\tlabel: tr('Separator'),\n\t\t\tid: 'separator'\n\t\t}, {\n\t\t\tlabel: tr('Paste'),\n\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-paste.png',\n\t\t\tid: 'pasteFile()'\n\t\t}\n\t\t],\n\n\t\tMENU_ALTERNATIVE: [\n\t\t{\n\t\t\tlabel: tr('Open'),\n\t\t\timage: 'index.php?extern=images\/16x16\/actions\/document-open.png',\n\t\t\tid: 'openFile()'\n\t\t}, {\n\t\t\tlabel: tr('Copy'),\n\t\t\timage: 'index.php?extern=images\/16x16\/actions\/edit-copy.png',\n\t\t\tid: 'copyFile()'\n\t\t}, {\n\t\t\tlabel: tr('Download'),\n\t\t\timage: 'index.php?extern=images\/16x16\/actions\/go-down.png',\n\t\t\tid: 'downloadFile()'\n\t\t}\n\t\t]\n\t}\n});\n\n\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nqx.Class.define('eyeos.files.SideBarTitle', {\n\n\textend: qx.ui.container.Composite,\n\n\tconstruct: function (caption) {\n\t\tthis.base(arguments);\n\t\tthis._buildLayout(caption);\n\t\tthis._addListeners();\n\t},\n\n\tmembers: {\n\t\t_clicked: false,\n\t\t\n\t\t_buildLayout: function (caption) {\n\t\t\tthis.setLayout(new qx.ui.layout.HBox());\n\t\t\tvar borderBottom = new qx.ui.decoration.Single(1, 'solid', '#D3D3D3').set({\n\t\t\t\tstyleLeft: null,\n\t\t\t\tstyleTop: null,\n\t\t\t\tstyleRight: null\n\t\t\t});\n\t\t\tthis.set({\n\t\t\t\tbackgroundColor: '#FCFCFC',\n\t\t\t\tpadding: 3,\n\t\t\t\tpaddingTop: 7,\n\t\t\t\tpaddingBottom: 6,\n\t\t\t\tdecorator: borderBottom\n\t\t\t});\n\t\t\tthis._label = new qx.ui.basic.Label(caption).set({\n\t\t\t\tmaxWidth: 170,\n\t\t\t\twidth: 170,\n\t\t\t\tminWidth: 170\n\t\t\t});\n\t\t\tthis._label.setFont(new qx.bom.Font(13, [\"Lucida Grande\", \"Verdana\"]).set({bold: true}));\n\t\t\tthis.add(this._label, {flex: 1});\n\n\t\t\tthis._image = new qx.ui.basic.Image('index.php?extern=images\/arrowPlace1.png').set({\n\t\t\t\tpaddingTop: 3\n\t\t\t});\n\t\t\tthis.add(this._image);\n\t\t},\n\n\t\t_addListeners: function () {\n\t\t\tthis.addListener('click', function (e) {\n\t\t\t\tif (this._clicked) {\n\t\t\t\t\tthis._clicked = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis._clicked = true;\n\t\t\t\t}\n\t\t\t\tthis.fireDataEvent('changeValue', this._clicked);\n\t\t\t});\n\n\t\t\tthis.addListener('changeValue', function () {\n\t\t\t\tif (this.isValue()) {\n\t\t\t\t\tthis._image.setSource('index.php?extern=images\/arrowPlace2.png');\n\t\t\t\t} else {\n\t\t\t\t\tthis._image.setSource('index.php?extern=images\/arrowPlace1.png');\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\t\tisValue: function () {\n\t\t\treturn this._clicked;\n\t\t}\n\t}\n});\n\nqx.Class.define('eyeos.files.SideBarItem', {\n\n\textend: qx.ui.container.Composite,\n\n\tconstruct: function (label, path, manager, droppable, position) {\n\n\t\tthis.base(arguments);\n\t\t\/\/ Reference and parent objects\n\t\tthis.setAcceptsDrop(droppable);\n\t\tthis.setManager(manager);\n\t\tthis.setPath(path);\n\t\tthis._position = position;\n\t\tthis._buildLayout(label);\n\n\n\t},\n\t\n\tproperties: {\n\t\ticon: {\n\t\t\tinit: 'index.php?extern=images\/16x16\/places\/folder.png',\n\t\t\tcheck: 'String',\n\t\t\tapply: '_applyIcon'\n\t\t},\n\n\t\tacceptsDrop: {\n\t\t\tcheck: 'Boolean',\n\t\t\tinit: false\n\t\t}\n\t},\n\n\tmembers: {\n\t\t_label: null,\n\t\t_path: null,\n\t\t_icon: null,\n\t\t_manager: null,\n\t\t_currentBar: null,\n\n\t\t_decoratorDragOver: new qx.ui.decoration.Single(1, 'solid', '#74a100').set({backgroundColor: '#B9D07F'}),\n\t\t_decoratorMouseOut: new qx.ui.decoration.Single(1, 'solid', '#E3E3E3').set({\n\t\t\tstyleLeft: null,\n\t\t\tstyleTop: null,\n\t\t\tstyleRight: null,\n\t\t\tbackgroundColor: null\n\t\t}),\n\t\t\n\t\t_decoratorMouseOver: new qx.ui.decoration.Single(1, 'solid', '#E3E3E3').set({\n\t\t\tstyleTop: null,\n\t\t\tbackgroundColor: '#D0D0D0'\n\t\t}),\n\t\t\n\t\t_applyIcon: function(value, old) {\n\t\t\tthis._icon.setSource(value);\n\t\t},\n\n\t\t_buildLayout: function (label) {\n\t\t\tthis.setLayout(new qx.ui.layout.HBox());\n\t\t\tvar labelComposite = new qx.ui.container.Composite(new qx.ui.layout.VBox());\n\t\t\tthis._label = new qx.ui.basic.Label(tr(label));\n\n\t\t\tthis.set({\n\t\t\t\tpaddingRight: 3,\n\t\t\t\tpaddingBottom: 3,\n\t\t\t\tpaddingLeft: 10,\n\t\t\t\theight: 25,\n\t\t\t\tminHeight: 25,\n\t\t\t\tmaxHeight: 25\n\t\t\t});\n\n\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\n\t\t\tthis._icon = new qx.ui.basic.Image(this.getIcon()).set({\n\t\t\t\tmarginRight: 5,\n\t\t\t\tanonymous: true\n\t\t\t});\n\t\t\tthis.add(this._icon);\n\t\t\tlabelComposite.add(this._label);\n\t\t\tthis.add(labelComposite, {flex: 1});\n\n\t\t\tif (this.getAcceptsDrop()) {\n\t\t\t\tthis.setDroppable(true);\n\t\t\t\tthis._image = new qx.ui.basic.Image('index.php?extern=images\/delete.png').set({\n\t\t\t\t\tmarginRight: 5\n\t\t\t\t});\n\t\t\t\tthis._image.setVisibility('hidden');\n\t\t\t\tthis.add(this._image);\n\n\t\t\t\tthis._image.addListener('click', function(e) {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\n\t\tonMouseOver: function () {\n\t\t\tif (this.getAcceptsDrop()) {\n\t\t\t\tthis._image.setVisibility('visible');\n\t\t\t}\n\t\t\tthis.setDecorator(this._decoratorMouseOver);\n\t\t\t\/\/this._manager.getPlaceByPosition(this._position).setBackgroundColor('#D0D0D0');\n\t\t},\n\n\t\tonMouseOut: function () {\n\t\t\tif (this.getAcceptsDrop()) {\n\t\t\t\tthis._image.setVisibility('hidden');\n\t\t\t}\n\t\t\tthis.setDecorator(this._decoratorMouseOut);\n\t\t\t\/\/this._manager.getPlaceByPosition(this._position).setBackgroundColor(null);\n\t\t},\n\n\t\tgetManager: function () {\n\t\t\treturn this._manager;\n\t\t},\n\n\t\tsetManager: function (manager) {\n\t\t\tthis._manager = manager;\n\t\t},\n\n\t\tgetPath: function () {\n\t\t\treturn this._path;\n\t\t},\n\n\t\tsetPath: function (path) {\n\t\t\tthis._path = path;\n\t\t}\n\t}\n});\n\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nqx.Class.define('eyeos.files.HeaderBar', {\n\t\n\textend: qx.ui.container.Composite,\n\n\tconstruct: function (manager) {\n\t\tthis.base(arguments);\n\t\tthis.setViewManager(manager);\n\t\tthis.setDragging(false);\n\t\tthis._buildLayout();\n\t},\n\n\tproperties: {\n\t\tcontroller: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tdragging: {\n\t\t\tcheck: 'Boolean'\n\t\t},\n\n\t\tviewManager: {\n\t\t\tcheck: 'Object'\n\t\t}\n\t},\n\n\tmembers: {\n\t\t\n\t\t_layoutBase: null,\n\t\t\n\t\t_buildLayout: function () {\n\t\t\tthis.setLayout(new qx.ui.layout.VBox());\n\t\t\tvar borderBottom = new qx.ui.decoration.Single(1, 'solid', '#D3D3D3').set({\n\t\t\t\tstyleLeft: null,\n\t\t\t\tstyleTop: null,\n\t\t\t\tstyleRight: null\n\t\t\t});\n\t\t\tthis.set({\n\t\t\t\tbackgroundColor: '#FFFFFF',\n\t\t\t\tpadding: 5\n\t\t\t});\n\t\t\tthis._mainTitle = new qx.ui.basic.Label().set({\n\t\t\t\tpaddingLeft: 5\n\t\t\t});\n\t\t\tthis._mainTitle.setFont(new qx.bom.Font(16, [\"Lucida Grande\", \"Verdana\"]).set({bold: true}));\n\t\t\tthis._layoutBase = new qx.ui.container.Composite(new qx.ui.layout.HBox());\n\t\t\tthis._layoutBottom = new qx.ui.container.Composite(new qx.ui.layout.HBox()).set({\n\t\t\t\tmarginLeft: 15,\n\t\t\t\tmarginRight: 15,\n\t\t\t\tpaddingTop: 5,\n\t\t\t\tdecorator: borderBottom\n\t\t\t});\n\t\t\tthis.add(this._mainTitle, {flex: 1});\n\t\t\tthis.add(this._layoutBase, {flex: 1});\n\t\t\tthis.add(this._layoutBottom, {flex: 1});\n\n\t\t\tthis.addListener('dragover', function (e) {\n\t\t\t\tthis.setDragging(true);\n\t\t\t});\n\n\t\t\tthis.addListener('dragleave', function (e) {\n\t\t\t\tthis.setDragging(false);\n\t\t\t});\n\t\t},\n\n\t\t_addItem: function (item) {\n\t\t\tthis._layoutBase.add(item);\n\t\t\tthis._addListenersToItem(item);\n\t\t},\n\n\t\t_addListenersToItem: function (item) {\n\n\t\t\tvar self = this;\n\n\t\t\t\/**\n\t\t\t * Click events\n\t\t\t *\/\n\t\t\tif (item._clickable) {\n\t\t\t\t\n\t\t\t\titem.addListener('click',  function () {\n\t\t\t\t\tif (!this._dropped) {\n\t\t\t\t\t\tthis.getManager().getViewManager().getController().getModel().setCurrentPath(['path', this.getPath()]);\n\t\t\t\t\t\tthis.getManager().getViewManager().getController()._browse(true);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._dropped = false;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\titem.addListener('mouseover', function () {\n\t\t\t\t\tif (!self.isDragging()) {\n\t\t\t\t\t\tthis._label.setDecorator(this._decoratorMouseOver);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\titem.addListener('mouseout', function (e) {\n\t\t\t\t\tif (!qx.ui.core.Widget.contains(item, e.getRelatedTarget())) {\n\t\t\t\t\t\tif (!self.isDragging()) {\n\t\t\t\t\t\t\tthis._label.setDecorator(this._decoratorMouseOut);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (item.getAcceptsDrop()) {\n\t\t\t\t\n\t\t\t\t\titem.addListener('dragover', function (e) {\n\t\t\t\t\t\tself.setDragging(true);\n\t\t\t\t\t\tvar movingFile = e.getRelatedTarget();\n\t\t\t\t\t\tif (movingFile != null && movingFile instanceof eyeos.files.IconViewItem) {\n\t\t\t\t\t\t\tthis._label.setDecorator(this._decoratorDragOver);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\titem.addListener('dragleave', function (e) {\n\t\t\t\t\t\tthis._label.setDecorator(this._decoratorMouseOut);\n\t\t\t\t\t});\n\n\t\t\t\t\titem.addListener('dragend', function (e) {\n\t\t\t\t\t\tself.setDragging(false);\n\t\t\t\t\t\tthis._label.setDecorator(this._decoratorMouseOut);\n\t\t\t\t\t\tthis.resetAllSelected('dragend');\n\t\t\t\t\t\tthis.resetAllSelected('all');\n\t\t\t\t\t});\n\n\t\t\t\t\titem.addListener('drop', function (e) {\n\t\t\t\t\t\tif (e.getRelatedTarget() instanceof eyeos.files.IconViewItem) {\n\t\t\t\t\t\t\tthis._dropped = true;\n\t\t\t\t\t\t\tself.setDragging(false);\n\t\t\t\t\t\t\tthis.getManager().getViewManager().getController().specialMove(this.getPath());\n\t\t\t\t\t\t\tthis._label.setDecorator(this._decoratorMouseOut);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tshowBrowse: function (input) {\n\t\t\tthis._layoutBase.removeAll();\n\n\t\t\tif (this.getViewManager().getModel().getCurrentPath()[0] == 'path') {\n\t\t\t\tvar path = this.getViewManager().getModel().getCurrentPath()[1];\n\t\t\t\tvar urlParts = eyeos.utils.ParseUri.parse(path);\n\t\t\t\t\n\t\t\t\tvar pathParts = this.getViewManager().getModel().getCurrentPath()[1].split('\/');\n\t\t\t\tvar displayPathParts = qx.lang.Array.clone(pathParts);\n\t\t\t\t\n\t\t\t\tif (urlParts['host'] && urlParts['host'].substring(0, 1) == '~') {\n\t\t\t\t\tdisplayPathParts[2] = urlParts['host'].substring(1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tvar rootItemLabel;\n\t\t\t\tvar firstVisiblePathPart = 2;\n\t\t\t\tswitch (pathParts[0]) {\n\t\t\t\t\tcase 'home:':\n\t\t\t\t\t\trootItemLabel = tr('Home');\n\t\t\t\t\t\tfirstVisiblePathPart = 3;\n\t\t\t\t\t\tthis._base = pathParts[0] + '\/\/' + pathParts[2];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\tcase 'workgroup:':\n\t\t\t\t\t\trootItemLabel = tr('Groups');\n\t\t\t\t\t\tthis._base = pathParts[0] + '\/\/';\n\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t\n\t\t\t\t\tcase 'share:':\n\t\t\t\t\t\trootItemLabel = tr('People');\n\t\t\t\t\t\tthis._base = pathParts[0] + '\/\/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\tcase 'sys:':\n\t\t\t\t\t\trootItemLabel = tr('System');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t\n\t\t\t\t\tcase 'file:':\n\t\t\t\t\t\trootItemLabel = '\/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t\/* We avoid to make droppable the first \"Home\" *\/\n\t\t\t\tif (pathParts.length == 3) {\n\t\t\t\t\tvar item = new eyeos.files.HeaderBarItem(this, this._base, rootItemLabel, false);\n\t\t\t\t} else if (pathParts.length > 3 && pathParts[pathParts.length - 1] == '') {\n\t\t\t\t\tvar item = new eyeos.files.HeaderBarItem(this, this._base, rootItemLabel, true, false);\n\t\t\t\t} else {\n\t\t\t\t\tvar item = new eyeos.files.HeaderBarItem(this, this._base, rootItemLabel, true, true);\n\t\t\t\t}\n\n\t\t\t\tthis._addItem(item);\n\n\t\t\t\tvar clickable = true;\n\t\t\t\tvar droppable = true;\n\t\t\t\tvar futureFolder = '';\n\t\t\t\tvar futureName = rootItemLabel;\n\t\t\t\t\n\t\t\t\tfor (var i = firstVisiblePathPart; i < pathParts.length; i++) {\n\t\t\t\t\tif (pathParts[i] != '') {\n\t\t\t\t\t\t\/\/Workgroup special case: We avoid to insert an intial '\/'\n\t\t\t\t\t\t\/\/in the futureFolder\n\t\t\t\t\t\tif (this._base == 'workgroup:\/\/' && futureFolder == '') {\n\t\t\t\t\t\t\tfutureFolder += pathParts[i];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfutureFolder += '\/' + pathParts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tfutureName = displayPathParts[i];\n\n\t\t\t\t\t\tif (i == pathParts.length - 1 || pathParts[i + 1] == '') {\n\t\t\t\t\t\t\tclickable = false;\n\t\t\t\t\t\t\tdroppable = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tvar item = new eyeos.files.HeaderBarItem(this, this._base + futureFolder, displayPathParts[i], clickable, droppable);\n\t\t\t\t\t\tthis._addItem(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\n\t\t\t\tthis.setTitle(futureName);\n\t\t\t\tthis.getViewManager().setCaption('Files - ' + futureName);\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\tsetTitle: function (title) {\n\t\t\tthis._mainTitle.setValue(tr(title));\n\t\t}\n\t}\n});\n\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nqx.Class.define('eyeos.files.Model', {\n\n\textend: qx.core.Object,\n\n\tconstruct: function (defaultView, defaultPath) {\n\t\targuments.callee.base.call(this);\n\t\t\/\/ Init data model\n\t\tthis.setCurrentPath(defaultPath);\n\t\tthis.setDefaultView(defaultView);\n\t\tthis.setFilesQueue(new Array());\n\t\tthis.setObjectsQueue(new Array());\n\t\tthis.setCurrentFiles(new Array());\n\t\tthis.setHistory(new Array());\n\t\tthis.setHistoryIndex(0);\n\t},\n\n\tproperties: {\n\t\tfilesQueue: {\n\t\t\tcheck: 'Array'\n\t\t},\n\n\t\tobjectsQueue: {\n\t\t\tcheck: 'Array'\n\t\t},\n\t\t\n\t\tqueueAction: {\n\t\t\tcheck: ['move', 'copy']\n\t\t},\n\n\t\tdefaultView: {\n\t\t\tcheck: 'String'\n\t\t},\n\n\t\tcurrentFiles: {\n\t\t\tcheck: 'Array'\n\t\t},\n\n\t\tcurrentPath: {\n\t\t\tcheck: 'Array'\n\t\t},\n\n\t\thistory: {\n\t\t\tcheck: 'Array'\n\t\t},\n\n\t\thistoryIndex: {\n\t\t\tcheck: 'Integer'\n\t\t}\n\t}\n});\n\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team\n*\n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see\n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n*\n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n*\n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the\n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice.\n*\/\n\nqx.Interface.define('eyeos.files.ISocialBarHandler',\n {\n   statics: {\n\t   checkHandler: function(params) {}\n   },\n   members:\n   {\n\t\tupdateSocialBar: function () {}\n   }\n});\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team\n*\n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see\n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n*\n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n*\n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the\n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice.\n*\/\n\nqx.Class.define('eyeos.files.ASocialBarHandler', {\n\textend: qx.core.Object,\n\n\tproperties: {\n\t\tsocialBar: {\n\t\t\tinit: null\n\t\t},\n\t\tparams: {\n\t\t\tinit: null\n\t\t}\n\t},\n\n\tconstruct: function (socialbar, params) {\n\t\tthis.base(arguments);\n\t\tif (socialbar) {\n\t\t\tthis.setSocialBar(socialbar);\n\t\t}\n\t\tif (params) {\n\t\t\tthis.setParams(params);\n\t\t}\n\t},\n\tmembers: {\n\t\t_priority: 10,\n\n\t\tgetPriority: function () {\n\t\t\treturn this._priority;\n\t\t}\n\t}\n\n});\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team\n*\n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see\n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n*\n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n*\n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the\n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice.\n*\/\n\n\/**\n * SUHandlerManager is system of cache for SocialUpdater Handlers implemented by a singleton class.\n * The only role of this class is to return a data struct with current SocialBarUpdater Handlers.\n *\/\nqx.Class.define('eyeos.files.SUHandlerManager', {\n\textend: qx.core.Object,\n\ttype : \"singleton\",\n\n\tproperties: {\n\t\tsuHandlers: {\n\t\t\tinit: null\n\t\t},\n\t\ttoRefresh: {\n\t\t\tcheck: 'Boolean',\n\t\t\tinit: true\n\t\t}\n\t},\n\n\tmembers: {\n\t\t__isLocked: false,\n\t\t__pendingRequests: new Array(),\n\n\t\t\/**\n\t\t * Execute the callback function with the handlers for SocialUpdater of the user.\n\t\t * The first time we retrieve handlers data struct from the server, we store in a\n\t\t * cache system so next call to this function will be faster\n\t\t *\n\t\t * @param checknum {Integer} A valid checknum\n\t\t * @param callback {Function} The function of callback\n\t\t * @param callbackContext {Object} the callbackContext of the function callback\n\t\t *\/\n\t\tgetHandlers: function (checknum, callback, callbackContext) {\n\t\t\tif (this.isToRefresh()) {\n\t\t\t\tthis.__populateHandlers(checknum, function() {\n\t\t\t\t\tif (typeof callback == 'function') {\n\t\t\t\t\t\tcallback.call(callbackContext, this.getSuHandlers());\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\tif (typeof callback == 'function') {\n\t\t\t\t\tcallback.call(callbackContext, this.getSuHandlers());\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t\/**\n\t\t * Populate the internal cach\u00e9 when is not yet charged.\n\t\t * And import relative js classes\n\t\t *\n\t\t * @param checknum {Integer} The checknum of the application\n\t\t * @param callback {Function} The function of callback\n\t\t * @param callbackContext {Object} the callbackContext of the function callback\n\t\t *\/\n\t\t__populateHandlers: function (checknum, callback, callbackContext) {\n\t\t\tvar newRequest = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcallbackContext: callbackContext\n\t\t\t};\n\t\t\tthis.__pendingRequests.push(newRequest);\n\n\n\t\t\tif (this.__isLocked == true) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tthis.__isLocked = true;\n\t\t\t}\n\n\t\t\teyeos.callMessage(checknum, 'getSocialUpdaterHandlers', null, function (results) {\n\t\t\t\t(new qx.io.ScriptLoader).load('index.php?getSUHandler=1', function(e) {\n\t\t\t\t\tthis.setToRefresh(false);\n\t\t\t\t\tthis.__isLocked = false;\n\n\t\t\t\t\t\/\/ Eliminate .js from string and sort classes by theirs values of priority\n\t\t\t\t\tfor (var key in results) {\n\t\t\t\t\t\tfor (var i = 0; i < results[key].length; ++i) {\n\t\t\t\t\t\t\tresults[key][i] = results[key][i].substr(0, results[key][i].lastIndexOf('.'));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresults[key] = results[key].sort(this.__handlersSort);\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t\t\/\/  trim.js and order here!\n\t\t\t\t\tthis.setSuHandlers(results);\n\n\t\t\t\t\tthis._processPendingRequest();\n\t\t\t\t}, this);\n\t\t\t}, this);\n\t\t},\n\n\t\t\/**\n\t\t * Sort handlers by priority\n\t\t *\/\n\t\t__handlersSort: function (a, b) {\n\t\t\tvar classA = eval('new ' + a + '();');\n\t\t\tvar priorA = classA.getPriority();\n\n\t\t\tvar classB = eval('new ' + b + '();');\n\t\t\tvar priorB = classB.getPriority();\n\t\t\treturn ( priorB - priorA );\n\t\t},\n\n\t\t\/**\n\t\t  * Process all the request in pending. A process is on pending when\n\t\t  * we are executing a callmessage\n\t\t  *\/\n\t\t_processPendingRequest: function () {\n\t\t\tif (this.__isLocked != true) {\n\t\t\t\twhile (this.__pendingRequests.length > 0) {\n\t\t\t\t\tvar request = this.__pendingRequests.shift();\n\t\t\t\t\ttry{\n\t\t\t\t\t\tif (typeof request['callback'] == 'function') {\n\t\t\t\t\t\t\trequest['callback'].call(request['callbackContext'], this.getSuHandlers());\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e){\n\t\t\t\t\t\teyeos.consoleWarn('Unable to execute the callback while processing _processPendingRequest()\\n', e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t\n\t}\n});\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team\n*\n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see\n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n*\n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n*\n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the\n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice.\n*\/\n\n\/**\n * SocialBarUpdater allows files to simply update socialbar information with a\n * system of handler.\n * Default handler set is on handler\/default, for custom projects is possible to\n * add an handler set under \/handler.\n *\n * NB: It's not possible to specify more than a custom handler set.\n *\/\n\nqx.Class.define('eyeos.files.SUManager', {\n\textend: qx.core.Object,\n\n\tproperties: {\n\t\tchecknum: {\n\t\t\tinit: null\n\t\t},\n\t\thandlers: {\n\t\t\tinit: null\n\t\t},\n\t\tsocialBar: {\n\t\t\tinit: null,\n\t\t\tcheck: 'Object'\n\t\t}\n\t},\n\n\tconstruct: function (socialBar, checknum) {\n\t\tthis.base(arguments);\n\t\tthis.setSocialBar(socialBar);\n\t\tthis.setChecknum(checknum);\n\t},\n\n\tmembers: {\n\t\t\/**\n\t\t * Files selected are changed, retrieve handlers and execute updateSocialBar\n\t\t * for correct handler\n\t\t *\/\n\t\tselectionChanged: function (params) {\n\t\t\tif (this.getHandlers() != null) {\n\t\t\t\tthis._doSelectionChanged(params);\n\t\t\t} else {\n\t\t\t\teyeos.files.SUHandlerManager.getInstance().getHandlers(this.getChecknum(), function (results) {\n\t\t\t\t\tthis.setHandlers(results);\n\t\t\t\t\tthis._doSelectionChanged(params);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\n\t\t_doSelectionChanged: function (params) {\n\t\t\tvar className = this._getCorrectHandlerClass('changeSelection', params);\n\t\t\tvar handlerClass = eval(className);\n\t\t\tvar handler = new handlerClass(this.getSocialBar(), params);\n\t\t\thandler.updateSocialBar();\n\t\t},\n\t\t\n\t\t\/**\n\t\t * Current Path changed, retrieve hanlders and execute updateSocialBar for\n\t\t * correct handler\n\t\t *\/\n\t\tdirectoryChanged: function (params) {\n\t\t\tif (this.getHandlers() != null) {\n\t\t\t\tthis._doDirectoryChanged(params);\n\t\t\t} else {\n\t\t\t\teyeos.files.SUHandlerManager.getInstance().getHandlers(this.getChecknum(), function (results) {\n\t\t\t\t\tthis.setHandlers(results);\n\t\t\t\t\tthis._doDirectoryChanged(params);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\n\t\t_doDirectoryChanged: function (params) {\n\t\t\tvar className = this._getCorrectHandlerClass('changeDirectory', params);;\n\t\t\tvar handlerClass = eval(className);\n\t\t\tvar handler = new handlerClass(this.getSocialBar(), params);\n\t\t\thandler.updateSocialBar();\n\t\t},\n\n\t\t_getCorrectHandlerClass: function (key, params) {\n\t\t\tvar handlers = this.getHandlers()[key];\n\t\t\tif (handlers == undefined || handlers == null || handlers.length < 1) {\n\t\t\t\tthrow \"No Handler folder for \" + key + \".\";\n\t\t\t}\n\n\t\t\tfor (var i= 0; i < handlers.length; ++i) {\n\t\t\t\tvar className = handlers[i];\n\t\t\t\tvar classRef = eval(className);\n\t\t\t\tif (qx.Class.implementsInterface(classRef, eyeos.files.ISocialBarHandler)) {\n\t\t\t\t\tvar method = new Function(\"params\", \"return \" + className + \".checkHandler(params)\");\n\t\t\t\t\tif (method.call(this, params)) {\n\t\t\t\t\t\treturn className;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tthrow \"No Handler for \" + key + \" with params\" + params;\n\t\t}\n\t}\n});\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team\n*\n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n*\n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n*\n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see\n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n*\n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n*\n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n*\n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the\n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice.\n*\/\n\nqx.Class.define('eyeos.files.SUPathManager', {\n\textend: qx.core.Object,\n\n\tstatics: {\n\t\tisLocalPath: function (path) {\n\t\t\tif (path.indexOf('home:\/\/') == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisSharePath: function (path) {\n\t\t\tif (path.indexOf('share:\/\/') == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tisWorkgroupPath: function (path) {\n\t\t\tif (path.indexOf('workgroup:\/\/') == 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\n\t\tgetPrincipalByPath: function (path) {\n\t\t\tvar regExpression  =  \/(workgroup:\\\/\\\/|share:\\\/\\\/)~([^_][a-zA-Z0-9 .\\-_]{2,40}).*\/;\n\t\t\tvar matches = path.match(regExpression);\n\t\t\tif (matches.length > 2) {\n\t\t\t\treturn matches[2];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n});\n\/*\n*                 eyeos - The Open Source Cloud's Web Desktop\n*                               Version 2.0\n*                   Copyright (C) 2007 - 2010 eyeos Team \n* \n* This program is free software; you can redistribute it and\/or modify it under\n* the terms of the GNU Affero General Public License version 3 as published by the\n* Free Software Foundation.\n* \n* This program is distributed in the hope that it will be useful, but WITHOUT\n* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n* FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more\n* details.\n* \n* You should have received a copy of the GNU Affero General Public License\n* version 3 along with this program in the file \"LICENSE\".  If not, see \n* <http:\/\/www.gnu.org\/licenses\/agpl-3.0.txt>.\n* \n* See www.eyeos.org for more details. All requests should be sent to licensing@eyeos.org\n* \n* The interactive user interfaces in modified source and object code versions\n* of this program must display Appropriate Legal Notices, as required under\n* Section 5 of the GNU Affero General Public License version 3.\n* \n* In accordance with Section 7(b) of the GNU Affero General Public License version 3,\n* these Appropriate Legal Notices must retain the display of the \"Powered by\n* eyeos\" logo and retain the original copyright notice. If the display of the \n* logo is not reasonably feasible for technical reasons, the Appropriate Legal Notices\n* must display the words \"Powered by eyeos\" and retain the original copyright notice. \n*\/\n\nfunction files_application(checknum, pid, args) {\n\tvar filesApplication = new eyeos.system.EyeApplication('files', checknum, pid);\n\tvar filesController = new eyeos.files.Controller(filesApplication, args, 'iconview', checknum);\n}\n\nqx.Class.define('eyeos.files.Controller', {\n\n\textend: qx.core.Object,\n\t\n\tconstruct: function (application, args, defaultView, checknum) {\n\t\t\n\t\targuments.callee.base.call(this);\n\t\t\n\t\t\/\/ SETTERS\n\t\tthis.setApplication(application);\n\n\t\t\/*\n\t\t * We fill with a default path in case none is given\n\t\t * Init of the model and the view manager\n\t\t *\/\n\t\t\n\t\tvar defArgs;\n\t\tif (args[0] == undefined) {\n\t\t\tdefArgs = ['path', 'home:\/\/\/'];\n\t\t} else {\n\t\t\tdefArgs = ['path', args[0]];\n\t\t}\n\t\t\n\t\tthis.setModel(new eyeos.files.Model(defaultView, defArgs));\n\n\t\t\/*\n\t\t * Init of the application depending on what we have to show\n\t\t *\/\n\t\tthis._addListeners();\n\t\tthis.setView(new eyeos.files.ViewManager(\n\t\t\t\tthis,\n\t\t\t\tthis.getModel(),\n\t\t\t\tthis.getApplication(),\n\t\t\t\t'Files',\n\t\t\t\t'index.php?extern=\/images\/16x16\/apps\/system-file-manager.png',\n\t\t\t\tfalse,\n\t\t\t\tfalse\n\t\t));\n\n\t\t\/\/ Init SocialBarUpdater\n\t\tvar socialBarUpdater = new eyeos.files.SUManager(this.getView()._socialBar, checknum);\n\t\tthis.setSocialBarUpdater(socialBarUpdater);\n\t\tthis._addSocialBarUpdaterListeners();\n\t\t\n\t\tthis._browse(true);\n\t\t\/\/this.getView().maximize();\n\t},\n\n\tproperties: {\n\t\tapplication: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tmodel: {\n\t\t\tcheck: 'Object'\n\t\t},\n\t\t\n\t\tview: {\n\t\t\tcheck: 'Object'\n\t\t},\n\n\t\tsocialBarUpdater: {\n\t\t\tcheck: 'eyeos.files.SocialBarUpdater',\n\t\t\tinit: null\n\t\t}\n\t},\n\n\tmembers: {\n\n\t\t_dBusListeners: new Array(),\n\t\t\n\t\t_filesQueue: eyeos.filesQueue.getInstance(),\n\t\t_dBus: eyeos.messageBus.getInstance(),\n\n\t\t_addListeners: function () {\n\/\/\t\t\tthis.addListener('selectedFile', function (e) {\n\/\/\t\t\t\tvar selected = e.getData();\n\/\/\t\t\t\tvar temp = new Array();\n\/\/\t\t\t\tvar callToUpdateContacts = true;\n\/\/\t\t\t\tif (selected.length == 1) {\n\/\/\t\t\t\t\ttemp.push(selected[0].getFile());\n\/\/\t\t\t\t} else if (selected.length > 1) {\n\/\/\t\t\t\t\tfor (var i = 0; i < selected.length; ++i) {\n\/\/\t\t\t\t\t\ttemp.push(selected[i].getFile());\n\/\/\t\t\t\t\t\tcallToUpdateContacts = false;\n\/\/\t\t\t\t\t}\n\/\/\t\t\t\t}\n\/\/\t\t\t\tthis.getView().updateSocialBar(temp, callToUpdateContacts);\n\/\/\t\t\t});\n\/\/\n\/\/\t\t\tthis.addListener('cleanSocialBar', function () {\n\/\/\t\t\t\tthis.getView().cleanSocialBar();\n\/\/\t\t\t});\n\n\n\t\t\t\/\/ DBUS Messages for syncing all \"Files\"\n\n\t\t\t\/*\n\t\t\t * eyeos_files_delete - Deletes a file from the Model in case our current path is the same as the source one and updates the view\n\t\t\t *\n\t\t\t * @receives {Array} [sourcePath: string, files: Array] \n\t\t\t *\/\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_delete', function (e) {\n\t\t\t\tvar sourcePath = e.getData()[0];\n\t\t\t\tvar filesToDelete = e.getData()[1];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\n\t\t\t\tif(sourcePath.charAt(sourcePath.length-1) != '\/') {\n\t\t\t\t\tsourcePath = sourcePath + '\/';\n\t\t\t\t}\n\t\t\t\tif(currentPath.charAt(sourcePath.length-1) != '\/') {\n\t\t\t\t\tcurrentPath = currentPath + '\/';\n\t\t\t\t}\n\t\t\t\tif (sourcePath == currentPath) {\n\t\t\t\t\tfor (var i = currentFiles.length - 1; i >= 0; --i) {\n\t\t\t\t\t\tif (filesToDelete.indexOf(currentFiles[i].getAbsolutePath()) != -1) {\n\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t} else if (filesToDelete.indexOf(currentPath) != -1) {\n\t\t\t\t\tthis._browsePath('home:\/\/~'+eyeos.getCurrentUserName()+'\/');\n\t\t\t\t}\n\n\t\t\t\t\/\/Update SocialBar\n\t\t\t\tvar params = {\n\t\t\t\t\tpath: currentPath,\n\t\t\t\t\tchecknum: this.getApplication().getChecknum()\n\t\t\t\t}\n\t\t\t\tthis.getSocialBarUpdater().directoryChanged(params);\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_new - Adds a file to the Model in case our current path is the same as the source one and updated the view\n\t\t\t *\n\t\t\t * @receives {Array} [sourcePath: string, file: Object]\n\t\t\t *\/\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_new', function (e) {\n\n\t\t\t\tvar sourcePath = e.getData()[0];\n\t\t\t\tvar fileToCreate = e.getData()[1];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\n\t\t\t\tif (sourcePath == currentPath) {\n\t\t\t\t\tvar file = new eyeos.files.File(fileToCreate);\n\t\t\t\t\tthis.getModel().getCurrentFiles().push(file);\n\t\t\t\t\tthis.getView()._view.showBrowse();\n\n                                        var items = this.getView()._view.returnAll();\n                                        \/\/en items tengo un array de IconViewItems\n                                        var i = 0;\n                                        var size = items.length;\n                                        for(i=0;i<size;i++) {\n                                            if(items[i].getFile().getName() == e.getData()[1].name) {\n                                                items[i].select();\n                                                this.editFile();\n                                                i = size;\n                                            }\n\n                                        }\n\t\t\t\t}\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_cut - Directly updates the view if the source folder is our current one\n\t\t\t *\n\t\t\t * @receives {Array} [sourcePath: string, files: Array]\n\t\t\t *\/\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_cut', function (e) {\n\n\t\t\t\tvar sourcePath = e.getData()[0];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\n\t\t\t\tvar filesToCut = e.getData()[1];\n\t\t\t\tvar filesToCutPath = new Array();\n\t\t\t\tfor (var i = 0; i < filesToCut.length; ++i) {\n\t\t\t\t\tfilesToCutPath[i] = filesToCut[i].getAbsolutePath();\n\t\t\t\t}\n\n\t\t\t\tif (sourcePath == currentPath) {\n\t\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\t\t\t\t\tvar currentFilesPaths = new Array();\n\t\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\t\tcurrentFilesPaths[i] = currentFiles[i].getAbsolutePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < filesToCut.length; ++i) {\n\t\t\t\t\t\tvar index = currentFilesPaths.indexOf(filesToCutPath[i]);\n\t\t\t\t\t\tif (index != -1) {\n\t\t\t\t\t\t\tcurrentFiles[index].setCutted(true);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t} else if (filesToCutPath.indexOf(currentPath) != -1) {\n\t\t\t\t\tthis._browsePath('home:\/\/~'+eyeos.getCurrentUserName()+'\/');\n\t\t\t\t}\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_update - Adds\/Remove information to the Files objects and updates the view\n\t\t\t *\n\t\t\t * @receives {Array} [sourcePath: string, files: Array]\n\t\t\t *\/\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_update', function (e) {\n\t\t\t\tvar sourcePath = e.getData()[0];\n\t\t\t\tvar filesToUpdate = e.getData()[1];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\n\t\t\t\tif (currentPath.substr(currentPath.length - 1) != '\/') {\n\t\t\t\t\tcurrentPath += '\/';\n\t\t\t\t}\n\n\t\t\t\tif (sourcePath.substr(sourcePath.length - 1) != '\/') {\n\t\t\t\t\tsourcePath += '\/';\n\t\t\t\t}\n\t\t\t\n\t\t\t\tif (sourcePath == currentPath) {\n\n\t\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\t\t\t\t\tvar currentFilesPath = new Array();\n\t\t\t\t\tvar filesToUpdatePath = new Array();\n\n\t\t\t\t\tfor (var i = 0; i < filesToUpdate.length; ++i) {\n\t\t\t\t\t\tfilesToUpdatePath.push(filesToUpdate[i].getAbsolutePath());\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\t\tcurrentFilesPath.push(currentFiles[i].getAbsolutePath());\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (var i = 0; i < filesToUpdate.length; ++i) {\n\t\t\t\t\t\tvar index = currentFilesPath.indexOf(filesToUpdatePath[i]);\n\t\t\t\t\t\tif (index != -1) {\n\t\t\t\t\t\t\tcurrentFiles[index].setShared(filesToUpdate[i].getShared());\n\t\t\t\t\t\t\tcurrentFiles[index].setRating(filesToUpdate[i].getRating());\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tvar returnSelected = this.getView().returnSelected();\n\t\t\t\t\tfor (var i = 0; i < returnSelected.length; ++i) {\n\t\t\t\t\t\treturnSelected[i].updateImage();\n\t\t\t\t\t}\n\n\/\/\t\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t}\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_paste - Adds\/Remove files to\/from the Model in case our current path is the source or the target one and updates the view\n\t\t\t *\n\t\t\t * @receives {Array} [files: Array, action: string, sourcePath: string, targetPath: string, results: Array]\n\t\t\t *\n\t\t\t * (results is just used when our action is copy, it's an array containing the new names of the files in case they have been renamed\n\t\t\t *\/\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_paste', function (e) {\n\t\t\t\tvar files = e.getData()[0];\n\t\t\t\tvar action = e.getData()[1];\n\t\t\t\tvar source = e.getData()[2];\n\t\t\t\tvar target = e.getData()[3];\n\t\t\t\tvar results = e.getData()[4];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\n\t\t\t\tvar filesPath = new Array();\n\t\t\t\tvar currentFilesPath = new Array();\n\n\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\tcurrentFilesPath.push(currentFiles[i].getAbsolutePath());\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < files.length; ++i) {\n\t\t\t\t\tfilesPath.push(files[i].getAbsolutePath());\n\t\t\t\t}\n\n\t\t\t\tif (action == 'move') {\n\n\t\t\t\t\tvar toSplice = new Array();\n\n\t\t\t\t\tfor (var i = files.length - 1; i >= 0; --i) {\n\t\t\t\t\t\tvar index = currentFilesPath.indexOf(filesPath[i]);\n\t\t\t\t\t\tif (index != -1) {\n\t\t\t\t\t\t\tif (target == currentPath) {\n\t\t\t\t\t\t\t\tcurrentFiles[index].setCutted(false);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttoSplice.push(index);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (target == currentPath) {\n\t\t\t\t\t\t\t\tvar destination = target + '\/' + files[i].getName();\n\t\t\t\t\t\t\t\tvar index = currentFilesPath.indexOf(destination);\n\t\t\t\t\t\t\t\tif (index == -1) {\n\t\t\t\t\t\t\t\t\tvar newFile = {\n\t\t\t\t\t\t\t\t\t\ttype: files[i].getType(),\n\t\t\t\t\t\t\t\t\t\tsize: files[i].getSize(),\n\t\t\t\t\t\t\t\t\t\tname: files[i].getName(),\n\t\t\t\t\t\t\t\t\t\textension: files[i].getExtension(),\n\t\t\t\t\t\t\t\t\t\tpermissions: files[i].getPermissions(),\n\t\t\t\t\t\t\t\t\t\towner: files[i].getOwner(),\n\t\t\t\t\t\t\t\t\t\tpath: target,\n\t\t\t\t\t\t\t\t\t\tabsolutepath: destination,\n\t\t\t\t\t\t\t\t\t\tshared: files[i].getShared(),\n\t\t\t\t\t\t\t\t\t\trating: files[i].getRating(),\n\t\t\t\t\t\t\t\t\t\tcreated: files[i].getCreated(),\n\t\t\t\t\t\t\t\t\t\tmodified: files[i].getModified()\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tvar nFile = new eyeos.files.File(newFile);\n\t\t\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().push(nFile);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tcurrentFiles[index].set({\n\t\t\t\t\t\t\t\t\t\ttype: files[i].getType(),\n\t\t\t\t\t\t\t\t\t\tsize: files[i].getSize(),\n\t\t\t\t\t\t\t\t\t\tname: files[i].getName(),\n\t\t\t\t\t\t\t\t\t\textension: files[i].getExtension(),\n\t\t\t\t\t\t\t\t\t\tpermissions: files[i].getPermissions(),\n\t\t\t\t\t\t\t\t\t\towner: files[i].getOwner(),\n\t\t\t\t\t\t\t\t\t\tshared: files[i].getShared(),\n\t\t\t\t\t\t\t\t\t\trating: files[i].getRating(),\n\t\t\t\t\t\t\t\t\t\tcreated: files[i].getCreated(),\n\t\t\t\t\t\t\t\t\t\tmodified: files[i].getModified()\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (toSplice.length >= 1) {\n\t\t\t\t\t\tfor (var i = 0; i < toSplice.length; ++i) {\n\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().splice(toSplice[i], 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else if (action == 'copy') {\n\t\t\t\t\tif (target == currentPath) {\n\t\t\t\t\t\tfor (var i = 0; i < results.length; ++i) {\n\t\t\t\t\t\t\tif (currentFilesPath.indexOf(results[i].absolutepath) == -1) {\n\t\t\t\t\t\t\t\tvar futureFile = currentPath  + results[i].name;\n\t\t\t\t\t\t\t\tif (currentFilesPath.indexOf(futureFile) == -1) {\n\t\t\t\t\t\t\t\t\tvar file = new eyeos.files.File(results[i]);\n\t\t\t\t\t\t\t\t\tfile.setShared('0');\n\t\t\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().push(file);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_paste - Adds\/Remove files to\/from the Model in case our current path is the source or the target one and updates the view\n\t\t\t *\n\t\t\t * @receives {Array} [files: Array, action: string, sourcePath: string, targetPath: string, results: Array]\n\t\t\t *\n\t\t\t * (results is just used when our action is copy, it's an array containing the new names of the files in case they have been renamed\n\t\t\t *\/\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_drop', function (e) {\n\t\t\t\tvar files = e.getData()[0];\n\t\t\t\tvar source = e.getData()[1];\n\t\t\t\tvar target = e.getData()[2];\n\n\t\t\t\tif(target.charAt(target.length-1) != '\/') {\n\t\t\t\t\ttarget = target + '\/';\n\t\t\t\t}\n\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\n\t\t\t\tif(currentPath.charAt(currentPath.length-1) != '\/') {\n\t\t\t\t\tcurrentPath = currentPath + '\/';\n\t\t\t\t}\n\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\n\t\t\t\tvar filesPath = new Array();\n\t\t\t\tvar currentFilesPath = new Array();\n\n\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\tcurrentFilesPath.push(currentFiles[i].getAbsolutePath());\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < files.length; ++i) {\n\t\t\t\t\tfilesPath.push(files[i].getAbsolutePath());\n\t\t\t\t}\n\n\t\t\t\tvar toSplice = new Array();\n\n\t\t\t\tfor (var i = files.length - 1; i >= 0; --i) {\n\t\t\t\t\tvar index = currentFilesPath.indexOf(filesPath[i]);\n\t\t\t\t\tif (index != -1) {\n\t\t\t\t\t\tif (target != currentPath) {\n\t\t\t\t\t\t\ttoSplice.push(index);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (target == currentPath) {\n\t\t\t\t\t\t\tvar destination = target + files[i].getName();\n\t\t\t\t\t\t\tvar index = currentFilesPath.indexOf(destination);\n\t\t\t\t\t\t\tif (index == -1) {\n\t\t\t\t\t\t\t\tvar newFile = {\n\t\t\t\t\t\t\t\t\ttype: files[i].getType(),\n\t\t\t\t\t\t\t\t\tsize: files[i].getSize(),\n\t\t\t\t\t\t\t\t\tname: files[i].getName(),\n\t\t\t\t\t\t\t\t\textension: files[i].getExtension(),\n\t\t\t\t\t\t\t\t\tpermissions: files[i].getPermissions(),\n\t\t\t\t\t\t\t\t\towner: files[i].getOwner(),\n\t\t\t\t\t\t\t\t\tpath: target,\n\t\t\t\t\t\t\t\t\tabsolutepath: destination,\n\t\t\t\t\t\t\t\t\tshared: files[i].getShared(),\n\t\t\t\t\t\t\t\t\trating: files[i].getRating(),\n\t\t\t\t\t\t\t\t\tcreated: files[i].getCreated(),\n\t\t\t\t\t\t\t\t\tmodified: files[i].getModified()\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tif(newFile.extension == 'LNK') {\n\t\t\t\t\t\t\t\t\tnewFile.content = files[i].getContent();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar nFile = new eyeos.files.File(newFile);\n\t\t\t\t\t\t\t\tthis.getModel().getCurrentFiles().push(nFile);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcurrentFiles[index].set({\n\t\t\t\t\t\t\t\t\ttype: files[i].getType(),\n\t\t\t\t\t\t\t\t\tsize: files[i].getSize(),\n\t\t\t\t\t\t\t\t\tname: files[i].getName(),\n\t\t\t\t\t\t\t\t\textension: files[i].getExtension(),\n\t\t\t\t\t\t\t\t\tpermissions: files[i].getPermissions(),\n\t\t\t\t\t\t\t\t\towner: files[i].getOwner(),\n\t\t\t\t\t\t\t\t\tshared: files[i].getShared(),\n\t\t\t\t\t\t\t\t\trating: files[i].getRating(),\n\t\t\t\t\t\t\t\t\tcreated: files[i].getCreated(),\n\t\t\t\t\t\t\t\t\tmodified: files[i].getModified()\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (toSplice.length >= 1) {\n\t\t\t\t\tfor (var i = 0; i < toSplice.length; ++i) {\n\t\t\t\t\t\tthis.getModel().getCurrentFiles().splice(toSplice[i], 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.getView().showBrowse();\n\n\t\t\t}, this));\n\n\t\t\t\/*\n\t\t\t * eyeos_files_rename - Adds\/Remove files to\/from the Model in case our current path is the source or the target one\n\t\t\t *\n\t\t\t * @receives {Array} [oldName: string, sourcePath: string, results: Object containing the data of the file]\n\t\t\t *\/\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_files_rename', function (e) {\n\t\t\t\tvar sourcePath = e.getData()[1];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\tif (sourcePath == currentPath) {\n\t\t\t\t\tvar oldName = e.getData()[0];\n\t\t\t\t\tvar currentFiles = this.getModel().getCurrentFiles();\n\t\t\t\t\tvar results = e.getData()[2];\n\t\t\t\t\tfor (var i = 0; i < currentFiles.length; ++i) {\n\t\t\t\t\t\tif (currentFiles[i].getAbsolutePath() == oldName) {\n\t\t\t\t\t\t\tcurrentFiles[i].setName(results.name);\n\t\t\t\t\t\t\tcurrentFiles[i].setAbsolutePath(results.absolutepath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.getView().showBrowse();\n\t\t\t}, this));\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_file_uploadComplete', function (e) {\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\tvar splitted = e.getData().absolutepath.split('\/');\n\t\t\t\tvar path = '';\n\t\t\t\tfor (var i = 0; i < splitted.length - 1; ++i) {\n\t\t\t\t\tif (splitted[i] != '') {\n\t\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\t\tpath += splitted[i] + '\/\/';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpath += splitted[i] + '\/';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (currentPath.substring(currentPath.length - 1) != '\/') {\n\t\t\t\t\tcurrentPath += '\/';\n\t\t\t\t}\n\n\t\t\t\tif (path == currentPath) {\n\t\t\t\t\tvar file = new eyeos.files.File(e.getData());\n\t\t\t\t\tthis.getModel().getCurrentFiles().push(file);\n\t\t\t\t\tthis.getView().showBrowse();\n\t\t\t\t}\n\t\t\t}\n\t\t\t, this));\n\n\t\t\tthis._dBusListeners.push(this._dBus.addListener('eyeos_socialbar_ratingChanged', function (e) {\n\t\t\t\tvar eventPath = e.getData()['path'];\n\t\t\t\tvar eventFiles = e.getData()['files'];\n\t\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\t\t\n\t\t\t\tif (eventPath == currentPath) {\n\t\t\t\t\tvar modelFiles = this.getModel().getCurrentFiles();\n\t\t\t\t\tfor (var i = 0; i < modelFiles.length; ++i) {\n\t\t\t\t\t\tfor (var j=0; j < eventFiles.length; ++j) {\n\t\t\t\t\t\t\tif (modelFiles[i].getAbsolutePath() == eventFiles[j].getAbsolutePath()) {\n\t\t\t\t\t\t\t\tmodelFiles[i].setRating(eventFiles[j].getRating());\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t, this));\n\t\t},\n\n\t\t_addSocialBarUpdaterListeners: function () {\n\t\t\tthis.addListener('selectedFile', function (e) {\n\t\t\t\tvar params = {\n\t\t\t\t\tpath: this.getModel().getCurrentPath()[1],\n\t\t\t\t\tselected: this._getFilesFromIconViews(e.getData()),\n\t\t\t\t\tchecknum: this.getApplication().getChecknum()\n\t\t\t\t}\n\t\t\t\tthis.getSocialBarUpdater().selectionChanged(params);\n\t\t\t}, this);\n\n\t\t\tthis.addListener('directoryChanged', function (e) {\n\t\t\t\tvar params = {\n\t\t\t\t\tpath: e.getData(),\n\t\t\t\t\tchecknum: this.getApplication().getChecknum()\n\t\t\t\t}\n\t\t\t\tthis.getSocialBarUpdater().directoryChanged(params);\n\t\t\t}, this);\n\t\t},\n\n\t\t_getFilesFromIconViews: function (iconViews) {\n\t\t\tvar filesArray = [];\n\t\t\tfor (var i = 0; i < iconViews.length; ++i) {\n\t\t\t\tfilesArray.push(iconViews[i].getFile());\n\t\t\t}\n\t\t\treturn filesArray;\n\t\t},\n\n\t\t_browse: function (addToHistory) {\n\t\t\tvar currentPath = this.getModel().getCurrentPath();\n\t\t\tthis._browsePath(currentPath[1], addToHistory);\n\t\t},\n\n\t\t_browsePath: function(path, addToHistory) {\n\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'browsePath', [path, null, null], function (results) {\n\t\t\t\tthis._browsePath_callback(results, path, addToHistory);\n\t\t\t}, this, null, 12000);\n\t\t},\n\n\t\t_browsePath_callback: function(results, path, addToHistory) {\n\t\t\t\/\/ Send data to the model\n\t\t\tthis.getModel().setCurrentPath(['path', results.absolutepath]);\n\n\t\t\tif (addToHistory) {\n\t\t\t\tthis._addToHistory('path');\n\t\t\t}\n\n\t\t\t\/\/ Empty the array with all the previous files\n\t\t\tthis.getModel().getCurrentFiles().splice(0, this.getModel().getCurrentFiles().length);\n\t\t\t\n\t\t\t\/\/ The Cut\/Copy\/Paste queue\n\t\t\tvar filesQueue = this._filesQueue.getMoveQueue();\n\t\t\tvar action = this._filesQueue.getAction();\n\t\t\tvar filesQueuePath = new Array();\n\t\t\tfor (var i = 0; i < filesQueue.length; ++i) {\n\t\t\t\tfilesQueuePath.push(filesQueue[i].getAbsolutePath());\n\t\t\t}\n\n\t\t\t\/\/ Foreach file we will create a \"file object\" that will contain all the data of the file\n\t\t\tfor (var i = 0; i < results.files.length; ++i) {\n\t\t\t\tif(path == 'share:\/\/\/') {\n\t\t\t\t\tresults.files[i].sharedByContacts = true;\n\t\t\t\t}\n\n\t\t\t\tvar item = new eyeos.files.File(results.files[i]);\n\n\t\t\t\tvar index = filesQueuePath.indexOf(results.files[i].absolutepath);\n\t\t\t\tif (index != -1 && action == 'move') {\n\t\t\t\t\titem.setCutted(true);\n\t\t\t\t}\n\n\t\t\t\tthis.getModel().getCurrentFiles().push(item);\n\t\t\t}\n\n\t\t\t\/\/ We call to the view controller to show the browse\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) == 'share:\/\/' || currentPath == 'workgroup:\/\/\/') {\n\t\t\t\tthis.getView()._view.setContextMenu(null);\n\t\t\t} else {\n\t\t\t\tthis.getView()._view.setContextMenu(this.getView()._view._menu);\n\t\t\t}\n\t\t\tthis.getView().showBrowse();\n\n\t\t\tthis.fireDataEvent('directoryChanged', currentPath);\n\t\t},\n\n\t\t_addToHistory: function (input) {\n\t\t\t\/\/ If we have to add this path to the history ...\n\t\t\tvar history = this.getModel().getHistory();\n\t\t\tvar historyIndex = this.getModel().getHistoryIndex();\n\t\t\t\/\/ A new position is added on the array pointing to our current path\n\t\t\thistory[historyIndex] = [input, this.getModel().getCurrentPath()[1]];\n\t\t\tif (historyIndex > 0) {\n\t\t\t\tthis.getModel().getHistory().splice(parseInt(historyIndex + 1), parseInt(history.length - parseInt(historyIndex + 1)));\n\t\t\t}\n\t\t\tthis.getModel().setHistoryIndex(historyIndex + 1);\n\t\t},\n\n\t\tspecialMove: function (path, selection) {\n\t\t\tif(selection) {\n\t\t\t\tvar filesToMove = [];\n\t\t\t\tvar files = [path];\n\t\t\t\tfor(var i = 0; i < selection.length; i++) {\n\t\t\t\t\tvar info = selection[i].getUserData('info');\n\t\t\t\t\tvar pathFromFile = info.absolutepath;\n\t\t\t\t\tvar source = pathFromFile.replace(\/\\\\\/g, '\/').replace(\/\\\/[^\\\/]*\\\/?$\/, '');\n\t\t\t\t\tvar target = path;\n\t\t\t\t\tvar content = selection[i].getUserData('content');\n\t\t\t\t\tfiles.push(pathFromFile);\n\t\t\t\t\tfilesToMove.push({\n\t\t\t\t\t\t\tmPathFromFile: pathFromFile,\n\t\t\t\t\t\t\tmInfo: info,\n\t\t\t\t\t\t\tcontent: content,\n\t\t\t\t\t\t\tgetAbsolutePath: function() {\n\t\t\t\t\t\t\t\treturn this.mPathFromFile;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetName: function() {\n\t\t\t\t\t\t\t\treturn this.mPathFromFile.replace(\/^.*[\\\/\\\\]\/g, '');\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetType: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.type;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetSize: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.size;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetExtension: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.extension;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetPermissions: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.permissions;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetOwner: function() {\n\t\t\t\t\t\t\t\treturn this.mInfo.owner;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetShared: function() {\n\t\t\t\t\t\t\t\tif(!this.mInfo.shared) {\n\t\t\t\t\t\t\t\t\treturn \"0\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn this.mInfo.shared;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetRating: function() {\n\t\t\t\t\t\t\t\tif(!this.mInfo.rating) {\n\t\t\t\t\t\t\t\t\treturn \"0\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn this.mInfo.rating;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetCreated: function() {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tvar ret = this.mInfo.meta.creationTime;\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tvar foo = new Date;\n\t\t\t\t\t\t\t\t\tvar unixtime_ms = foo.getTime();\n\t\t\t\t\t\t\t\t\tvar unixtime = parseInt(unixtime_ms \/ 1000);\n\t\t\t\t\t\t\t\t\treturn unixtime;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetModified: function() {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tvar ret = this.mInfo.meta.modificationTime;\n\t\t\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t\t\tvar foo = new Date;\n\t\t\t\t\t\t\t\t\tvar unixtime_ms = foo.getTime();\n\t\t\t\t\t\t\t\t\tvar unixtime = parseInt(unixtime_ms \/ 1000);\n\t\t\t\t\t\t\t\t\treturn unixtime;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn ret;\n\t\t\t\t\t\t\t},\n\n\t\t\t\t\t\t\tgetContent: function() {\n\t\t\t\t\t\t\t\tif(!this.content) {\n\t\t\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn this.content;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'move', files, function (results) {\n\t\t\t\t\t\tthis._dBus.send('files', 'drop', [filesToMove, source, target]);\n\t\t\t\t\t\tthis._browsePath(path);\n\t\t\t\t\t\tthis._filesQueue.setDragQueue([]);\n\t\t\t\t}, this);\n\t\t\t} else {\n\t\t\t\tvar filesToMove = this._filesQueue.getDragQueue();\n\t\t\t\tif (filesToMove.length >= 1) {\n\t\t\t\t\t\tvar files = new Array();\n\t\t\t\t\t\tvar action = this._filesQueue.getAction();\n\t\t\t\t\t\tvar source = this._filesQueue.getDragSource();\n\t\t\t\t\t\tvar target = path;\n\t\t\t\t\t\tfor (var i = 0; i < filesToMove.length; ++i) {\n\t\t\t\t\t\t\t\tfiles.push(filesToMove[i].getAbsolutePath());\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfiles.unshift(path);\n\t\t\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'move', files, function (results) {\n\t\t\t\t\t\t\t\tthis._dBus.send('files', 'drop', [filesToMove, source, target]);\n\t\t\t\t\t\t\t\tthis._browsePath(path);\n\t\t\t\t\t\t\t\tthis._filesQueue.setDragQueue([]);\n\t\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\t\n\t\topenFile: function () {\n\t\t\tvar filesToOpen = this.getView().returnSelected();\n\t\t\tvar filesForViewer = new Array();\n\t\t\tvar filesForDocuments = new Array();\n\t\t\tvar filesForFemto = new Array();\n\t\t\tvar foldersToOpen = new Array();\n\t\t\tvar filesForImageViewer = new Array();\n\t\t\tvar filesForDocPreview = new Array();\n\t\t\tvar filesForPDFPreview = new Array();\n\t\t\tvar filesForOpenLink = new Array();\n\n\t\t\tvar extensionsForViewer = ['MP3','FLV','HTM','HTML','M4A','WAV','WMA','MOV', '3GP', '3GPP', '3G2', 'MP4', 'MPG', 'MPV', 'AVI', 'OGG', 'OGV', 'WEBM'];\n\t\t\tvar extensionsForDocuments = ['EDOC'];\n\t\t\tvar extensionsDocPreview = ['DOC', 'DOCX', 'ODT', 'ODS', 'OTS', 'SXC', 'XLS', 'XLT', 'XLS', 'XLSX', 'ODP', 'OTP', 'SXI', 'STI', 'PPT', 'POT', 'SXD', 'PPTX', 'PPSX', 'POTM', 'PPS', 'FODP', 'UOP'];\n\t\t\tvar extensionsForFemto = ['TXT'];\n\t\t\tvar extensionsForImageViewer = ['JPG', 'JPEG', 'BMP', 'GIF', 'PNG'];\n\t\t\tvar extensionsForPDFViewer = ['PDF'];\n\t\t\tvar extensionsForLink = ['LNK'];\n\n\t\t\tfor (var i = 0; i < filesToOpen.length; ++i) {\n\t\t\t\tvar type = filesToOpen[i].getFile().getType();\n\t\t\t\tvar extension = filesToOpen[i].getFile().getExtension();\n\t\t\t\tif (type == 'folder') {\n\t\t\t\t\tfoldersToOpen.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t} else {\n\t\t\t\t\tif (extensionsForViewer.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForViewer.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForImageViewer.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForImageViewer.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForDocuments.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForDocuments.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForFemto.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForFemto.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsDocPreview.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForDocPreview.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForPDFViewer.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForPDFPreview.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t\tif (extensionsForLink.indexOf(extension) != -1) {\n\t\t\t\t\t\tfilesForOpenLink.push(filesToOpen[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (filesForViewer.length >= 1) {\n\t\t\t\teyeos.execute('viewer', this.getApplication().getChecknum(), filesForViewer);\n\t\t\t}\n\n\t\t\tif (filesForImageViewer.length >= 1) {\n\t\t\t\teyeos.execute('imageviewer', this.getApplication().getChecknum(), filesForImageViewer);\n\t\t\t}\n\t\t\t\n\t\t\tif (filesForDocuments.length >= 1) {\n\t\t\t\teyeos.execute('documents', this.getApplication().getChecknum(), filesForDocuments);\n\t\t\t}\n\n\t\t\tif (filesForDocPreview.length >= 1) {\n\t\t\t\teyeos.execute('docviewer', this.getApplication().getChecknum(), filesForDocPreview);\n\t\t\t}\n\n\t\t\tif (filesForPDFPreview.length >= 1) {\n\t\t\t\teyeos.execute('pdfviewer', this.getApplication().getChecknum(), filesForPDFPreview);\n\t\t\t}\n\n\t\t\tif (filesForFemto.length >= 1) {\n\t\t\t\teyeos.execute('notepad', this.getApplication().getChecknum(), filesForFemto);\n\t\t\t}\n\t\t\tif (filesForOpenLink.length >= 1) {\n\t\t\t\teyeos.execute('openLink', this.getApplication().getChecknum(), filesForOpenLink);\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < foldersToOpen.length; ++i) {\n\t\t\t\teyeos.execute('files', this.getApplication().getChecknum(), [foldersToOpen[i]]);\n\t\t\t}\n\t\t},\n\n\t\tnewFile: function (extension) {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar name = null;\n\t\t\t\tswitch (extension) {\n\t\t\t\t\tcase 'txt': {\n\t\t\t\t\t\tname = tr('New File');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'edoc': {\n\t\t\t\t\t\tname = tr('New Document');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcase 'xls': {\n\t\t\t\t\t\tname = tr('New Spreadsheet');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'createNewFile', [currentPath + '\/' + name + '.' + extension], function (results) {\n\t\t\t\t\tthis._dBus.send('files', 'new', [currentPath, results]);\n\t\t\t\t},this);\n\t\t\t}\n\t\t},\n\t\tnewLink: function() {\n\t\t   eyeos.execute('newLink', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);\n\t\t},\n\n\t\tuploadFile: function() {\n\t\t   eyeos.execute('upload', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);\n\t\t},\n\t\tnewFolder: function () {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar name = tr('New Folder');\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'mkdir', new Array(currentPath, name), function (results) {\n\t\t\t\t\tthis._dBus.send('files', 'new', [currentPath, results]);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\t\t\n\t\tdeleteFile: function () {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar filesToDelete = this.getView().returnSelected();\n\t\t\t\tvar files = new Array();\n\t\t\t\tfor (var i = 0; i < filesToDelete.length; ++i) {\n\t\t\t\t\tif(filesToDelete[i].getFile().getAbsolutePath() != 'home:\/\/~' + eyeos.getCurrentUserName() + '\/Desktop') {\n\t\t\t\t\t\tfiles.push(filesToDelete[i].getFile().getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(files.length == 0) {\n\t\t\t\t\talert('You can not deleted this folder');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'delete', files, function (results) {\n\t\t\t\t\tthis._dBus.send('files', 'delete', [currentPath, results]);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\n\t\tcutFile: function () {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar filesToCut = this.getView().returnSelected();\n\n\t\t\t\tvar filesToCut_files = new Array();\n\t\t\t\tfor (var i = 0; i < filesToCut.length; ++i) {\n\t\t\t\t\tfilesToCut_files.push(filesToCut[i].getFile());\n\t\t\t\t}\n\t\t\t\tthis._dBus.send('files', 'cut', [currentPath, filesToCut_files]);\n\t\t\t\tthis._filesQueue.fillMoveQueue('move', filesToCut, currentPath);\n\t\t\t}\n\t\t},\n\n\t\tcopyFile: function () {\n\t\t\tvar filesToCopy = this.getView().returnSelected();\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tthis._filesQueue.fillMoveQueue('copy', filesToCopy, currentPath);\n\t\t},\n\n\t\tpasteFile: function () {\n\t\t\tvar filesToPaste = this._filesQueue.getMoveQueue();\n\t\t\tif (filesToPaste.length >= 1) {\n\t\t\t\tvar source = this._filesQueue.getMoveSource();\n\t\t\t\tvar target = this.getModel().getCurrentPath()[1];\n\t\t\t\tvar action = this._filesQueue.getAction();\n\t\t\t\tvar files = new Array();\n\n\t\t\t\tfor (var i = 0; i < filesToPaste.length; ++i) {\n\t\t\t\t\tif (action == 'move') {\n\t\t\t\t\t\tif (target != filesToPaste[i].getPath()) {\n\t\t\t\t\t\t\tfiles.push(filesToPaste[i].getAbsolutePath());\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfiles.push(filesToPaste[i].getAbsolutePath());\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (files.length >= 1) {\n\t\t\t\t\tfiles.unshift(target);\n\t\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), action, files, function (results) {\n\t\t\t\t\t\tthis._dBus.send('files', 'paste', [filesToPaste, action, source, target, results]);\n\t\t\t\t\t\tif (action == 'move') {\n\t\t\t\t\t\t\tthis._filesQueue.setMoveQueue([]);\n\t\t\t\t\t\t\tthis._filesQueue.setAction('');\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this, {\"dontAutoCatchExceptions\": true});\n\t\t\t\t} else {\n\t\t\t\t\tthis._dBus.send('files', 'paste', [filesToPaste, action, source, target]);\n\t\t\t\t\t\tif (action == 'move') {\n\t\t\t\t\t\t\tthis._filesQueue.setMoveQueue([]);\n\t\t\t\t\t\t\tthis._filesQueue.setAction('');\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\teditFile: function () {\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (currentPath.substr(0, 8) != 'share:\/\/' && currentPath != 'workgroup:\/\/') {\n\t\t\t\tvar selected = this.getView().returnSelected();\n\t\t\t\tif (selected.length == 1) {\n\t\t\t\t\tselected[0].edit();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\trenameFile: function (rename, object, file) {\n\t\t\tif(!file) {\n\t\t\t\tvar selected = this.getView().returnSelected()[0];\n\t\t\t} else {\n\t\t\t\tvar selected = file;\n\t\t\t}\n\t\t\n\t\t\tvar absPath = selected.getFile().getAbsolutePath();\n\t\t\tvar currentPath = this.getModel().getCurrentPath()[1];\n\t\t\tif (selected.getFile().getName() != rename) {\n\t\t\t\teyeos.callMessage(this.getApplication().getChecknum(), 'rename', [absPath, currentPath, rename], function (results) {\n\t\t\t\t\tobject.setValue(rename);\n\t\t\t\t\tthis._dBus.send('files', 'rename', [absPath, currentPath, results]);\n\t\t\t\t}, this);\n\t\t\t}\n\t\t},\n\n\t\tdownloadFile: function (rename) {\n\t\t\tvar selected = this.getView().returnSelected();\n\t\t\teyeos.execute('download',this.getApplication().getChecknum(), [selected[0].getFile().getAbsolutePath()]);\n\t\t},\n\t\t\n\t\ttoolBarBack: function () {\n\t\t\tif (parseInt(this.getModel().getHistoryIndex() - 1) >= 0) {\n\t\t\t\tif (parseInt(this.getModel().getHistoryIndex() - 1) == 0) {\n\t\t\t\t\tthis.getModel().setCurrentPath(this.getModel().getHistory()[0]);\n\t\t\t\t} else {\n\t\t\t\t\tthis.getModel().setHistoryIndex(this.getModel().getHistoryIndex() - 1);\n\t\t\t\t\tthis.getModel().setCurrentPath(this.getModel().getHistory()[parseInt(this.getModel().getHistoryIndex() - 1)]);\n\t\t\t\t}\n\t\t\t\tthis._browse(false);\n\t\t\t} else {\n\t\t\t\tthis.getModel().setHistoryIndex(0);\n\t\t\t}\n\t\t},\n\n\t\ttoolBarForward: function () {\n\t\t\tif (parseInt(this.getModel().getHistoryIndex()+1) <= this.getModel().getHistory().length) {\n\t\t\t\tthis.getModel().setHistoryIndex(this.getModel().getHistoryIndex() + 1);\n\t\t\t} else {\n\t\t\t\tthis.getModel().setHistoryIndex(this.getModel().getHistory().length);\n\t\t\t}\n\t\t\tthis.getModel().setCurrentPath(this.getModel().getHistory()[this.getModel().getHistoryIndex()]);\n\t\t\tthis._browse(false);\n\t\t},\n\n\t\ttoolBarUpload: function () {\n                    eyeos.execute('upload', this.getApplication().getChecknum(), [this.getModel().getCurrentPath()[1]]);\n\t\t},\n\n        shareURLFile: function () {\n            var selected = this.getView().returnSelected();\n            eyeos.execute('urlshare', this.getApplication().getChecknum(), [selected[0].getFile().getAbsolutePath(), true]);\n        }\n\t}\n});\n\nfiles_application(342695633, 3749, []);"},"__eyeos_specialControlMessage_options":null});